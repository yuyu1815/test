/*    */ package ai.grazie.quota.spend;
/*    */ import kotlinx.serialization.KSerializer;
/*    */ import kotlinx.serialization.descriptors.SerialDescriptor;
/*    */ import kotlinx.serialization.encoding.CompositeDecoder;
/*    */ 
/*    */ @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN)
/*    */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/quota/spend/SpendData.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/quota/spend/SpendData;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "model-quota"})
/*    */ public final class $serializer implements GeneratedSerializer<SpendData> {
/*    */   @NotNull
/* 10 */   public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer1 = SpendData.access$get$childSerializers$cp(), arrayOfKSerializer2 = new KSerializer[10]; arrayOfKSerializer2[0] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer2[1] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer2[2] = (KSerializer)Credit$.serializer.INSTANCE; arrayOfKSerializer2[3] = arrayOfKSerializer1[3]; arrayOfKSerializer2[4] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer2[5] = (KSerializer)BooleanSerializer.INSTANCE; arrayOfKSerializer2[6] = (KSerializer)BooleanSerializer.INSTANCE; arrayOfKSerializer2[7] = BuiltinSerializersKt.getNullable((KSerializer)StringSerializer.INSTANCE); arrayOfKSerializer2[8] = BuiltinSerializersKt.getNullable((KSerializer)StringSerializer.INSTANCE); arrayOfKSerializer2[9] = (KSerializer)JsonObjectSerializer.INSTANCE; return (KSerializer<?>[])arrayOfKSerializer2; } @NotNull public SpendData deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; String str1 = null, str2 = null; Credit credit = null; SpendType spendType = null; String str3 = null; boolean bool1 = false, bool2 = false; String str4 = null, str5 = null; JsonObject jsonObject = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); KSerializer[] arrayOfKSerializer = SpendData.access$get$childSerializers$cp(); if (compositeDecoder.decodeSequentially()) { str1 = compositeDecoder.decodeStringElement(serialDescriptor, 0); i |= 0x1; str2 = compositeDecoder.decodeStringElement(serialDescriptor, 1); i |= 0x2; credit = (Credit)compositeDecoder.decodeSerializableElement(serialDescriptor, 2, (DeserializationStrategy)Credit$.serializer.INSTANCE, credit); i |= 0x4; spendType = (SpendType)compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)arrayOfKSerializer[3], spendType); i |= 0x8; str3 = compositeDecoder.decodeStringElement(serialDescriptor, 4); i |= 0x10; bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 5); i |= 0x20; bool2 = compositeDecoder.decodeBooleanElement(serialDescriptor, 6); i |= 0x40; str4 = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 7, (DeserializationStrategy)StringSerializer.INSTANCE, str4); i |= 0x80; str5 = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 8, (DeserializationStrategy)StringSerializer.INSTANCE, str5); i |= 0x100; jsonObject = (JsonObject)compositeDecoder.decodeSerializableElement(serialDescriptor, 9, (DeserializationStrategy)JsonObjectSerializer.INSTANCE, jsonObject); i |= 0x200; } else { while (bool) { int j = compositeDecoder.decodeElementIndex(serialDescriptor); switch (j) { case -1: bool = false; continue;case 0: str1 = compositeDecoder.decodeStringElement(serialDescriptor, 0); i |= 0x1; continue;case 1: str2 = compositeDecoder.decodeStringElement(serialDescriptor, 1); i |= 0x2; continue;case 2: credit = (Credit)compositeDecoder.decodeSerializableElement(serialDescriptor, 2, (DeserializationStrategy)Credit$.serializer.INSTANCE, credit); i |= 0x4; continue;case 3: spendType = (SpendType)compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)arrayOfKSerializer[3], spendType); i |= 0x8; continue;case 4: str3 = compositeDecoder.decodeStringElement(serialDescriptor, 4); i |= 0x10; continue;case 5: bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 5); i |= 0x20; continue;case 6: bool2 = compositeDecoder.decodeBooleanElement(serialDescriptor, 6); i |= 0x40; continue;case 7: str4 = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 7, (DeserializationStrategy)StringSerializer.INSTANCE, str4); i |= 0x80; continue;case 8: str5 = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 8, (DeserializationStrategy)StringSerializer.INSTANCE, str5); i |= 0x100; continue;case 9: jsonObject = (JsonObject)compositeDecoder.decodeSerializableElement(serialDescriptor, 9, (DeserializationStrategy)JsonObjectSerializer.INSTANCE, jsonObject); i |= 0x200; continue; }  throw new UnknownFieldException(j); }  }  compositeDecoder.endStructure(serialDescriptor); return new SpendData(i, str1, str2, credit, spendType, str3, bool1, bool2, str4, str5, jsonObject, null); } public void serialize(@NotNull Encoder encoder, @NotNull SpendData value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); SpendData.write$Self$model_quota(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("ai.grazie.quota.spend.SpendData", INSTANCE, 10); pluginGeneratedSerialDescriptor.addElement("serviceName", false); pluginGeneratedSerialDescriptor.addElement("serviceType", false); pluginGeneratedSerialDescriptor.addElement("spend", false); pluginGeneratedSerialDescriptor.addElement("spendType", false); pluginGeneratedSerialDescriptor.addElement("featureId", false); pluginGeneratedSerialDescriptor.addElement("reservedCapacity", false); pluginGeneratedSerialDescriptor.addElement("spendIfExceeded", true); pluginGeneratedSerialDescriptor.addElement("cloudProvider", true); pluginGeneratedSerialDescriptor.addElement("cloudRegion", true); pluginGeneratedSerialDescriptor.addElement("additionalData", true); descriptor = pluginGeneratedSerialDescriptor; }
/*    */ 
/*    */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\model-quota-jvm-0.4.32.jar!\ai\grazie\quota\spend\SpendData$$serializer.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */