/*    */ package ai.grazie.utils.json.schema;
/*    */ import java.util.List;
/*    */ import java.util.Map;
/*    */ import kotlin.jvm.internal.Intrinsics;
/*    */ import kotlinx.serialization.DeserializationStrategy;
/*    */ import kotlinx.serialization.EncodeDefault;
/*    */ import kotlinx.serialization.KSerializer;
/*    */ import kotlinx.serialization.descriptors.SerialDescriptor;
/*    */ import kotlinx.serialization.encoding.CompositeDecoder;
/*    */ import kotlinx.serialization.encoding.CompositeEncoder;
/*    */ import kotlinx.serialization.encoding.Encoder;
/*    */ import kotlinx.serialization.internal.PluginGeneratedSerialDescriptor;
/*    */ import kotlinx.serialization.internal.StringSerializer;
/*    */ import org.jetbrains.annotations.NotNull;
/*    */ import org.jetbrains.annotations.Nullable;
/*    */ 
/*    */ @SerialName("object")
/*    */ @Serializable
/*    */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000H\n\002\030\002\n\002\030\002\n\000\n\002\020\b\n\000\n\002\020\016\n\000\n\002\020%\n\000\n\002\020!\n\000\n\002\030\002\n\002\b\f\n\002\020\002\n\002\b\002\n\002\020\013\n\002\b\004\n\002\030\002\n\000\n\002\030\002\n\002\b\004\b\007\030\000 %2\0020\001:\002$%BM\b\021\022\006\020\002\032\0020\003\022\n\b\001\020\004\032\004\030\0010\005\022\024\020\006\032\020\022\004\022\0020\005\022\004\022\0020\001\030\0010\007\022\020\b\001\020\b\032\n\022\004\022\0020\005\030\0010\t\022\b\020\n\032\004\030\0010\013¢\006\002\020\fB5\022\n\b\002\020\004\032\004\030\0010\005\022\022\020\006\032\016\022\004\022\0020\005\022\004\022\0020\0010\007\022\016\b\002\020\b\032\b\022\004\022\0020\0050\t¢\006\002\020\rJ$\020\027\032\0020\0302\006\020\031\032\0020\0052\n\b\002\020\004\032\004\030\0010\0052\b\b\002\020\032\032\0020\033J$\020\034\032\0020\0302\006\020\031\032\0020\0052\n\b\002\020\004\032\004\030\0010\0052\b\b\002\020\032\032\0020\033J&\020\035\032\0020\0302\006\020\036\032\0020\0002\006\020\037\032\0020 2\006\020!\032\0020\"HÁ\001¢\006\002\b#R\036\020\004\032\004\030\0010\0058\026X\004¢\006\016\n\000\022\004\b\016\020\017\032\004\b\020\020\021R\035\020\006\032\016\022\004\022\0020\005\022\004\022\0020\0010\007¢\006\b\n\000\032\004\b\022\020\023R\"\020\b\032\b\022\004\022\0020\0050\t8\006X\004¢\006\016\n\000\022\004\b\024\020\017\032\004\b\025\020\026¨\006&"}, d2 = {"Lai/grazie/utils/json/schema/JSONSchemaType$JSONObjectType;", "Lai/grazie/utils/json/schema/JSONSchemaType;", "seen1", "", "description", "", "properties", "", "required", "", "serializationConstructorMarker", "Lkotlinx/serialization/internal/SerializationConstructorMarker;", "(ILjava/lang/String;Ljava/util/Map;Ljava/util/List;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V", "(Ljava/lang/String;Ljava/util/Map;Ljava/util/List;)V", "getDescription$annotations", "()V", "getDescription", "()Ljava/lang/String;", "getProperties", "()Ljava/util/Map;", "getRequired$annotations", "getRequired", "()Ljava/util/List;", "integer", "", "name", "optional", "", "string", "write$Self", "self", "output", "Lkotlinx/serialization/encoding/CompositeEncoder;", "serialDesc", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "write$Self$utils_common", "$serializer", "Companion", "utils-common"})
/*    */ public final class JSONObjectType implements JSONSchemaType {
/*    */   @NotNull
/* 22 */   public static final Companion Companion = new Companion(null);
/*    */   @Nullable private final String description; @NotNull private final Map<String, JSONSchemaType> properties; @NotNull private final List<String> required; @JvmField @NotNull private static final KSerializer<Object>[] $childSerializers; static { KSerializer[] arrayOfKSerializer1 = new KSerializer[3]; arrayOfKSerializer1[0] = null; KClass[] arrayOfKClass = new KClass[3]; arrayOfKClass[0] = Reflection.getOrCreateKotlinClass(JSONSchemaType.JSONIntegerType.class); arrayOfKClass[1] = Reflection.getOrCreateKotlinClass(JSONObjectType.class); arrayOfKClass[2] = Reflection.getOrCreateKotlinClass(JSONSchemaType.JSONStringType.class); KSerializer[] arrayOfKSerializer2 = new KSerializer[3]; arrayOfKSerializer2[0] = (KSerializer)JSONSchemaType.JSONIntegerType.$serializer.INSTANCE; arrayOfKSerializer2[1] = (KSerializer)$serializer.INSTANCE; arrayOfKSerializer2[2] = (KSerializer)JSONSchemaType.JSONStringType.$serializer.INSTANCE; arrayOfKSerializer1[1] = (KSerializer)new LinkedHashMapSerializer((KSerializer)StringSerializer.INSTANCE, (KSerializer)new SealedClassSerializer("ai.grazie.utils.json.schema.JSONSchemaType", Reflection.getOrCreateKotlinClass(JSONSchemaType.class), arrayOfKClass, arrayOfKSerializer2, new java.lang.annotation.Annotation[0]));
/*    */     arrayOfKSerializer1[2] = (KSerializer)new ArrayListSerializer((KSerializer)StringSerializer.INSTANCE);
/* 25 */     $childSerializers = (KSerializer<Object>[])arrayOfKSerializer1; } public JSONObjectType(@Nullable String description, @NotNull Map<String, JSONSchemaType> properties, @NotNull List<String> required) { this.description = description;
/* 26 */     this.properties = properties;
/* 27 */     this.required = required; } @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN) @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/utils/json/schema/JSONSchemaType.JSONObjectType.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/utils/json/schema/JSONSchemaType$JSONObjectType;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "utils-common"}) public static final class $serializer implements GeneratedSerializer<JSONObjectType> { @NotNull public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer1 = (KSerializer[])JSONSchemaType.JSONObjectType.$childSerializers, arrayOfKSerializer2 = new KSerializer[3]; arrayOfKSerializer2[0] = BuiltinSerializersKt.getNullable((KSerializer)StringSerializer.INSTANCE); arrayOfKSerializer2[1] = arrayOfKSerializer1[1]; arrayOfKSerializer2[2] = arrayOfKSerializer1[2]; return (KSerializer<?>[])arrayOfKSerializer2; } @NotNull public JSONSchemaType.JSONObjectType deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; String str = null; Map map = null; List list = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); KSerializer[] arrayOfKSerializer = (KSerializer[])JSONSchemaType.JSONObjectType.$childSerializers; if (compositeDecoder.decodeSequentially()) { str = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 0, (DeserializationStrategy)StringSerializer.INSTANCE, str); i |= 0x1; map = (Map)compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)arrayOfKSerializer[1], map); i |= 0x2; list = (List)compositeDecoder.decodeSerializableElement(serialDescriptor, 2, (DeserializationStrategy)arrayOfKSerializer[2], list); i |= 0x4; } else { while (bool) { int j = compositeDecoder.decodeElementIndex(serialDescriptor); switch (j) { case -1: bool = false; continue;case 0: str = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 0, (DeserializationStrategy)StringSerializer.INSTANCE, str); i |= 0x1; continue;case 1: map = (Map)compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)arrayOfKSerializer[1], map); i |= 0x2; continue;case 2: list = (List)compositeDecoder.decodeSerializableElement(serialDescriptor, 2, (DeserializationStrategy)arrayOfKSerializer[2], list); i |= 0x4; continue; }  throw new UnknownFieldException(j); }  }  compositeDecoder.endStructure(serialDescriptor); return new JSONSchemaType.JSONObjectType(i, str, map, list, null); } public void serialize(@NotNull Encoder encoder, @NotNull JSONSchemaType.JSONObjectType value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); JSONSchemaType.JSONObjectType.write$Self$utils_common(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("object", INSTANCE, 3); pluginGeneratedSerialDescriptor.addElement("description", true); pluginGeneratedSerialDescriptor.addElement("properties", false); pluginGeneratedSerialDescriptor.addElement("required", true); descriptor = pluginGeneratedSerialDescriptor; } } @NotNull public final List<String> getRequired() { return this.required; } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\020\000\n\002\b\002\n\002\030\002\n\002\030\002\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002J\017\020\003\032\b\022\004\022\0020\0050\004HÆ\001¨\006\006"}, d2 = {"Lai/grazie/utils/json/schema/JSONSchemaType$JSONObjectType$Companion;", "", "()V", "serializer", "Lkotlinx/serialization/KSerializer;", "Lai/grazie/utils/json/schema/JSONSchemaType$JSONObjectType;", "utils-common"}) public static final class Companion {
/*    */     private Companion() {} @NotNull public final KSerializer<JSONSchemaType.JSONObjectType> serializer() { return (KSerializer<JSONSchemaType.JSONObjectType>)JSONSchemaType.JSONObjectType.$serializer.INSTANCE; } }
/*    */   @Nullable public String getDescription() { return this.description; }
/*    */   @NotNull public final Map<String, JSONSchemaType> getProperties() { return this.properties; }
/* 31 */   public final void string(@NotNull String name, @Nullable String description, boolean optional) { Intrinsics.checkNotNullParameter(name, "name"); this.properties.put(name, new JSONSchemaType.JSONStringType(description));
/* 32 */     if (!optional) this.required.add(name);  }
/*    */ 
/*    */   
/*    */   public final void integer(@NotNull String name, @Nullable String description, boolean optional) {
/* 36 */     Intrinsics.checkNotNullParameter(name, "name"); this.properties.put(name, new JSONSchemaType.JSONIntegerType(description));
/* 37 */     if (!optional) this.required.add(name); 
/*    */   }
/*    */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\li\\utils-common-jvm-0.4.32.jar!\ai\grazi\\utils\json\schema\JSONSchemaType$JSONObjectType.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */