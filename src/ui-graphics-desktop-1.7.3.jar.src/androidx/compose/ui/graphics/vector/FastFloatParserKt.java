/*     */ package androidx.compose.ui.graphics.vector;
/*     */ 
/*     */ import kotlin.Metadata;
/*     */ import kotlin.jvm.internal.SourceDebugExtension;
/*     */ import org.jetbrains.annotations.NotNull;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ @Metadata(mv = {1, 9, 0}, k = 2, xi = 48, d1 = {"\000:\n\000\n\002\020\b\n\002\b\004\n\002\030\002\n\002\b\006\n\002\020\024\n\002\b\004\n\002\020\007\n\002\020\t\n\002\b\006\n\002\020\013\n\002\020\f\n\002\b\006\n\002\020\016\n\002\b\b\032\031\020\035\032\0020\0232\006\020\036\032\0020\0232\006\020\037\032\0020\023H\b\032 \020 \032\0020\0232\006\020!\032\0020\"2\006\020#\032\0020\0012\006\020$\032\0020\001H\000\032\031\020%\032\0020\0232\006\020\026\032\0020\0012\006\020&\032\0020\022H\b\032\031\020'\032\0020\0012\006\020(\032\0020\"2\006\020)\032\0020\001H\b\"\016\020\000\032\0020\001XT¢\006\002\n\000\"\016\020\002\032\0020\001XT¢\006\002\n\000\"\016\020\003\032\0020\001XT¢\006\002\n\000\"\016\020\004\032\0020\001XT¢\006\002\n\000\"\034\020\005\032\0020\006X\004¢\006\020\n\002\020\013\022\004\b\007\020\b\032\004\b\t\020\n\"\032\020\f\032\0020\rX\004¢\006\016\n\000\022\004\b\016\020\b\032\004\b\017\020\020\"\031\020\021\032\0020\022*\0020\0238À\002X\004¢\006\006\032\004\b\024\020\025\"\031\020\026\032\0020\001*\0020\0238À\002X\004¢\006\006\032\004\b\027\020\030\"\031\020\031\032\0020\032*\0020\0338À\002X\004¢\006\006\032\004\b\031\020\034¨\006*"}, d2 = {"FloatMaxExponent", "", "FloatMaxExponentNumber", "FloatMinExponent", "FloatSmallestExponent", "Mantissa64", "Lkotlin/ULongArray;", "getMantissa64$annotations", "()V", "getMantissa64", "()[J", "[J", "PowersOfTen", "", "getPowersOfTen$annotations", "getPowersOfTen", "()[F", "floatValue", "", "", "getFloatValue", "(J)F", "index", "getIndex", "(J)I", "isDigit", "", "", "(C)Z", "fullMultiplicationHighBits", "x", "y", "nextFloat", "s", "", "start", "end", "pack", "value", "parseFourDigits", "str", "offset", "ui-graphics"})
/*     */ @SourceDebugExtension({"SMAP\nFastFloatParser.kt\nKotlin\n*S Kotlin\n*F\n+ 1 FastFloatParser.kt\nandroidx/compose/ui/graphics/vector/FastFloatParserKt\n+ 2 InlineClassHelper.jvm.kt\nandroidx/compose/ui/util/InlineClassHelper_jvmKt\n*L\n1#1,616:1\n580#1:618\n580#1:619\n577#1,4:620\n577#1:624\n603#1,11:625\n577#1:636\n580#1:637\n577#1:638\n580#1:639\n580#1:640\n580#1:641\n584#1,16:642\n580#1:658\n580#1:659\n580#1:661\n22#2:617\n24#2:660\n*S KotlinDebug\n*F\n+ 1 FastFloatParser.kt\nandroidx/compose/ui/graphics/vector/FastFloatParserKt\n*L\n58#1:618\n67#1:619\n71#1:620,4\n80#1:624\n99#1:625,11\n106#1:636\n117#1:637\n131#1:638\n206#1:639\n213#1:640\n217#1:641\n224#1:642,16\n230#1:658\n246#1:659\n252#1:661\n44#1:617\n252#1:660\n*E\n"})
/*     */ public final class FastFloatParserKt
/*     */ {
/*     */   private static final int FloatMinExponent = -10;
/*     */   private static final int FloatMaxExponent = 10;
/*     */   private static final int FloatSmallestExponent = -325;
/*     */   private static final int FloatMaxExponentNumber = 1024;
/*     */   @NotNull
/*     */   private static final float[] PowersOfTen;
/*     */   @NotNull
/*     */   private static final long[] Mantissa64;
/*     */   
/*     */   @NotNull
/*     */   public static final float[] getPowersOfTen() {
/*  39 */     return PowersOfTen; } static {
/*  40 */     float[] arrayOfFloat = new float[11]; arrayOfFloat[0] = 1.0F; arrayOfFloat[1] = 10.0F; arrayOfFloat[2] = 100.0F; arrayOfFloat[3] = 1000.0F; arrayOfFloat[4] = 10000.0F; arrayOfFloat[5] = 100000.0F; arrayOfFloat[6] = 1000000.0F; arrayOfFloat[7] = 1.0E7F; arrayOfFloat[8] = 1.0E8F; arrayOfFloat[9] = 1.0E9F; arrayOfFloat[10] = 1.0E10F; PowersOfTen = arrayOfFloat;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */     
/* 258 */     long[] arrayOfLong = new long[634]; arrayOfLong[0] = -6499023860262858360L; arrayOfLong[1] = -3512093806901185046L; arrayOfLong[2] = 
/* 259 */       -9112587656954322510L; arrayOfLong[3] = -6779048552765515233L;
/* 260 */     arrayOfLong[4] = -3862124672529506138L; arrayOfLong[5] = -215969822234494768L;
/* 261 */     arrayOfLong[6] = -7052510166537641086L; arrayOfLong[7] = -4203951689744663454L;
/* 262 */     arrayOfLong[8] = -643253593753441413L; arrayOfLong[9] = -7319562523736982739L;
/* 263 */     arrayOfLong[10] = -4537767136243840520L; arrayOfLong[11] = -1060522901877412746L;
/* 264 */     arrayOfLong[12] = -7580355841314464822L; arrayOfLong[13] = -4863758783215693124L;
/* 265 */     arrayOfLong[14] = -1468012460592228501L; arrayOfLong[15] = -7835036815511224669L;
/* 266 */     arrayOfLong[16] = -5182110000961642932L; arrayOfLong[17] = -1865951482774665761L;
/* 267 */     arrayOfLong[18] = -8083748704375247957L; arrayOfLong[19] = -5492999862041672042L;
/* 268 */     arrayOfLong[20] = -2254563809124702148L; arrayOfLong[21] = -8326631408344020699L;
/* 269 */     arrayOfLong[22] = -5796603242002637969L; arrayOfLong[23] = -2634068034075909558L;
/* 270 */     arrayOfLong[24] = -8563821548938525330L; arrayOfLong[25] = -6093090917745768758L;
/* 271 */     arrayOfLong[26] = -3004677628754823043L; arrayOfLong[27] = -8795452545612846258L;
/* 272 */     arrayOfLong[28] = -6382629663588669919L; arrayOfLong[29] = -3366601061058449494L;
/* 273 */     arrayOfLong[30] = -9021654690802612790L; arrayOfLong[31] = -6665382345075878084L;
/* 274 */     arrayOfLong[32] = -3720041912917459700L; arrayOfLong[33] = -38366372719436721L;
/* 275 */     arrayOfLong[34] = -6941508010590729807L; arrayOfLong[35] = -4065198994811024355L;
/* 276 */     arrayOfLong[36] = -469812725086392539L; arrayOfLong[37] = -7211161980820077193L;
/* 277 */     arrayOfLong[38] = -4402266457597708587L; arrayOfLong[39] = -891147053569747830L;
/* 278 */     arrayOfLong[40] = -7474495936122174250L; arrayOfLong[41] = -4731433901725329908L;
/* 279 */     arrayOfLong[42] = -1302606358729274481L; arrayOfLong[43] = -7731658001846878407L;
/* 280 */     arrayOfLong[44] = -5052886483881210105L; arrayOfLong[45] = -1704422086424124727L;
/* 281 */     arrayOfLong[46] = -7982792831656159810L; arrayOfLong[47] = -5366805021142811859L;
/* 282 */     arrayOfLong[48] = -2096820258001126919L; arrayOfLong[49] = -8228041688891786181L;
/* 283 */     arrayOfLong[50] = -5673366092687344822L; arrayOfLong[51] = -2480021597431793123L;
/* 284 */     arrayOfLong[52] = -8467542526035952558L; arrayOfLong[53] = -5972742139117552794L;
/* 285 */     arrayOfLong[54] = -2854241655469553088L; arrayOfLong[55] = -8701430062309552536L;
/* 286 */     arrayOfLong[56] = -6265101559459552766L; arrayOfLong[57] = -3219690930897053053L;
/* 287 */     arrayOfLong[58] = -8929835859451740015L; arrayOfLong[59] = -6550608805887287114L;
/* 288 */     arrayOfLong[60] = -3576574988931720989L; arrayOfLong[61] = -9152888395723407474L;
/* 289 */     arrayOfLong[62] = -6829424476226871438L; arrayOfLong[63] = -3925094576856201394L;
/* 290 */     arrayOfLong[64] = -294682202642863838L; arrayOfLong[65] = -7101705404292871755L;
/* 291 */     arrayOfLong[66] = -4265445736938701790L; arrayOfLong[67] = -720121152745989333L;
/* 292 */     arrayOfLong[68] = -7367604748107325189L; arrayOfLong[69] = -4597819916706768583L;
/* 293 */     arrayOfLong[70] = -1135588877456072824L; arrayOfLong[71] = -7627272076051127371L;
/* 294 */     arrayOfLong[72] = -4922404076636521310L; arrayOfLong[73] = -1541319077368263733L;
/* 295 */     arrayOfLong[74] = -7880853450996246689L; arrayOfLong[75] = -5239380795317920458L;
/* 296 */     arrayOfLong[76] = -1937539975720012668L; arrayOfLong[77] = -8128491512466089774L;
/* 297 */     arrayOfLong[78] = -5548928372155224313L; arrayOfLong[79] = -2324474446766642487L;
/* 298 */     arrayOfLong[80] = -8370325556870233411L; arrayOfLong[81] = -5851220927660403859L;
/* 299 */     arrayOfLong[82] = -2702340141148116920L; arrayOfLong[83] = -8606491615858654931L;
/* 300 */     arrayOfLong[84] = -6146428501395930760L; arrayOfLong[85] = -3071349608317525546L;
/* 301 */     arrayOfLong[86] = -8837122532839535322L; arrayOfLong[87] = -6434717147622031249L;
/* 302 */     arrayOfLong[88] = -3431710416100151157L; arrayOfLong[89] = -9062348037703676329L;
/* 303 */     arrayOfLong[90] = -6716249028702207507L; arrayOfLong[91] = -3783625267450371480L;
/* 304 */     arrayOfLong[92] = -117845565885576446L; arrayOfLong[93] = -6991182506319567135L;
/* 305 */     arrayOfLong[94] = -4127292114472071014L; arrayOfLong[95] = -547429124662700864L;
/* 306 */     arrayOfLong[96] = -7259672230555269896L; arrayOfLong[97] = -4462904269766699466L;
/* 307 */     arrayOfLong[98] = -966944318780986428L; arrayOfLong[99] = -7521869226879198374L;
/* 308 */     arrayOfLong[100] = -4790650515171610063L; arrayOfLong[101] = -1376627125537124675L;
/* 309 */     arrayOfLong[102] = -7777920981101784778L; arrayOfLong[103] = -5110715207949843068L;
/* 310 */     arrayOfLong[104] = -1776707991509915931L; arrayOfLong[105] = -8027971522334779313L;
/* 311 */     arrayOfLong[106] = -5423278384491086237L; arrayOfLong[107] = -2167411962186469893L;
/* 312 */     arrayOfLong[108] = -8272161504007625539L; arrayOfLong[109] = -5728515861582144020L;
/* 313 */     arrayOfLong[110] = -2548958808550292121L; arrayOfLong[111] = -8510628282985014432L;
/* 314 */     arrayOfLong[112] = -6026599335303880135L; arrayOfLong[113] = -2921563150702462265L;
/* 315 */     arrayOfLong[114] = -8743505996830120772L; arrayOfLong[115] = -6317696477610263061L;
/* 316 */     arrayOfLong[116] = -3285434578585440922L; arrayOfLong[117] = -8970925639256982432L;
/* 317 */     arrayOfLong[118] = -6601971030643840136L; arrayOfLong[119] = -3640777769877412266L;
/* 318 */     arrayOfLong[120] = -9193015133814464522L; arrayOfLong[121] = -6879582898840692749L;
/* 319 */     arrayOfLong[122] = -3987792605123478032L; arrayOfLong[123] = -373054737976959636L;
/* 320 */     arrayOfLong[124] = -7150688238876681629L; arrayOfLong[125] = -4326674280168464132L;
/* 321 */     arrayOfLong[126] = -796656831783192261L; arrayOfLong[127] = -7415439547505577019L;
/* 322 */     arrayOfLong[128] = -4657613415954583370L; arrayOfLong[129] = -1210330751515841308L;
/* 323 */     arrayOfLong[130] = -7673985747338482674L; arrayOfLong[131] = -4980796165745715438L;
/* 324 */     arrayOfLong[132] = -1614309188754756393L; arrayOfLong[133] = -7926472270612804602L;
/* 325 */     arrayOfLong[134] = -5296404319838617848L; arrayOfLong[135] = -2008819381370884406L;
/* 326 */     arrayOfLong[136] = -8173041140997884610L; arrayOfLong[137] = -5604615407819967859L;
/* 327 */     arrayOfLong[138] = -2394083241347571919L; arrayOfLong[139] = -8413831053483314306L;
/* 328 */     arrayOfLong[140] = -5905602798426754978L; arrayOfLong[141] = -2770317479606055818L;
/* 329 */     arrayOfLong[142] = -8648977452394866743L; arrayOfLong[143] = -6199535797066195524L;
/* 330 */     arrayOfLong[144] = -3137733727905356501L; arrayOfLong[145] = -8878612607581929669L;
/* 331 */     arrayOfLong[146] = -6486579741050024183L; arrayOfLong[147] = -3496538657885142324L;
/* 332 */     arrayOfLong[148] = -9102865688819295809L; arrayOfLong[149] = -6766896092596731857L;
/* 333 */     arrayOfLong[150] = -3846934097318526917L; arrayOfLong[151] = -196981603220770742L;
/* 334 */     arrayOfLong[152] = -7040642529654063570L; arrayOfLong[153] = -4189117143640191558L;
/* 335 */     arrayOfLong[154] = -624710411122851544L; arrayOfLong[155] = -7307973034592864071L;
/* 336 */     arrayOfLong[156] = -4523280274813692185L; arrayOfLong[157] = -1042414325089727327L;
/* 337 */     arrayOfLong[158] = -7569037980822161435L; arrayOfLong[159] = -4849611457600313890L;
/* 338 */     arrayOfLong[160] = -1450328303573004458L; arrayOfLong[161] = -7823984217374209643L;
/* 339 */     arrayOfLong[162] = -5168294253290374149L; arrayOfLong[163] = -1848681798185579782L;
/* 340 */     arrayOfLong[164] = -8072955151507069220L; arrayOfLong[165] = -5479507920956448621L;
/* 341 */     arrayOfLong[166] = -2237698882768172872L; arrayOfLong[167] = -8316090829371189901L;
/* 342 */     arrayOfLong[168] = -5783427518286599473L; arrayOfLong[169] = -2617598379430861437L;
/* 343 */     arrayOfLong[170] = -8553528014785370254L; arrayOfLong[171] = -6080224000054324913L;
/* 344 */     arrayOfLong[172] = -2988593981640518238L; arrayOfLong[173] = -8785400266166405755L;
/* 345 */     arrayOfLong[174] = -6370064314280619289L; arrayOfLong[175] = -3350894374423386208L;
/* 346 */     arrayOfLong[176] = -9011838011655698236L; arrayOfLong[177] = -6653111496142234891L;
/* 347 */     arrayOfLong[178] = -3704703351750405709L; arrayOfLong[179] = -19193171260619233L;
/* 348 */     arrayOfLong[180] = -6929524759678968877L; arrayOfLong[181] = -4050219931171323192L;
/* 349 */     arrayOfLong[182] = -451088895536766085L; arrayOfLong[183] = -7199459587351560659L;
/* 350 */     arrayOfLong[184] = -4387638465762062920L; arrayOfLong[185] = -872862063775190746L;
/* 351 */     arrayOfLong[186] = -7463067817500576073L; arrayOfLong[187] = -4717148753448332187L;
/* 352 */     arrayOfLong[188] = -1284749923383027329L; arrayOfLong[189] = -7720497729755473937L;
/* 353 */     arrayOfLong[190] = -5038936143766954517L; arrayOfLong[191] = -1686984161281305242L;
/* 354 */     arrayOfLong[192] = -7971894128441897632L; arrayOfLong[193] = -5353181642124984136L;
/* 355 */     arrayOfLong[194] = -2079791034228842266L; arrayOfLong[195] = -8217398424034108273L;
/* 356 */     arrayOfLong[196] = -5660062011615247437L; arrayOfLong[197] = -2463391496091671392L;
/* 357 */     arrayOfLong[198] = -8457148712698376476L; arrayOfLong[199] = -5959749872445582691L;
/* 358 */     arrayOfLong[200] = -2838001322129590460L; arrayOfLong[201] = -8691279853972075893L;
/* 359 */     arrayOfLong[202] = -6252413799037706963L; arrayOfLong[203] = -3203831230369745799L;
/* 360 */     arrayOfLong[204] = -8919923546622172981L; arrayOfLong[205] = -6538218414850328322L;
/* 361 */     arrayOfLong[206] = -3561087000135522498L; arrayOfLong[207] = -9143208402725783417L;
/* 362 */     arrayOfLong[208] = -6817324484979841368L; arrayOfLong[209] = -3909969587797413806L;
/* 363 */     arrayOfLong[210] = -275775966319379353L; arrayOfLong[211] = -7089889006590693952L;
/* 364 */     arrayOfLong[212] = -4250675239810979535L; arrayOfLong[213] = -701658031336336515L;
/* 365 */     arrayOfLong[214] = -7356065297226292178L; arrayOfLong[215] = -4583395603105477319L;
/* 366 */     arrayOfLong[216] = -1117558485454458744L; arrayOfLong[217] = -7616003081050118571L;
/* 367 */     arrayOfLong[218] = -4908317832885260310L; arrayOfLong[219] = -1523711272679187483L;
/* 368 */     arrayOfLong[220] = -7869848573065574033L; arrayOfLong[221] = -5225624697904579637L;
/* 369 */     arrayOfLong[222] = -1920344853953336643L; arrayOfLong[223] = -8117744561361917258L;
/* 370 */     arrayOfLong[224] = -5535494683275008668L; arrayOfLong[225] = -2307682335666372931L;
/* 371 */     arrayOfLong[226] = -8359830487432564938L; arrayOfLong[227] = -5838102090863318269L;
/* 372 */     arrayOfLong[228] = -2685941595151759932L; arrayOfLong[229] = -8596242524610931813L;
/* 373 */     arrayOfLong[230] = -6133617137336276863L; arrayOfLong[231] = -3055335403242958174L;
/* 374 */     arrayOfLong[232] = -8827113654667930715L; arrayOfLong[233] = -6422206049907525490L;
/* 375 */     arrayOfLong[234] = -3416071543957018958L; arrayOfLong[235] = -9052573742614218705L;
/* 376 */     arrayOfLong[236] = -6704031159840385477L; arrayOfLong[237] = -3768352931373093942L;
/* 377 */     arrayOfLong[238] = -98755145788979524L; arrayOfLong[239] = -6979250993759194058L;
/* 378 */     arrayOfLong[240] = -4112377723771604669L; arrayOfLong[241] = -528786136287117932L;
/* 379 */     arrayOfLong[242] = -7248020362820530564L; arrayOfLong[243] = -4448339435098275301L;
/* 380 */     arrayOfLong[244] = -948738275445456222L; arrayOfLong[245] = -7510490449794491995L;
/* 381 */     arrayOfLong[246] = -4776427043815727089L; arrayOfLong[247] = -1358847786342270957L;
/* 382 */     arrayOfLong[248] = -7766808894105001205L; arrayOfLong[249] = -5096825099203863602L;
/* 383 */     arrayOfLong[250] = -1759345355577441598L; arrayOfLong[251] = -8017119874876982855L;
/* 384 */     arrayOfLong[252] = -5409713825168840664L; arrayOfLong[253] = -2150456263033662926L;
/* 385 */     arrayOfLong[254] = -8261564192037121185L; arrayOfLong[255] = -5715269221619013577L;
/* 386 */     arrayOfLong[256] = -2532400508596379068L; arrayOfLong[257] = -8500279345513818773L;
/* 387 */     arrayOfLong[258] = -6013663163464885563L; arrayOfLong[259] = -2905392935903719049L;
/* 388 */     arrayOfLong[260] = -8733399612580906262L; arrayOfLong[261] = -6305063497298744923L;
/* 389 */     arrayOfLong[262] = -3269643353196043250L; arrayOfLong[263] = -8961056123388608887L;
/* 390 */     arrayOfLong[264] = -6589634135808373205L; arrayOfLong[265] = -3625356651333078602L;
/* 391 */     arrayOfLong[266] = -9183376934724255983L; arrayOfLong[267] = -6867535149977932074L;
/* 392 */     arrayOfLong[268] = -3972732919045027189L; arrayOfLong[269] = -354230130378896082L;
/* 393 */     arrayOfLong[270] = -7138922859127891907L; arrayOfLong[271] = -4311967555482476980L;
/* 394 */     arrayOfLong[272] = -778273425925708321L; arrayOfLong[273] = -7403949918844649557L;
/* 395 */     arrayOfLong[274] = -4643251380128424042L; arrayOfLong[275] = -1192378206733142148L;
/* 396 */     arrayOfLong[276] = -7662765406849295699L; arrayOfLong[277] = -4966770740134231719L;
/* 397 */     arrayOfLong[278] = -1596777406740401745L; arrayOfLong[279] = -7915514906853832947L;
/* 398 */     arrayOfLong[280] = -5282707615139903279L; arrayOfLong[281] = -1991698500497491195L;
/* 399 */     arrayOfLong[282] = -8162340590452013853L; arrayOfLong[283] = -5591239719637629412L;
/* 400 */     arrayOfLong[284] = -2377363631119648861L; arrayOfLong[285] = -8403381297090862394L;
/* 401 */     arrayOfLong[286] = -5892540602936190089L; arrayOfLong[287] = -2753989735242849707L;
/* 402 */     arrayOfLong[288] = -8638772612167862923L; arrayOfLong[289] = -6186779746782440750L;
/* 403 */     arrayOfLong[290] = -3121788665050663033L; arrayOfLong[291] = -8868646943297746252L;
/* 404 */     arrayOfLong[292] = -6474122660694794911L; arrayOfLong[293] = -3480967307441105734L;
/* 405 */     arrayOfLong[294] = -9093133594791772940L; arrayOfLong[295] = -6754730975062328271L;
/* 406 */     arrayOfLong[296] = -3831727700400522434L; arrayOfLong[297] = -177973607073265139L;
/* 407 */     arrayOfLong[298] = -7028762532061872568L; arrayOfLong[299] = -4174267146649952806L;
/* 408 */     arrayOfLong[300] = -606147914885053103L; arrayOfLong[301] = -7296371474444240046L;
/* 409 */     arrayOfLong[302] = -4508778324627912153L; arrayOfLong[303] = -1024286887357502287L;
/* 410 */     arrayOfLong[304] = -7557708332239520786L; arrayOfLong[305] = -4835449396872013078L;
/* 411 */     arrayOfLong[306] = -1432625727662628443L; arrayOfLong[307] = -7812920107430224633L;
/* 412 */     arrayOfLong[308] = -5154464115860392887L; arrayOfLong[309] = -1831394126398103205L;
/* 413 */     arrayOfLong[310] = -8062150356639896359L; arrayOfLong[311] = -5466001927372482545L;
/* 414 */     arrayOfLong[312] = -2220816390788215277L; arrayOfLong[313] = -8305539271883716405L;
/* 415 */     arrayOfLong[314] = -5770238071427257602L; arrayOfLong[315] = -2601111570856684098L;
/* 416 */     arrayOfLong[316] = -8543223759426509417L; arrayOfLong[317] = -6067343680855748868L;
/* 417 */     arrayOfLong[318] = -2972493582642298180L; arrayOfLong[319] = -8775337516792518219L;
/* 418 */     arrayOfLong[320] = -6357485877563259869L; arrayOfLong[321] = -3335171328526686933L;
/* 419 */     arrayOfLong[322] = -9002011107970261189L; arrayOfLong[323] = -6640827866535438582L;
/* 420 */     arrayOfLong[324] = -3689348814741910324L; arrayOfLong[325] = Long.MIN_VALUE;
/* 421 */     arrayOfLong[326] = -6917529027641081856L; arrayOfLong[327] = -4035225266123964416L;
/* 422 */     arrayOfLong[328] = -432345564227567616L; arrayOfLong[329] = -7187745005283311616L;
/* 423 */     arrayOfLong[330] = -4372995238176751616L; arrayOfLong[331] = -854558029293551616L;
/* 424 */     arrayOfLong[332] = -7451627795949551616L; arrayOfLong[333] = -4702848726509551616L;
/* 425 */     arrayOfLong[334] = -1266874889709551616L; arrayOfLong[335] = -7709325833709551616L;
/* 426 */     arrayOfLong[336] = -5024971273709551616L; arrayOfLong[337] = -1669528073709551616L;
/* 427 */     arrayOfLong[338] = -7960984073709551616L; arrayOfLong[339] = -5339544073709551616L;
/* 428 */     arrayOfLong[340] = -2062744073709551616L; arrayOfLong[341] = -8206744073709551616L;
/* 429 */     arrayOfLong[342] = -5646744073709551616L; arrayOfLong[343] = -2446744073709551616L;
/* 430 */     arrayOfLong[344] = -8446744073709551616L; arrayOfLong[345] = -5946744073709551616L;
/* 431 */     arrayOfLong[346] = -2821744073709551616L; arrayOfLong[347] = -8681119073709551616L;
/* 432 */     arrayOfLong[348] = -6239712823709551616L; arrayOfLong[349] = -3187955011209551616L;
/* 433 */     arrayOfLong[350] = -8910000909647051616L; arrayOfLong[351] = -6525815118631426616L;
/* 434 */     arrayOfLong[352] = -3545582879861895366L; arrayOfLong[353] = -9133518327554766460L;
/* 435 */     arrayOfLong[354] = -6805211891016070171L; arrayOfLong[355] = -3894828845342699810L;
/* 436 */     arrayOfLong[356] = -256850038250986858L; arrayOfLong[357] = -7078060301547948643L;
/* 437 */     arrayOfLong[358] = -4235889358507547899L; arrayOfLong[359] = -683175679707046970L;
/* 438 */     arrayOfLong[360] = -7344513827457986212L; arrayOfLong[361] = -4568956265895094861L;
/* 439 */     arrayOfLong[362] = -1099509313941480672L; arrayOfLong[363] = -7604722348854507276L;
/* 440 */     arrayOfLong[364] = -4894216917640746191L; arrayOfLong[365] = -1506085128623544835L;
/* 441 */     arrayOfLong[366] = -7858832233030797378L; arrayOfLong[367] = -5211854272861108819L;
/* 442 */     arrayOfLong[368] = -1903131822648998119L; arrayOfLong[369] = -8106986416796705681L;
/* 443 */     arrayOfLong[370] = -5522047002568494197L; arrayOfLong[371] = -2290872734783229842L;
/* 444 */     arrayOfLong[372] = -8349324486880600507L; arrayOfLong[373] = -5824969590173362730L;
/* 445 */     arrayOfLong[374] = -2669525969289315508L; arrayOfLong[375] = -8585982758446904049L;
/* 446 */     arrayOfLong[376] = -6120792429631242157L; arrayOfLong[377] = -3039304518611664792L;
/* 447 */     arrayOfLong[378] = -8817094351773372351L; arrayOfLong[379] = -6409681921289327535L;
/* 448 */     arrayOfLong[380] = -3400416383184271515L; arrayOfLong[381] = -9042789267131251553L;
/* 449 */     arrayOfLong[382] = -6691800565486676537L; arrayOfLong[383] = -3753064688430957767L;
/* 450 */     arrayOfLong[384] = -79644842111309304L; arrayOfLong[385] = -6967307053960650171L;
/* 451 */     arrayOfLong[386] = -4097447799023424810L; arrayOfLong[387] = -510123730351893109L;
/* 452 */     arrayOfLong[388] = -7236356359111015049L; arrayOfLong[389] = -4433759430461380907L;
/* 453 */     arrayOfLong[390] = -930513269649338230L; arrayOfLong[391] = -7499099821171918250L;
/* 454 */     arrayOfLong[392] = -4762188758037509908L; arrayOfLong[393] = -1341049929119499481L;
/* 455 */     arrayOfLong[394] = -7755685233340769032L; arrayOfLong[395] = -5082920523248573386L;
/* 456 */     arrayOfLong[396] = -1741964635633328828L; arrayOfLong[397] = -8006256924911912374L;
/* 457 */     arrayOfLong[398] = -5396135137712502563L; arrayOfLong[399] = -2133482903713240300L;
/* 458 */     arrayOfLong[400] = -8250955842461857044L; arrayOfLong[401] = -5702008784649933400L;
/* 459 */     arrayOfLong[402] = -2515824962385028846L; arrayOfLong[403] = -8489919629131724885L;
/* 460 */     arrayOfLong[404] = -6000713517987268202L; arrayOfLong[405] = -2889205879056697349L;
/* 461 */     arrayOfLong[406] = -8723282702051517699L; arrayOfLong[407] = -6292417359137009220L;
/* 462 */     arrayOfLong[408] = -3253835680493873621L; arrayOfLong[409] = -8951176327949752869L;
/* 463 */     arrayOfLong[410] = -6577284391509803182L; arrayOfLong[411] = -3609919470959866074L;
/* 464 */     arrayOfLong[412] = -9173728696990998152L; arrayOfLong[413] = -6855474852811359786L;
/* 465 */     arrayOfLong[414] = -3957657547586811828L; arrayOfLong[415] = -335385916056126881L;
/* 466 */     arrayOfLong[416] = -7127145225176161157L; arrayOfLong[417] = -4297245513042813542L;
/* 467 */     arrayOfLong[418] = -759870872876129024L; arrayOfLong[419] = -7392448323188662496L;
/* 468 */     arrayOfLong[420] = -4628874385558440216L; arrayOfLong[421] = -1174406963520662366L;
/* 469 */     arrayOfLong[422] = -7651533379841495835L; arrayOfLong[423] = -4952730706374481889L;
/* 470 */     arrayOfLong[424] = -1579227364540714458L; arrayOfLong[425] = -7904546130479028392L;
/* 471 */     arrayOfLong[426] = -5268996644671397586L; arrayOfLong[427] = -1974559787411859078L;
/* 472 */     arrayOfLong[428] = -8151628894773493780L; arrayOfLong[429] = -5577850100039479321L;
/* 473 */     arrayOfLong[430] = -2360626606621961247L; arrayOfLong[431] = -8392920656779807636L;
/* 474 */     arrayOfLong[432] = -5879464802547371641L; arrayOfLong[433] = -2737644984756826647L;
/* 475 */     arrayOfLong[434] = -8628557143114098510L; arrayOfLong[435] = -6174010410465235234L;
/* 476 */     arrayOfLong[436] = -3105826994654156138L; arrayOfLong[437] = -8858670899299929442L;
/* 477 */     arrayOfLong[438] = -6461652605697523899L; arrayOfLong[439] = -3465379738694516970L;
/* 478 */     arrayOfLong[440] = -9083391364325154962L; arrayOfLong[441] = -6742553186979055799L;
/* 479 */     arrayOfLong[442] = -3816505465296431844L; arrayOfLong[443] = -158945813193151901L;
/* 480 */     arrayOfLong[444] = -7016870160886801794L; arrayOfLong[445] = -4159401682681114339L;
/* 481 */     arrayOfLong[446] = -587566084924005019L; arrayOfLong[447] = -7284757830718584993L;
/* 482 */     arrayOfLong[448] = -4494261269970843337L; arrayOfLong[449] = -1006140569036166268L;
/* 483 */     arrayOfLong[450] = -7546366883288685774L; arrayOfLong[451] = -4821272585683469313L;
/* 484 */     arrayOfLong[452] = -1414904713676948737L; arrayOfLong[453] = -7801844473689174817L;
/* 485 */     arrayOfLong[454] = -5140619573684080617L; arrayOfLong[455] = -1814088448677712867L;
/* 486 */     arrayOfLong[456] = -8051334308064652398L; arrayOfLong[457] = -5452481866653427593L;
/* 487 */     arrayOfLong[458] = -2203916314889396588L; arrayOfLong[459] = -8294976724446954723L;
/* 488 */     arrayOfLong[460] = -5757034887131305500L; arrayOfLong[461] = -2584607590486743971L;
/* 489 */     arrayOfLong[462] = -8532908771695296838L; arrayOfLong[463] = -6054449946191733143L;
/* 490 */     arrayOfLong[464] = -2956376414312278525L; arrayOfLong[465] = -8765264286586255934L;
/* 491 */     arrayOfLong[466] = -6344894339805432014L; arrayOfLong[467] = -3319431906329402113L;
/* 492 */     arrayOfLong[468] = -8992173969096958177L; arrayOfLong[469] = -6628531442943809817L;
/* 493 */     arrayOfLong[470] = -3673978285252374367L; arrayOfLong[471] = -9213765455923815836L;
/* 494 */     arrayOfLong[472] = -6905520801477381891L; arrayOfLong[473] = -4020214983419339459L;
/* 495 */     arrayOfLong[474] = -413582710846786420L; arrayOfLong[475] = -7176018221920323369L;
/* 496 */     arrayOfLong[476] = -4358336758973016307L; arrayOfLong[477] = -836234930288882479L;
/* 497 */     arrayOfLong[478] = -7440175859071633406L; arrayOfLong[479] = -4688533805412153853L;
/* 498 */     arrayOfLong[480] = -1248981238337804412L; arrayOfLong[481] = -7698142301602209614L;
/* 499 */     arrayOfLong[482] = -5010991858575374113L; arrayOfLong[483] = -1652053804791829737L;
/* 500 */     arrayOfLong[484] = -7950062655635975442L; arrayOfLong[485] = -5325892301117581398L;
/* 501 */     arrayOfLong[486] = -2045679357969588844L; arrayOfLong[487] = -8196078626372074883L;
/* 502 */     arrayOfLong[488] = -5633412264537705700L; arrayOfLong[489] = -2430079312244744221L;
/* 503 */     arrayOfLong[490] = -8436328597794046994L; arrayOfLong[491] = -5933724728815170839L;
/* 504 */     arrayOfLong[492] = -2805469892591575644L; arrayOfLong[493] = -8670947710510816634L;
/* 505 */     arrayOfLong[494] = -6226998619711132888L; arrayOfLong[495] = -3172062256211528206L;
/* 506 */     arrayOfLong[496] = -8900067937773286985L; arrayOfLong[497] = -6513398903789220827L;
/* 507 */     arrayOfLong[498] = -3530062611309138130L; arrayOfLong[499] = -9123818159709293187L;
/* 508 */     arrayOfLong[500] = -6793086681209228580L; arrayOfLong[501] = -3879672333084147821L;
/* 509 */     arrayOfLong[502] = -237904397927796872L; arrayOfLong[503] = -7066219276345954901L;
/* 510 */     arrayOfLong[504] = -4221088077005055722L; arrayOfLong[505] = -664674077828931749L;
/* 511 */     arrayOfLong[506] = -7332950326284164199L; arrayOfLong[507] = -4554501889427817345L;
/* 512 */     arrayOfLong[508] = -1081441343357383777L; arrayOfLong[509] = -7593429867239446717L;
/* 513 */     arrayOfLong[510] = -4880101315621920492L; arrayOfLong[511] = -1488440626100012711L;
/* 514 */     arrayOfLong[512] = -7847804418953589800L; arrayOfLong[513] = -5198069505264599346L;
/* 515 */     arrayOfLong[514] = -1885900863153361279L; arrayOfLong[515] = -8096217067111932656L;
/* 516 */     arrayOfLong[516] = -5508585315462527915L; arrayOfLong[517] = -2274045625900771990L;
/* 517 */     arrayOfLong[518] = -8338807543829064350L; arrayOfLong[519] = -5811823411358942533L;
/* 518 */     arrayOfLong[520] = -2653093245771290262L; arrayOfLong[521] = -8575712306248138270L;
/* 519 */     arrayOfLong[522] = -6107954364382784934L; arrayOfLong[523] = -3023256937051093263L;
/* 520 */     arrayOfLong[524] = -8807064613298015146L; arrayOfLong[525] = -6397144748195131028L;
/* 521 */     arrayOfLong[526] = -3384744916816525881L; arrayOfLong[527] = -9032994600651410532L;
/* 522 */     arrayOfLong[528] = -6679557232386875260L; arrayOfLong[529] = -3737760522056206171L;
/* 523 */     arrayOfLong[530] = -60514634142869810L; arrayOfLong[531] = -6955350673980375487L;
/* 524 */     arrayOfLong[532] = -4082502324048081455L; arrayOfLong[533] = -491441886632713915L;
/* 525 */     arrayOfLong[534] = -7224680206786528053L; arrayOfLong[535] = -4419164240055772162L;
/* 526 */     arrayOfLong[536] = -912269281642327298L; arrayOfLong[537] = -7487697328667536418L;
/* 527 */     arrayOfLong[538] = -4747935642407032618L; arrayOfLong[539] = -1323233534581402868L;
/* 528 */     arrayOfLong[540] = -7744549986754458649L; arrayOfLong[541] = -5069001465015685407L;
/* 529 */     arrayOfLong[542] = -1724565812842218855L; arrayOfLong[543] = -7995382660667468640L;
/* 530 */     arrayOfLong[544] = -5382542307406947896L; arrayOfLong[545] = -2116491865831296966L;
/* 531 */     arrayOfLong[546] = -8240336443785642460L; arrayOfLong[547] = -5688734536304665171L;
/* 532 */     arrayOfLong[548] = -2499232151953443560L; arrayOfLong[549] = -8479549122611984081L;
/* 533 */     arrayOfLong[550] = -5987750384837592197L; arrayOfLong[551] = -2873001962619602342L;
/* 534 */     arrayOfLong[552] = -8713155254278333320L; arrayOfLong[553] = -6279758049420528746L;
/* 535 */     arrayOfLong[554] = -3238011543348273028L; arrayOfLong[555] = -8941286242233752499L;
/* 536 */     arrayOfLong[556] = -6564921784364802720L; arrayOfLong[557] = -3594466212028615495L;
/* 537 */     arrayOfLong[558] = -9164070410158966541L; arrayOfLong[559] = -6843401994271320272L;
/* 538 */     arrayOfLong[560] = -3942566474411762436L; arrayOfLong[561] = -316522074587315140L;
/* 539 */     arrayOfLong[562] = -7115355324258153819L; arrayOfLong[563] = -4282508136895304370L;
/* 540 */     arrayOfLong[564] = -741449152691742558L; arrayOfLong[565] = -7380934748073420955L;
/* 541 */     arrayOfLong[566] = -4614482416664388289L; arrayOfLong[567] = -1156417002403097458L;
/* 542 */     arrayOfLong[568] = -7640289654143017767L; arrayOfLong[569] = -4938676049251384305L;
/* 543 */     arrayOfLong[570] = -1561659043136842477L; arrayOfLong[571] = -7893565929601608404L;
/* 544 */     arrayOfLong[572] = -5255271393574622601L; arrayOfLong[573] = -1957403223540890347L;
/* 545 */     arrayOfLong[574] = -8140906042354138323L; arrayOfLong[575] = -5564446534515285000L;
/* 546 */     arrayOfLong[576] = -2343872149716718346L; arrayOfLong[577] = -8382449121214030822L;
/* 547 */     arrayOfLong[578] = -5866375383090150624L; arrayOfLong[579] = -2721283210435300376L;
/* 548 */     arrayOfLong[580] = -8618331034163144591L; arrayOfLong[581] = -6161227774276542835L;
/* 549 */     arrayOfLong[582] = -3089848699418290639L; arrayOfLong[583] = -8848684464777513506L;
/* 550 */     arrayOfLong[584] = -6449169562544503978L; arrayOfLong[585] = -3449775934753242068L;
/* 551 */     arrayOfLong[586] = -9073638986861858149L; arrayOfLong[587] = -6730362715149934782L;
/* 552 */     arrayOfLong[588] = -3801267375510030573L; arrayOfLong[589] = -139898200960150313L;
/* 553 */     arrayOfLong[590] = -7004965403241175802L; arrayOfLong[591] = -4144520735624081848L;
/* 554 */     arrayOfLong[592] = -568964901102714406L; arrayOfLong[593] = -7273132090830278360L;
/* 555 */     arrayOfLong[594] = -4479729095110460046L; arrayOfLong[595] = -987975350460687153L;
/* 556 */     arrayOfLong[596] = -7535013621679011327L; arrayOfLong[597] = -4807081008671376254L;
/* 557 */     arrayOfLong[598] = -1397165242411832414L; arrayOfLong[599] = -7790757304148477115L;
/* 558 */     arrayOfLong[600] = -5126760611758208489L; arrayOfLong[601] = -1796764746270372707L;
/* 559 */     arrayOfLong[602] = -8040506994060064798L; arrayOfLong[603] = -5438947724147693094L;
/* 560 */     arrayOfLong[604] = -2186998636757228463L; arrayOfLong[605] = -8284403175614349646L;
/* 561 */     arrayOfLong[606] = -5743817951090549153L; arrayOfLong[607] = -2568086420435798537L;
/* 562 */     arrayOfLong[608] = -8522583040413455942L; arrayOfLong[609] = -6041542782089432023L;
/* 563 */     arrayOfLong[610] = -2940242459184402125L; arrayOfLong[611] = -8755180564631333184L;
/* 564 */     arrayOfLong[612] = -6332289687361778576L; arrayOfLong[613] = -3303676090774835316L;
/* 565 */     arrayOfLong[614] = -8982326584375353929L; arrayOfLong[615] = -6616222212041804507L;
/* 566 */     arrayOfLong[616] = -3658591746624867729L; arrayOfLong[617] = -9204148869281624187L;
/* 567 */     arrayOfLong[618] = -6893500068174642330L; arrayOfLong[619] = -4005189066790915008L;
/* 568 */     arrayOfLong[620] = -394800315061255856L; arrayOfLong[621] = -7164279224554366766L;
/* 569 */     arrayOfLong[622] = -4343663012265570553L; arrayOfLong[623] = -817892746904575288L;
/* 570 */     arrayOfLong[624] = -7428711994456441411L; arrayOfLong[625] = -4674203974643163860L;
/* 571 */     arrayOfLong[626] = -1231068949876566920L; arrayOfLong[627] = -7686947121313936181L;
/* 572 */     arrayOfLong[628] = -4996997883215032323L; arrayOfLong[629] = -1634561335591402499L;
/* 573 */     arrayOfLong[630] = -7939129862385708418L; arrayOfLong[631] = -5312226309554747619L;
/* 574 */     arrayOfLong[632] = -2028596868516046619L; arrayOfLong[633] = -8185402070463610993L;
/*     */     Mantissa64 = arrayOfLong;
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public static final int getIndex(long $this$index) {
/*     */     int $i$f$getIndex = 0;
/*     */     return (int)($this$index >>> 32L);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public static final float getFloatValue(long $this$floatValue) {
/*     */     int $i$f$getFloatValue = 0, bits$iv = (int)($this$floatValue & 0xFFFFFFFFL), $i$f$floatFromBits = 0;
/* 617 */     return Float.intBitsToFloat(bits$iv);
/*     */   }
/*     */   
/*     */   public static final long nextFloat(@NotNull String s, int start, int end) {
/*     */     // Byte code:
/*     */     //   0: aload_0
/*     */     //   1: ldc 's'
/*     */     //   3: invokestatic checkNotNullParameter : (Ljava/lang/Object;Ljava/lang/String;)V
/*     */     //   6: iload_1
/*     */     //   7: iload_2
/*     */     //   8: if_icmpne -> 33
/*     */     //   11: ldc NaN
/*     */     //   13: fstore_3
/*     */     //   14: iconst_0
/*     */     //   15: istore #4
/*     */     //   17: iload_1
/*     */     //   18: i2l
/*     */     //   19: bipush #32
/*     */     //   21: lshl
/*     */     //   22: fload_3
/*     */     //   23: invokestatic floatToRawIntBits : (F)I
/*     */     //   26: i2l
/*     */     //   27: ldc2_w 4294967295
/*     */     //   30: land
/*     */     //   31: lor
/*     */     //   32: lreturn
/*     */     //   33: iload_1
/*     */     //   34: istore_3
/*     */     //   35: aload_0
/*     */     //   36: iload_3
/*     */     //   37: invokevirtual charAt : (I)C
/*     */     //   40: istore #4
/*     */     //   42: iload #4
/*     */     //   44: bipush #45
/*     */     //   46: if_icmpne -> 53
/*     */     //   49: iconst_1
/*     */     //   50: goto -> 54
/*     */     //   53: iconst_0
/*     */     //   54: istore #5
/*     */     //   56: iload #5
/*     */     //   58: ifeq -> 157
/*     */     //   61: iinc #3, 1
/*     */     //   64: iload_3
/*     */     //   65: iload_2
/*     */     //   66: if_icmpne -> 93
/*     */     //   69: ldc NaN
/*     */     //   71: fstore #6
/*     */     //   73: iconst_0
/*     */     //   74: istore #7
/*     */     //   76: iload_3
/*     */     //   77: i2l
/*     */     //   78: bipush #32
/*     */     //   80: lshl
/*     */     //   81: fload #6
/*     */     //   83: invokestatic floatToRawIntBits : (F)I
/*     */     //   86: i2l
/*     */     //   87: ldc2_w 4294967295
/*     */     //   90: land
/*     */     //   91: lor
/*     */     //   92: lreturn
/*     */     //   93: aload_0
/*     */     //   94: iload_3
/*     */     //   95: invokevirtual charAt : (I)C
/*     */     //   98: istore #4
/*     */     //   100: iload #4
/*     */     //   102: istore #6
/*     */     //   104: iconst_0
/*     */     //   105: istore #7
/*     */     //   107: iload #6
/*     */     //   109: bipush #48
/*     */     //   111: isub
/*     */     //   112: i2c
/*     */     //   113: bipush #10
/*     */     //   115: if_icmpge -> 122
/*     */     //   118: iconst_1
/*     */     //   119: goto -> 123
/*     */     //   122: iconst_0
/*     */     //   123: ifne -> 157
/*     */     //   126: iload #4
/*     */     //   128: bipush #46
/*     */     //   130: if_icmpeq -> 157
/*     */     //   133: ldc NaN
/*     */     //   135: fstore #6
/*     */     //   137: iconst_0
/*     */     //   138: istore #7
/*     */     //   140: iload_3
/*     */     //   141: i2l
/*     */     //   142: bipush #32
/*     */     //   144: lshl
/*     */     //   145: fload #6
/*     */     //   147: invokestatic floatToRawIntBits : (F)I
/*     */     //   150: i2l
/*     */     //   151: ldc2_w 4294967295
/*     */     //   154: land
/*     */     //   155: lor
/*     */     //   156: lreturn
/*     */     //   157: lconst_0
/*     */     //   158: lstore #6
/*     */     //   160: iload_3
/*     */     //   161: istore #8
/*     */     //   163: aload_0
/*     */     //   164: invokevirtual length : ()I
/*     */     //   167: istore #9
/*     */     //   169: iload_3
/*     */     //   170: iload_2
/*     */     //   171: if_icmpeq -> 238
/*     */     //   174: iload #4
/*     */     //   176: istore #10
/*     */     //   178: iconst_0
/*     */     //   179: istore #11
/*     */     //   181: iload #10
/*     */     //   183: bipush #48
/*     */     //   185: isub
/*     */     //   186: i2c
/*     */     //   187: bipush #10
/*     */     //   189: if_icmpge -> 196
/*     */     //   192: iconst_1
/*     */     //   193: goto -> 197
/*     */     //   196: iconst_0
/*     */     //   197: ifeq -> 238
/*     */     //   200: ldc2_w 10
/*     */     //   203: lload #6
/*     */     //   205: lmul
/*     */     //   206: iload #4
/*     */     //   208: bipush #48
/*     */     //   210: isub
/*     */     //   211: i2l
/*     */     //   212: ladd
/*     */     //   213: lstore #6
/*     */     //   215: iinc #3, 1
/*     */     //   218: iload_3
/*     */     //   219: iload #9
/*     */     //   221: if_icmpge -> 232
/*     */     //   224: aload_0
/*     */     //   225: iload_3
/*     */     //   226: invokevirtual charAt : (I)C
/*     */     //   229: goto -> 233
/*     */     //   232: iconst_0
/*     */     //   233: istore #4
/*     */     //   235: goto -> 169
/*     */     //   238: iload_3
/*     */     //   239: istore #10
/*     */     //   241: iload_3
/*     */     //   242: iload #8
/*     */     //   244: isub
/*     */     //   245: istore #11
/*     */     //   247: iconst_0
/*     */     //   248: istore #12
/*     */     //   250: iload_3
/*     */     //   251: istore #13
/*     */     //   253: iload_3
/*     */     //   254: istore #14
/*     */     //   256: iload_3
/*     */     //   257: iload_2
/*     */     //   258: if_icmpeq -> 501
/*     */     //   261: iload #4
/*     */     //   263: bipush #46
/*     */     //   265: if_icmpne -> 501
/*     */     //   268: iinc #3, 1
/*     */     //   271: iload_3
/*     */     //   272: istore #13
/*     */     //   274: iload_2
/*     */     //   275: iload_3
/*     */     //   276: isub
/*     */     //   277: iconst_4
/*     */     //   278: if_icmplt -> 399
/*     */     //   281: iconst_0
/*     */     //   282: istore #16
/*     */     //   284: aload_0
/*     */     //   285: iload_3
/*     */     //   286: invokevirtual charAt : (I)C
/*     */     //   289: i2l
/*     */     //   290: aload_0
/*     */     //   291: iload_3
/*     */     //   292: iconst_1
/*     */     //   293: iadd
/*     */     //   294: invokevirtual charAt : (I)C
/*     */     //   297: i2l
/*     */     //   298: bipush #16
/*     */     //   300: lshl
/*     */     //   301: lor
/*     */     //   302: aload_0
/*     */     //   303: iload_3
/*     */     //   304: iconst_2
/*     */     //   305: iadd
/*     */     //   306: invokevirtual charAt : (I)C
/*     */     //   309: i2l
/*     */     //   310: bipush #32
/*     */     //   312: lshl
/*     */     //   313: lor
/*     */     //   314: aload_0
/*     */     //   315: iload_3
/*     */     //   316: iconst_3
/*     */     //   317: iadd
/*     */     //   318: invokevirtual charAt : (I)C
/*     */     //   321: i2l
/*     */     //   322: bipush #48
/*     */     //   324: lshl
/*     */     //   325: lor
/*     */     //   326: lstore #17
/*     */     //   328: lload #17
/*     */     //   330: ldc2_w 13511005043687472
/*     */     //   333: lsub
/*     */     //   334: lstore #19
/*     */     //   336: lload #17
/*     */     //   338: ldc2_w 19703549022044230
/*     */     //   341: ladd
/*     */     //   342: lload #19
/*     */     //   344: lor
/*     */     //   345: lstore #21
/*     */     //   347: lload #21
/*     */     //   349: ldc2_w -35747867511423104
/*     */     //   352: land
/*     */     //   353: lconst_0
/*     */     //   354: lcmp
/*     */     //   355: ifeq -> 362
/*     */     //   358: iconst_m1
/*     */     //   359: goto -> 372
/*     */     //   362: lload #19
/*     */     //   364: ldc2_w 281475406208040961
/*     */     //   367: lmul
/*     */     //   368: bipush #48
/*     */     //   370: lushr
/*     */     //   371: l2i
/*     */     //   372: nop
/*     */     //   373: istore #15
/*     */     //   375: iload #15
/*     */     //   377: iflt -> 399
/*     */     //   380: ldc2_w 10000
/*     */     //   383: lload #6
/*     */     //   385: lmul
/*     */     //   386: iload #15
/*     */     //   388: i2l
/*     */     //   389: ladd
/*     */     //   390: lstore #6
/*     */     //   392: iinc #3, 4
/*     */     //   395: nop
/*     */     //   396: goto -> 274
/*     */     //   399: iload_3
/*     */     //   400: iload #9
/*     */     //   402: if_icmpge -> 413
/*     */     //   405: aload_0
/*     */     //   406: iload_3
/*     */     //   407: invokevirtual charAt : (I)C
/*     */     //   410: goto -> 414
/*     */     //   413: iconst_0
/*     */     //   414: istore #4
/*     */     //   416: iload_3
/*     */     //   417: iload_2
/*     */     //   418: if_icmpeq -> 485
/*     */     //   421: iload #4
/*     */     //   423: istore #15
/*     */     //   425: iconst_0
/*     */     //   426: istore #16
/*     */     //   428: iload #15
/*     */     //   430: bipush #48
/*     */     //   432: isub
/*     */     //   433: i2c
/*     */     //   434: bipush #10
/*     */     //   436: if_icmpge -> 443
/*     */     //   439: iconst_1
/*     */     //   440: goto -> 444
/*     */     //   443: iconst_0
/*     */     //   444: ifeq -> 485
/*     */     //   447: ldc2_w 10
/*     */     //   450: lload #6
/*     */     //   452: lmul
/*     */     //   453: iload #4
/*     */     //   455: bipush #48
/*     */     //   457: isub
/*     */     //   458: i2l
/*     */     //   459: ladd
/*     */     //   460: lstore #6
/*     */     //   462: iinc #3, 1
/*     */     //   465: iload_3
/*     */     //   466: iload #9
/*     */     //   468: if_icmpge -> 479
/*     */     //   471: aload_0
/*     */     //   472: iload_3
/*     */     //   473: invokevirtual charAt : (I)C
/*     */     //   476: goto -> 480
/*     */     //   479: iconst_0
/*     */     //   480: istore #4
/*     */     //   482: goto -> 416
/*     */     //   485: iload #13
/*     */     //   487: iload_3
/*     */     //   488: isub
/*     */     //   489: istore #12
/*     */     //   491: iload_3
/*     */     //   492: istore #14
/*     */     //   494: iload #11
/*     */     //   496: iload #12
/*     */     //   498: isub
/*     */     //   499: istore #11
/*     */     //   501: iload #11
/*     */     //   503: ifne -> 530
/*     */     //   506: ldc NaN
/*     */     //   508: fstore #15
/*     */     //   510: iconst_0
/*     */     //   511: istore #16
/*     */     //   513: iload_3
/*     */     //   514: i2l
/*     */     //   515: bipush #32
/*     */     //   517: lshl
/*     */     //   518: fload #15
/*     */     //   520: invokestatic floatToRawIntBits : (F)I
/*     */     //   523: i2l
/*     */     //   524: ldc2_w 4294967295
/*     */     //   527: land
/*     */     //   528: lor
/*     */     //   529: lreturn
/*     */     //   530: iconst_0
/*     */     //   531: istore #15
/*     */     //   533: iload #4
/*     */     //   535: bipush #32
/*     */     //   537: ior
/*     */     //   538: bipush #101
/*     */     //   540: if_icmpne -> 691
/*     */     //   543: iinc #3, 1
/*     */     //   546: iload_3
/*     */     //   547: iload #9
/*     */     //   549: if_icmpge -> 560
/*     */     //   552: aload_0
/*     */     //   553: iload_3
/*     */     //   554: invokevirtual charAt : (I)C
/*     */     //   557: goto -> 561
/*     */     //   560: iconst_0
/*     */     //   561: istore #4
/*     */     //   563: iload #4
/*     */     //   565: bipush #45
/*     */     //   567: if_icmpne -> 574
/*     */     //   570: iconst_1
/*     */     //   571: goto -> 575
/*     */     //   574: iconst_0
/*     */     //   575: istore #16
/*     */     //   577: iload #16
/*     */     //   579: ifne -> 589
/*     */     //   582: iload #4
/*     */     //   584: bipush #43
/*     */     //   586: if_icmpne -> 592
/*     */     //   589: iinc #3, 1
/*     */     //   592: aload_0
/*     */     //   593: iload_3
/*     */     //   594: invokevirtual charAt : (I)C
/*     */     //   597: istore #4
/*     */     //   599: iload_3
/*     */     //   600: iload_2
/*     */     //   601: if_icmpeq -> 674
/*     */     //   604: iload #4
/*     */     //   606: istore #17
/*     */     //   608: iconst_0
/*     */     //   609: istore #18
/*     */     //   611: iload #17
/*     */     //   613: bipush #48
/*     */     //   615: isub
/*     */     //   616: i2c
/*     */     //   617: bipush #10
/*     */     //   619: if_icmpge -> 626
/*     */     //   622: iconst_1
/*     */     //   623: goto -> 627
/*     */     //   626: iconst_0
/*     */     //   627: ifeq -> 674
/*     */     //   630: iload #15
/*     */     //   632: sipush #1024
/*     */     //   635: if_icmpge -> 651
/*     */     //   638: bipush #10
/*     */     //   640: iload #15
/*     */     //   642: imul
/*     */     //   643: iload #4
/*     */     //   645: bipush #48
/*     */     //   647: isub
/*     */     //   648: iadd
/*     */     //   649: istore #15
/*     */     //   651: iinc #3, 1
/*     */     //   654: iload_3
/*     */     //   655: iload #9
/*     */     //   657: if_icmpge -> 668
/*     */     //   660: aload_0
/*     */     //   661: iload_3
/*     */     //   662: invokevirtual charAt : (I)C
/*     */     //   665: goto -> 669
/*     */     //   668: iconst_0
/*     */     //   669: istore #4
/*     */     //   671: goto -> 599
/*     */     //   674: iload #16
/*     */     //   676: ifeq -> 684
/*     */     //   679: iload #15
/*     */     //   681: ineg
/*     */     //   682: istore #15
/*     */     //   684: iload #12
/*     */     //   686: iload #15
/*     */     //   688: iadd
/*     */     //   689: istore #12
/*     */     //   691: iconst_0
/*     */     //   692: istore #16
/*     */     //   694: iload #11
/*     */     //   696: bipush #19
/*     */     //   698: if_icmple -> 963
/*     */     //   701: iload #8
/*     */     //   703: istore #17
/*     */     //   705: aload_0
/*     */     //   706: iload #17
/*     */     //   708: invokevirtual charAt : (I)C
/*     */     //   711: istore #4
/*     */     //   713: iload_3
/*     */     //   714: iload_2
/*     */     //   715: if_icmpeq -> 767
/*     */     //   718: iload #4
/*     */     //   720: bipush #48
/*     */     //   722: if_icmpeq -> 732
/*     */     //   725: iload #4
/*     */     //   727: bipush #46
/*     */     //   729: if_icmpne -> 767
/*     */     //   732: iload #4
/*     */     //   734: bipush #48
/*     */     //   736: if_icmpne -> 742
/*     */     //   739: iinc #11, -1
/*     */     //   742: iinc #17, 1
/*     */     //   745: iload #17
/*     */     //   747: iload #9
/*     */     //   749: if_icmpge -> 761
/*     */     //   752: aload_0
/*     */     //   753: iload #17
/*     */     //   755: invokevirtual charAt : (I)C
/*     */     //   758: goto -> 762
/*     */     //   761: iconst_0
/*     */     //   762: istore #4
/*     */     //   764: goto -> 713
/*     */     //   767: iload #11
/*     */     //   769: bipush #19
/*     */     //   771: if_icmple -> 963
/*     */     //   774: iconst_1
/*     */     //   775: istore #16
/*     */     //   777: lconst_0
/*     */     //   778: lstore #6
/*     */     //   780: iload #8
/*     */     //   782: istore #17
/*     */     //   784: aload_0
/*     */     //   785: iload #17
/*     */     //   787: invokevirtual charAt : (I)C
/*     */     //   790: istore #4
/*     */     //   792: iload #17
/*     */     //   794: iload #10
/*     */     //   796: if_icmpeq -> 853
/*     */     //   799: lload #6
/*     */     //   801: invokestatic constructor-impl : (J)J
/*     */     //   804: ldc2_w 1000000000000000000
/*     */     //   807: invokestatic compareUnsigned : (JJ)I
/*     */     //   810: ifge -> 853
/*     */     //   813: ldc2_w 10
/*     */     //   816: lload #6
/*     */     //   818: lmul
/*     */     //   819: iload #4
/*     */     //   821: bipush #48
/*     */     //   823: isub
/*     */     //   824: i2l
/*     */     //   825: ladd
/*     */     //   826: lstore #6
/*     */     //   828: iinc #17, 1
/*     */     //   831: iload #17
/*     */     //   833: iload #9
/*     */     //   835: if_icmpge -> 847
/*     */     //   838: aload_0
/*     */     //   839: iload #17
/*     */     //   841: invokevirtual charAt : (I)C
/*     */     //   844: goto -> 848
/*     */     //   847: iconst_0
/*     */     //   848: istore #4
/*     */     //   850: goto -> 792
/*     */     //   853: lload #6
/*     */     //   855: invokestatic constructor-impl : (J)J
/*     */     //   858: ldc2_w 1000000000000000000
/*     */     //   861: invokestatic compareUnsigned : (JJ)I
/*     */     //   864: iflt -> 880
/*     */     //   867: iload #10
/*     */     //   869: iload #17
/*     */     //   871: isub
/*     */     //   872: iload #15
/*     */     //   874: iadd
/*     */     //   875: istore #12
/*     */     //   877: goto -> 963
/*     */     //   880: iload #13
/*     */     //   882: istore #17
/*     */     //   884: aload_0
/*     */     //   885: iload #17
/*     */     //   887: invokevirtual charAt : (I)C
/*     */     //   890: istore #4
/*     */     //   892: iload #17
/*     */     //   894: iload #14
/*     */     //   896: if_icmpeq -> 953
/*     */     //   899: lload #6
/*     */     //   901: invokestatic constructor-impl : (J)J
/*     */     //   904: ldc2_w 1000000000000000000
/*     */     //   907: invokestatic compareUnsigned : (JJ)I
/*     */     //   910: ifge -> 953
/*     */     //   913: ldc2_w 10
/*     */     //   916: lload #6
/*     */     //   918: lmul
/*     */     //   919: iload #4
/*     */     //   921: bipush #48
/*     */     //   923: isub
/*     */     //   924: i2l
/*     */     //   925: ladd
/*     */     //   926: lstore #6
/*     */     //   928: iinc #17, 1
/*     */     //   931: iload #17
/*     */     //   933: iload #9
/*     */     //   935: if_icmpge -> 947
/*     */     //   938: aload_0
/*     */     //   939: iload #17
/*     */     //   941: invokevirtual charAt : (I)C
/*     */     //   944: goto -> 948
/*     */     //   947: iconst_0
/*     */     //   948: istore #4
/*     */     //   950: goto -> 892
/*     */     //   953: iload #13
/*     */     //   955: iload #17
/*     */     //   957: isub
/*     */     //   958: iload #15
/*     */     //   960: iadd
/*     */     //   961: istore #12
/*     */     //   963: bipush #-10
/*     */     //   965: iload #12
/*     */     //   967: if_icmpgt -> 985
/*     */     //   970: iload #12
/*     */     //   972: bipush #11
/*     */     //   974: if_icmpge -> 981
/*     */     //   977: iconst_1
/*     */     //   978: goto -> 986
/*     */     //   981: iconst_0
/*     */     //   982: goto -> 986
/*     */     //   985: iconst_0
/*     */     //   986: ifeq -> 1083
/*     */     //   989: iload #16
/*     */     //   991: ifne -> 1083
/*     */     //   994: lload #6
/*     */     //   996: invokestatic constructor-impl : (J)J
/*     */     //   999: lconst_1
/*     */     //   1000: bipush #24
/*     */     //   1002: lshl
/*     */     //   1003: invokestatic constructor-impl : (J)J
/*     */     //   1006: invokestatic compareUnsigned : (JJ)I
/*     */     //   1009: ifgt -> 1083
/*     */     //   1012: lload #6
/*     */     //   1014: l2f
/*     */     //   1015: fstore #17
/*     */     //   1017: iload #12
/*     */     //   1019: ifge -> 1037
/*     */     //   1022: fload #17
/*     */     //   1024: getstatic androidx/compose/ui/graphics/vector/FastFloatParserKt.PowersOfTen : [F
/*     */     //   1027: iload #12
/*     */     //   1029: ineg
/*     */     //   1030: faload
/*     */     //   1031: fdiv
/*     */     //   1032: fstore #17
/*     */     //   1034: goto -> 1048
/*     */     //   1037: fload #17
/*     */     //   1039: getstatic androidx/compose/ui/graphics/vector/FastFloatParserKt.PowersOfTen : [F
/*     */     //   1042: iload #12
/*     */     //   1044: faload
/*     */     //   1045: fmul
/*     */     //   1046: fstore #17
/*     */     //   1048: iload #5
/*     */     //   1050: ifeq -> 1059
/*     */     //   1053: fload #17
/*     */     //   1055: fneg
/*     */     //   1056: goto -> 1061
/*     */     //   1059: fload #17
/*     */     //   1061: fstore #18
/*     */     //   1063: iconst_0
/*     */     //   1064: istore #19
/*     */     //   1066: iload_3
/*     */     //   1067: i2l
/*     */     //   1068: bipush #32
/*     */     //   1070: lshl
/*     */     //   1071: fload #18
/*     */     //   1073: invokestatic floatToRawIntBits : (F)I
/*     */     //   1076: i2l
/*     */     //   1077: ldc2_w 4294967295
/*     */     //   1080: land
/*     */     //   1081: lor
/*     */     //   1082: lreturn
/*     */     //   1083: lload #6
/*     */     //   1085: lconst_0
/*     */     //   1086: lcmp
/*     */     //   1087: ifne -> 1123
/*     */     //   1090: iload #5
/*     */     //   1092: ifeq -> 1100
/*     */     //   1095: ldc -0.0
/*     */     //   1097: goto -> 1101
/*     */     //   1100: fconst_0
/*     */     //   1101: fstore #17
/*     */     //   1103: iconst_0
/*     */     //   1104: istore #18
/*     */     //   1106: iload_3
/*     */     //   1107: i2l
/*     */     //   1108: bipush #32
/*     */     //   1110: lshl
/*     */     //   1111: fload #17
/*     */     //   1113: invokestatic floatToRawIntBits : (F)I
/*     */     //   1116: i2l
/*     */     //   1117: ldc2_w 4294967295
/*     */     //   1120: land
/*     */     //   1121: lor
/*     */     //   1122: lreturn
/*     */     //   1123: bipush #-126
/*     */     //   1125: iload #12
/*     */     //   1127: if_icmpgt -> 1146
/*     */     //   1130: iload #12
/*     */     //   1132: sipush #128
/*     */     //   1135: if_icmpge -> 1142
/*     */     //   1138: iconst_1
/*     */     //   1139: goto -> 1147
/*     */     //   1142: iconst_0
/*     */     //   1143: goto -> 1147
/*     */     //   1146: iconst_0
/*     */     //   1147: ifne -> 1189
/*     */     //   1150: nop
/*     */     //   1151: aload_0
/*     */     //   1152: iload_1
/*     */     //   1153: iload_3
/*     */     //   1154: invokevirtual substring : (II)Ljava/lang/String;
/*     */     //   1157: dup
/*     */     //   1158: ldc 'substring(...)'
/*     */     //   1160: invokestatic checkNotNullExpressionValue : (Ljava/lang/Object;Ljava/lang/String;)V
/*     */     //   1163: invokestatic parseFloat : (Ljava/lang/String;)F
/*     */     //   1166: fstore #17
/*     */     //   1168: nop
/*     */     //   1169: iconst_0
/*     */     //   1170: istore #18
/*     */     //   1172: iload_3
/*     */     //   1173: i2l
/*     */     //   1174: bipush #32
/*     */     //   1176: lshl
/*     */     //   1177: fload #17
/*     */     //   1179: invokestatic floatToRawIntBits : (F)I
/*     */     //   1182: i2l
/*     */     //   1183: ldc2_w 4294967295
/*     */     //   1186: land
/*     */     //   1187: lor
/*     */     //   1188: lreturn
/*     */     //   1189: getstatic androidx/compose/ui/graphics/vector/FastFloatParserKt.Mantissa64 : [J
/*     */     //   1192: iload #12
/*     */     //   1194: sipush #-325
/*     */     //   1197: isub
/*     */     //   1198: invokestatic get-s-VKNKU : ([JI)J
/*     */     //   1201: lstore #17
/*     */     //   1203: lload #6
/*     */     //   1205: invokestatic numberOfLeadingZeros : (J)I
/*     */     //   1208: istore #19
/*     */     //   1210: lload #6
/*     */     //   1212: iload #19
/*     */     //   1214: lshl
/*     */     //   1215: lstore #6
/*     */     //   1217: iconst_0
/*     */     //   1218: istore #22
/*     */     //   1220: lload #6
/*     */     //   1222: ldc2_w 4294967295
/*     */     //   1225: land
/*     */     //   1226: lstore #23
/*     */     //   1228: lload #6
/*     */     //   1230: bipush #32
/*     */     //   1232: lushr
/*     */     //   1233: lstore #25
/*     */     //   1235: lload #17
/*     */     //   1237: ldc2_w 4294967295
/*     */     //   1240: land
/*     */     //   1241: lstore #27
/*     */     //   1243: lload #17
/*     */     //   1245: bipush #32
/*     */     //   1247: lushr
/*     */     //   1248: lstore #29
/*     */     //   1250: lload #25
/*     */     //   1252: lload #29
/*     */     //   1254: lmul
/*     */     //   1255: lstore #31
/*     */     //   1257: lload #23
/*     */     //   1259: lload #29
/*     */     //   1261: lmul
/*     */     //   1262: lstore #33
/*     */     //   1264: lload #25
/*     */     //   1266: lload #27
/*     */     //   1268: lmul
/*     */     //   1269: lstore #35
/*     */     //   1271: lload #23
/*     */     //   1273: lload #27
/*     */     //   1275: lmul
/*     */     //   1276: lstore #37
/*     */     //   1278: lload #35
/*     */     //   1280: lload #37
/*     */     //   1282: bipush #32
/*     */     //   1284: lushr
/*     */     //   1285: ladd
/*     */     //   1286: lload #33
/*     */     //   1288: ldc2_w 4294967295
/*     */     //   1291: land
/*     */     //   1292: ladd
/*     */     //   1293: lstore #39
/*     */     //   1295: lload #31
/*     */     //   1297: lload #39
/*     */     //   1299: bipush #32
/*     */     //   1301: lushr
/*     */     //   1302: ladd
/*     */     //   1303: lload #33
/*     */     //   1305: bipush #32
/*     */     //   1307: lushr
/*     */     //   1308: ladd
/*     */     //   1309: lstore #20
/*     */     //   1311: lload #20
/*     */     //   1313: bipush #63
/*     */     //   1315: lushr
/*     */     //   1316: l2i
/*     */     //   1317: istore #22
/*     */     //   1319: lload #20
/*     */     //   1321: iload #22
/*     */     //   1323: bipush #9
/*     */     //   1325: iadd
/*     */     //   1326: lushr
/*     */     //   1327: lstore #23
/*     */     //   1329: iload #19
/*     */     //   1331: iconst_1
/*     */     //   1332: iload #22
/*     */     //   1334: ixor
/*     */     //   1335: iadd
/*     */     //   1336: istore #19
/*     */     //   1338: lload #20
/*     */     //   1340: ldc2_w 511
/*     */     //   1343: land
/*     */     //   1344: ldc2_w 511
/*     */     //   1347: lcmp
/*     */     //   1348: ifeq -> 1373
/*     */     //   1351: lload #20
/*     */     //   1353: ldc2_w 511
/*     */     //   1356: land
/*     */     //   1357: lconst_0
/*     */     //   1358: lcmp
/*     */     //   1359: ifne -> 1412
/*     */     //   1362: lload #23
/*     */     //   1364: ldc2_w 3
/*     */     //   1367: land
/*     */     //   1368: lconst_1
/*     */     //   1369: lcmp
/*     */     //   1370: ifne -> 1412
/*     */     //   1373: nop
/*     */     //   1374: aload_0
/*     */     //   1375: iload_1
/*     */     //   1376: iload_3
/*     */     //   1377: invokevirtual substring : (II)Ljava/lang/String;
/*     */     //   1380: dup
/*     */     //   1381: ldc 'substring(...)'
/*     */     //   1383: invokestatic checkNotNullExpressionValue : (Ljava/lang/Object;Ljava/lang/String;)V
/*     */     //   1386: invokestatic parseFloat : (Ljava/lang/String;)F
/*     */     //   1389: fstore #25
/*     */     //   1391: nop
/*     */     //   1392: iconst_0
/*     */     //   1393: istore #26
/*     */     //   1395: iload_3
/*     */     //   1396: i2l
/*     */     //   1397: bipush #32
/*     */     //   1399: lshl
/*     */     //   1400: fload #25
/*     */     //   1402: invokestatic floatToRawIntBits : (F)I
/*     */     //   1405: i2l
/*     */     //   1406: ldc2_w 4294967295
/*     */     //   1409: land
/*     */     //   1410: lor
/*     */     //   1411: lreturn
/*     */     //   1412: lload #23
/*     */     //   1414: lconst_1
/*     */     //   1415: ladd
/*     */     //   1416: lstore #23
/*     */     //   1418: lload #23
/*     */     //   1420: iconst_1
/*     */     //   1421: lushr
/*     */     //   1422: lstore #23
/*     */     //   1424: lload #23
/*     */     //   1426: ldc2_w 9007199254740992
/*     */     //   1429: lcmp
/*     */     //   1430: iflt -> 1441
/*     */     //   1433: ldc2_w 4503599627370496
/*     */     //   1436: lstore #23
/*     */     //   1438: iinc #19, -1
/*     */     //   1441: lload #23
/*     */     //   1443: ldc2_w -4503599627370497
/*     */     //   1446: land
/*     */     //   1447: lstore #23
/*     */     //   1449: ldc2_w 217706
/*     */     //   1452: iload #12
/*     */     //   1454: i2l
/*     */     //   1455: lmul
/*     */     //   1456: bipush #16
/*     */     //   1458: lshr
/*     */     //   1459: sipush #1024
/*     */     //   1462: i2l
/*     */     //   1463: ladd
/*     */     //   1464: bipush #63
/*     */     //   1466: i2l
/*     */     //   1467: ladd
/*     */     //   1468: lstore #25
/*     */     //   1470: lload #25
/*     */     //   1472: iload #19
/*     */     //   1474: i2l
/*     */     //   1475: lsub
/*     */     //   1476: lstore #27
/*     */     //   1478: lload #27
/*     */     //   1480: lconst_1
/*     */     //   1481: lcmp
/*     */     //   1482: iflt -> 1494
/*     */     //   1485: lload #27
/*     */     //   1487: ldc2_w 2046
/*     */     //   1490: lcmp
/*     */     //   1491: ifle -> 1533
/*     */     //   1494: nop
/*     */     //   1495: aload_0
/*     */     //   1496: iload_1
/*     */     //   1497: iload_3
/*     */     //   1498: invokevirtual substring : (II)Ljava/lang/String;
/*     */     //   1501: dup
/*     */     //   1502: ldc 'substring(...)'
/*     */     //   1504: invokestatic checkNotNullExpressionValue : (Ljava/lang/Object;Ljava/lang/String;)V
/*     */     //   1507: invokestatic parseFloat : (Ljava/lang/String;)F
/*     */     //   1510: fstore #29
/*     */     //   1512: nop
/*     */     //   1513: iconst_0
/*     */     //   1514: istore #30
/*     */     //   1516: iload_3
/*     */     //   1517: i2l
/*     */     //   1518: bipush #32
/*     */     //   1520: lshl
/*     */     //   1521: fload #29
/*     */     //   1523: invokestatic floatToRawIntBits : (F)I
/*     */     //   1526: i2l
/*     */     //   1527: ldc2_w 4294967295
/*     */     //   1530: land
/*     */     //   1531: lor
/*     */     //   1532: lreturn
/*     */     //   1533: lload #23
/*     */     //   1535: lload #27
/*     */     //   1537: bipush #52
/*     */     //   1539: lshl
/*     */     //   1540: lor
/*     */     //   1541: lstore #23
/*     */     //   1543: lload #23
/*     */     //   1545: iload #5
/*     */     //   1547: ifeq -> 1556
/*     */     //   1550: ldc2_w -9223372036854775808
/*     */     //   1553: goto -> 1557
/*     */     //   1556: lconst_0
/*     */     //   1557: lor
/*     */     //   1558: lstore #23
/*     */     //   1560: iconst_0
/*     */     //   1561: istore #29
/*     */     //   1563: lload #23
/*     */     //   1565: invokestatic longBitsToDouble : (J)D
/*     */     //   1568: d2f
/*     */     //   1569: fstore #29
/*     */     //   1571: iconst_0
/*     */     //   1572: istore #30
/*     */     //   1574: iload_3
/*     */     //   1575: i2l
/*     */     //   1576: bipush #32
/*     */     //   1578: lshl
/*     */     //   1579: fload #29
/*     */     //   1581: invokestatic floatToRawIntBits : (F)I
/*     */     //   1584: i2l
/*     */     //   1585: ldc2_w 4294967295
/*     */     //   1588: land
/*     */     //   1589: lor
/*     */     //   1590: lreturn
/*     */     // Line number table:
/*     */     //   Java source line number -> byte code offset
/*     */     //   #58	-> 6
/*     */     //   #618	-> 17
/*     */     //   #618	-> 26
/*     */     //   #58	-> 32
/*     */     //   #60	-> 33
/*     */     //   #61	-> 35
/*     */     //   #64	-> 42
/*     */     //   #65	-> 56
/*     */     //   #66	-> 61
/*     */     //   #67	-> 64
/*     */     //   #619	-> 76
/*     */     //   #619	-> 86
/*     */     //   #67	-> 92
/*     */     //   #70	-> 93
/*     */     //   #71	-> 100
/*     */     //   #620	-> 107
/*     */     //   #620	-> 113
/*     */     //   #71	-> 123
/*     */     //   #623	-> 140
/*     */     //   #623	-> 150
/*     */     //   #71	-> 156
/*     */     //   #75	-> 157
/*     */     //   #76	-> 160
/*     */     //   #79	-> 163
/*     */     //   #80	-> 169
/*     */     //   #624	-> 181
/*     */     //   #624	-> 187
/*     */     //   #81	-> 200
/*     */     //   #81	-> 208
/*     */     //   #82	-> 215
/*     */     //   #83	-> 218
/*     */     //   #86	-> 238
/*     */     //   #87	-> 241
/*     */     //   #89	-> 247
/*     */     //   #90	-> 250
/*     */     //   #91	-> 253
/*     */     //   #94	-> 256
/*     */     //   #95	-> 268
/*     */     //   #96	-> 271
/*     */     //   #98	-> 274
/*     */     //   #99	-> 281
/*     */     //   #625	-> 284
/*     */     //   #625	-> 289
/*     */     //   #626	-> 290
/*     */     //   #626	-> 297
/*     */     //   #625	-> 301
/*     */     //   #627	-> 302
/*     */     //   #627	-> 309
/*     */     //   #625	-> 313
/*     */     //   #628	-> 314
/*     */     //   #628	-> 321
/*     */     //   #625	-> 325
/*     */     //   #630	-> 328
/*     */     //   #631	-> 336
/*     */     //   #632	-> 347
/*     */     //   #632	-> 352
/*     */     //   #633	-> 358
/*     */     //   #635	-> 362
/*     */     //   #632	-> 372
/*     */     //   #99	-> 373
/*     */     //   #100	-> 375
/*     */     //   #101	-> 380
/*     */     //   #102	-> 395
/*     */     //   #105	-> 399
/*     */     //   #106	-> 416
/*     */     //   #636	-> 428
/*     */     //   #636	-> 434
/*     */     //   #107	-> 447
/*     */     //   #107	-> 455
/*     */     //   #108	-> 462
/*     */     //   #109	-> 465
/*     */     //   #112	-> 485
/*     */     //   #113	-> 491
/*     */     //   #114	-> 494
/*     */     //   #117	-> 501
/*     */     //   #637	-> 513
/*     */     //   #637	-> 523
/*     */     //   #117	-> 529
/*     */     //   #120	-> 530
/*     */     //   #121	-> 533
/*     */     //   #121	-> 535
/*     */     //   #122	-> 543
/*     */     //   #123	-> 546
/*     */     //   #125	-> 563
/*     */     //   #126	-> 577
/*     */     //   #127	-> 589
/*     */     //   #130	-> 592
/*     */     //   #131	-> 599
/*     */     //   #638	-> 611
/*     */     //   #638	-> 617
/*     */     //   #132	-> 630
/*     */     //   #133	-> 638
/*     */     //   #133	-> 645
/*     */     //   #135	-> 651
/*     */     //   #136	-> 654
/*     */     //   #139	-> 674
/*     */     //   #140	-> 684
/*     */     //   #145	-> 691
/*     */     //   #148	-> 694
/*     */     //   #149	-> 701
/*     */     //   #150	-> 705
/*     */     //   #153	-> 713
/*     */     //   #154	-> 732
/*     */     //   #155	-> 742
/*     */     //   #156	-> 745
/*     */     //   #159	-> 767
/*     */     //   #160	-> 774
/*     */     //   #162	-> 777
/*     */     //   #163	-> 780
/*     */     //   #164	-> 784
/*     */     //   #167	-> 792
/*     */     //   #168	-> 799
/*     */     //   #168	-> 804
/*     */     //   #170	-> 813
/*     */     //   #170	-> 821
/*     */     //   #171	-> 828
/*     */     //   #172	-> 831
/*     */     //   #175	-> 853
/*     */     //   #175	-> 858
/*     */     //   #176	-> 867
/*     */     //   #178	-> 880
/*     */     //   #179	-> 884
/*     */     //   #182	-> 892
/*     */     //   #183	-> 899
/*     */     //   #183	-> 904
/*     */     //   #185	-> 913
/*     */     //   #185	-> 921
/*     */     //   #186	-> 928
/*     */     //   #187	-> 931
/*     */     //   #189	-> 953
/*     */     //   #195	-> 963
/*     */     //   #196	-> 989
/*     */     //   #197	-> 994
/*     */     //   #197	-> 999
/*     */     //   #197	-> 1006
/*     */     //   #199	-> 1012
/*     */     //   #200	-> 1017
/*     */     //   #201	-> 1022
/*     */     //   #203	-> 1037
/*     */     //   #206	-> 1048
/*     */     //   #639	-> 1066
/*     */     //   #639	-> 1076
/*     */     //   #206	-> 1082
/*     */     //   #212	-> 1083
/*     */     //   #213	-> 1090
/*     */     //   #640	-> 1106
/*     */     //   #640	-> 1116
/*     */     //   #213	-> 1122
/*     */     //   #216	-> 1123
/*     */     //   #217	-> 1150
/*     */     //   #217	-> 1151
/*     */     //   #217	-> 1168
/*     */     //   #641	-> 1172
/*     */     //   #641	-> 1182
/*     */     //   #217	-> 1188
/*     */     //   #220	-> 1189
/*     */     //   #220	-> 1201
/*     */     //   #221	-> 1203
/*     */     //   #221	-> 1208
/*     */     //   #222	-> 1210
/*     */     //   #224	-> 1217
/*     */     //   #642	-> 1220
/*     */     //   #643	-> 1228
/*     */     //   #644	-> 1235
/*     */     //   #645	-> 1243
/*     */     //   #647	-> 1250
/*     */     //   #648	-> 1257
/*     */     //   #649	-> 1264
/*     */     //   #650	-> 1271
/*     */     //   #653	-> 1278
/*     */     //   #654	-> 1280
/*     */     //   #653	-> 1285
/*     */     //   #655	-> 1286
/*     */     //   #653	-> 1292
/*     */     //   #652	-> 1293
/*     */     //   #657	-> 1295
/*     */     //   #224	-> 1309
/*     */     //   #225	-> 1311
/*     */     //   #226	-> 1319
/*     */     //   #227	-> 1329
/*     */     //   #229	-> 1338
/*     */     //   #230	-> 1373
/*     */     //   #230	-> 1374
/*     */     //   #230	-> 1391
/*     */     //   #658	-> 1395
/*     */     //   #658	-> 1405
/*     */     //   #230	-> 1411
/*     */     //   #233	-> 1412
/*     */     //   #234	-> 1418
/*     */     //   #236	-> 1424
/*     */     //   #237	-> 1433
/*     */     //   #238	-> 1438
/*     */     //   #241	-> 1441
/*     */     //   #243	-> 1449
/*     */     //   #244	-> 1470
/*     */     //   #245	-> 1478
/*     */     //   #246	-> 1494
/*     */     //   #246	-> 1495
/*     */     //   #246	-> 1512
/*     */     //   #659	-> 1516
/*     */     //   #659	-> 1526
/*     */     //   #246	-> 1532
/*     */     //   #249	-> 1533
/*     */     //   #250	-> 1543
/*     */     //   #252	-> 1560
/*     */     //   #660	-> 1563
/*     */     //   #252	-> 1568
/*     */     //   #661	-> 1574
/*     */     //   #661	-> 1584
/*     */     //   #252	-> 1590
/*     */     // Local variable table:
/*     */     //   start	length	slot	name	descriptor
/*     */     //   17	15	4	$i$f$pack	I
/*     */     //   14	18	3	value$iv	F
/*     */     //   76	16	7	$i$f$pack	I
/*     */     //   73	19	6	value$iv	F
/*     */     //   107	16	7	$i$f$isDigit	I
/*     */     //   104	19	6	$this$isDigit$iv	C
/*     */     //   140	16	7	$i$f$pack	I
/*     */     //   137	19	6	value$iv	F
/*     */     //   181	16	11	$i$f$isDigit	I
/*     */     //   178	19	10	$this$isDigit$iv	C
/*     */     //   284	89	16	$i$f$parseFourDigits	I
/*     */     //   328	45	17	v$iv	J
/*     */     //   336	37	19	base$iv	J
/*     */     //   347	26	21	predicate$iv	J
/*     */     //   375	21	15	digits	I
/*     */     //   428	16	16	$i$f$isDigit	I
/*     */     //   425	19	15	$this$isDigit$iv	C
/*     */     //   513	16	16	$i$f$pack	I
/*     */     //   510	19	15	value$iv	F
/*     */     //   611	16	18	$i$f$isDigit	I
/*     */     //   608	19	17	$this$isDigit$iv	C
/*     */     //   577	114	16	isExponentNegative	Z
/*     */     //   705	258	17	retryIndex	I
/*     */     //   1066	16	19	$i$f$pack	I
/*     */     //   1063	19	18	value$iv	F
/*     */     //   1017	66	17	f	F
/*     */     //   1106	16	18	$i$f$pack	I
/*     */     //   1103	19	17	value$iv	F
/*     */     //   1172	16	18	$i$f$pack	I
/*     */     //   1169	19	17	value$iv	F
/*     */     //   1220	89	22	$i$f$fullMultiplicationHighBits	I
/*     */     //   1228	81	23	xLo$iv	J
/*     */     //   1235	74	25	xHi$iv	J
/*     */     //   1243	66	27	yLo$iv	J
/*     */     //   1250	59	29	yHi$iv	J
/*     */     //   1257	52	31	xTimesYHi$iv	J
/*     */     //   1264	45	33	xTimesYMid$iv	J
/*     */     //   1271	38	35	yTimesXMid$iv	J
/*     */     //   1278	31	37	xTimesYLo$iv	J
/*     */     //   1295	14	39	carry$iv	J
/*     */     //   1395	16	26	$i$f$pack	I
/*     */     //   1392	19	25	value$iv	F
/*     */     //   1516	16	30	$i$f$pack	I
/*     */     //   1513	19	29	value$iv	F
/*     */     //   1563	5	29	$i$f$doubleFromBits	I
/*     */     //   1574	16	30	$i$f$pack	I
/*     */     //   1571	19	29	value$iv	F
/*     */     //   35	1556	3	index	I
/*     */     //   42	1549	4	c	C
/*     */     //   56	1535	5	isNegative	Z
/*     */     //   160	1431	6	significand	J
/*     */     //   163	1428	8	significandStartIndex	I
/*     */     //   169	1422	9	dataLength	I
/*     */     //   241	1350	10	significandEndIndex	I
/*     */     //   247	1344	11	digitCount	I
/*     */     //   250	1341	12	exponent	I
/*     */     //   253	1338	13	exponentStartIndex	I
/*     */     //   256	1335	14	exponentEndIndex	I
/*     */     //   533	1058	15	exponentNumber	I
/*     */     //   694	897	16	tooManyDigits	Z
/*     */     //   1203	388	17	significandFactor	J
/*     */     //   1210	381	19	lz	I
/*     */     //   1311	280	20	upper	J
/*     */     //   1319	272	22	upperBit	I
/*     */     //   1329	262	23	mantissa	J
/*     */     //   1470	121	25	adjustedExponent	J
/*     */     //   1478	113	27	realExponent	J
/*     */     //   0	1591	0	s	Ljava/lang/String;
/*     */     //   0	1591	1	start	I
/*     */     //   0	1591	2	end	I
/*     */   }
/*     */   
/*     */   @NotNull
/*     */   public static final long[] getMantissa64() {
/*     */     return Mantissa64;
/*     */   }
/*     */   
/*     */   public static final boolean isDigit(char $this$isDigit) {
/*     */     int $i$f$isDigit = 0;
/*     */     return ((char)($this$isDigit - 48) < '\n');
/*     */   }
/*     */   
/*     */   private static final long pack(int index, float value) {
/*     */     int $i$f$pack = 0;
/*     */     return index << 32L | Float.floatToRawIntBits(value) & 0xFFFFFFFFL;
/*     */   }
/*     */   
/*     */   private static final long fullMultiplicationHighBits(long x, long y) {
/*     */     int $i$f$fullMultiplicationHighBits = 0;
/*     */     long xLo = x & 0xFFFFFFFFL;
/*     */     long xHi = x >>> 32L;
/*     */     long yLo = y & 0xFFFFFFFFL;
/*     */     long yHi = y >>> 32L;
/*     */     long xTimesYHi = xHi * yHi;
/*     */     long xTimesYMid = xLo * yHi;
/*     */     long yTimesXMid = xHi * yLo;
/*     */     long xTimesYLo = xLo * yLo;
/*     */     long carry = yTimesXMid + (xTimesYLo >>> 32L) + (xTimesYMid & 0xFFFFFFFFL);
/*     */     return xTimesYHi + (carry >>> 32L) + (xTimesYMid >>> 32L);
/*     */   }
/*     */   
/*     */   private static final int parseFourDigits(String str, int offset) {
/*     */     int $i$f$parseFourDigits = 0;
/*     */     long v = str.charAt(offset) | str.charAt(offset + 1) << 16L | str.charAt(offset + 2) << 32L | str.charAt(offset + 3) << 48L;
/*     */     long base = v - 13511005043687472L;
/*     */     long predicate = v + 19703549022044230L | base;
/*     */     return ((predicate & 0xFF80FF80FF80FF80L) != 0L) ? -1 : (int)(base * 281475406208040961L >>> 48L);
/*     */   }
/*     */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\li\\ui-graphics-desktop-1.7.3.jar!\androidx\compos\\ui\graphics\vector\FastFloatParserKt.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */