/*    */ package com.intellij.ml.llm.matterhorn.activation.state.model;
/*    */ 
/*    */ import kotlin.Metadata;
/*    */ import kotlin.jvm.internal.DefaultConstructorMarker;
/*    */ import org.jetbrains.annotations.NotNull;
/*    */ import org.jetbrains.annotations.Nullable;
/*    */ 
/*    */ @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\030\002\n\000\bv\030\0002\0020\001:\002\002\003\001\002\004\005¨\006\006"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicensePending;", "AipLicenseAgreementAcceptStateInitializing", "AipLicenseAgreementAcceptRequired", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptStateInitializing;", "state.model"})
/*    */ public interface AipLicenseAgreementAcceptPending extends AipLicensePending {
/*    */   @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000(\n\002\030\002\n\002\030\002\n\002\030\002\n\002\b\003\n\002\020\013\n\000\n\002\020\000\n\000\n\002\020\b\n\000\n\002\020\016\n\000\bÆ\n\030\0002\0020\0012\0020\002B\t\b\002¢\006\004\b\003\020\004J\023\020\005\032\0020\0062\b\020\007\032\004\030\0010\bHÖ\003J\t\020\t\032\0020\nHÖ\001J\t\020\013\032\0020\fHÖ\001¨\006\r"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptStateInitializing;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AiaActivationProgressing;", "<init>", "()V", "equals", "", "other", "", "hashCode", "", "toString", "", "state.model"})
/*    */   public static final class AipLicenseAgreementAcceptStateInitializing extends AiaActivationProgressing implements AipLicenseAgreementAcceptPending { @NotNull
/*    */     public static final AipLicenseAgreementAcceptStateInitializing INSTANCE = new AipLicenseAgreementAcceptStateInitializing();
/*    */     
/* 14 */     private AipLicenseAgreementAcceptStateInitializing() { super(null); } @NotNull public String toString() { return "AipLicenseAgreementAcceptStateInitializing"; } public int hashCode() { return 1563593567; }
/*    */     public boolean equals(@Nullable Object other) { if (this == other) return true;  if (!(other instanceof AipLicenseAgreementAcceptStateInitializing)) return false;  (AipLicenseAgreementAcceptStateInitializing)other; return true; } }
/* 16 */   @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000\"\n\002\030\002\n\002\030\002\n\002\030\002\n\002\b\006\n\002\030\002\n\002\030\002\n\002\030\002\n\002\030\002\n\000\b6\030\0002\0020\0012\0020\002:\004\005\006\007\bB\t\b\004¢\006\004\b\003\020\004\001\004\t\n\013\f¨\006\r"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AiaActivationRoadblocked;", "<init>", "()V", "AipLicenseEndUserMayAcceptAgreementFirstTime", "AipLicenseEndUserMayAcceptAgreementUpdatedVersion", "AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser", "AipLicenseEndUserHasToAskAdminToAcceptAgreement", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserHasToAskAdminToAcceptAgreement;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserMayAcceptAgreementFirstTime;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserMayAcceptAgreementUpdatedVersion;", "state.model"}) public static abstract class AipLicenseAgreementAcceptRequired extends AiaActivationRoadblocked implements AipLicenseAgreementAcceptPending { private AipLicenseAgreementAcceptRequired() { super(null); } @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000$\n\002\030\002\n\002\030\002\n\002\b\003\n\002\020\013\n\000\n\002\020\000\n\000\n\002\020\b\n\000\n\002\020\016\n\000\bÆ\n\030\0002\0020\001B\t\b\002¢\006\004\b\002\020\003J\023\020\004\032\0020\0052\b\020\006\032\004\030\0010\007HÖ\003J\t\020\b\032\0020\tHÖ\001J\t\020\n\032\0020\013HÖ\001¨\006\f"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserMayAcceptAgreementFirstTime;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired;", "<init>", "()V", "equals", "", "other", "", "hashCode", "", "toString", "", "state.model"}) public static final class AipLicenseEndUserMayAcceptAgreementFirstTime extends AipLicenseAgreementAcceptRequired {
/* 17 */       @NotNull public static final AipLicenseEndUserMayAcceptAgreementFirstTime INSTANCE = new AipLicenseEndUserMayAcceptAgreementFirstTime(); @NotNull public String toString() { return "AipLicenseEndUserMayAcceptAgreementFirstTime"; } public int hashCode() { return 1407248995; } private AipLicenseEndUserMayAcceptAgreementFirstTime() { super(null); } public boolean equals(@Nullable Object other) { if (this == other) return true;  if (!(other instanceof AipLicenseEndUserMayAcceptAgreementFirstTime)) return false;  (AipLicenseEndUserMayAcceptAgreementFirstTime)other; return true; }
/* 18 */     } @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000$\n\002\030\002\n\002\030\002\n\002\b\003\n\002\020\013\n\000\n\002\020\000\n\000\n\002\020\b\n\000\n\002\020\016\n\000\bÆ\n\030\0002\0020\001B\t\b\002¢\006\004\b\002\020\003J\023\020\004\032\0020\0052\b\020\006\032\004\030\0010\007HÖ\003J\t\020\b\032\0020\tHÖ\001J\t\020\n\032\0020\013HÖ\001¨\006\f"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserMayAcceptAgreementUpdatedVersion;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired;", "<init>", "()V", "equals", "", "other", "", "hashCode", "", "toString", "", "state.model"}) public static final class AipLicenseEndUserMayAcceptAgreementUpdatedVersion extends AipLicenseAgreementAcceptRequired { @NotNull public static final AipLicenseEndUserMayAcceptAgreementUpdatedVersion INSTANCE = new AipLicenseEndUserMayAcceptAgreementUpdatedVersion(); private AipLicenseEndUserMayAcceptAgreementUpdatedVersion() { super(null); } @NotNull public String toString() { return "AipLicenseEndUserMayAcceptAgreementUpdatedVersion"; } public int hashCode() { return 63700631; } public boolean equals(@Nullable Object other) { if (this == other) return true;  if (!(other instanceof AipLicenseEndUserMayAcceptAgreementUpdatedVersion)) return false;  (AipLicenseEndUserMayAcceptAgreementUpdatedVersion)other; return true; } } @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000$\n\002\030\002\n\002\030\002\n\002\b\003\n\002\020\013\n\000\n\002\020\000\n\000\n\002\020\b\n\000\n\002\020\016\n\000\bÆ\n\030\0002\0020\001B\t\b\002¢\006\004\b\002\020\003J\023\020\004\032\0020\0052\b\020\006\032\004\030\0010\007HÖ\003J\t\020\b\032\0020\tHÖ\001J\t\020\n\032\0020\013HÖ\001¨\006\f"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired;", "<init>", "()V", "equals", "", "other", "", "hashCode", "", "toString", "", "state.model"}) public static final class AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser extends AipLicenseAgreementAcceptRequired { @NotNull public static final AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser INSTANCE = new AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser();
/* 19 */       private AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser() { super(null); } @NotNull public String toString() { return "AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser"; } public int hashCode() { return -836562921; } public boolean equals(@Nullable Object other) { if (this == other) return true;  if (!(other instanceof AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser)) return false;  (AipLicenseEndUserHasToAcceptCustomerAgreementInBrowser)other; return true; } } @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000$\n\002\030\002\n\002\030\002\n\002\b\003\n\002\020\013\n\000\n\002\020\000\n\000\n\002\020\b\n\000\n\002\020\016\n\000\bÆ\n\030\0002\0020\001B\t\b\002¢\006\004\b\002\020\003J\023\020\004\032\0020\0052\b\020\006\032\004\030\0010\007HÖ\003J\t\020\b\032\0020\tHÖ\001J\t\020\n\032\0020\013HÖ\001¨\006\f"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired$AipLicenseEndUserHasToAskAdminToAcceptAgreement;", "Lcom/intellij/ml/llm/matterhorn/activation/state/model/AipLicenseAgreementAcceptPending$AipLicenseAgreementAcceptRequired;", "<init>", "()V", "equals", "", "other", "", "hashCode", "", "toString", "", "state.model"}) public static final class AipLicenseEndUserHasToAskAdminToAcceptAgreement extends AipLicenseAgreementAcceptRequired { @NotNull public static final AipLicenseEndUserHasToAskAdminToAcceptAgreement INSTANCE = new AipLicenseEndUserHasToAskAdminToAcceptAgreement();
/* 20 */       private AipLicenseEndUserHasToAskAdminToAcceptAgreement() { super(null); }
/*    */ 
/*    */       
/*    */       @NotNull
/*    */       public String toString() {
/*    */         return "AipLicenseEndUserHasToAskAdminToAcceptAgreement";
/*    */       }
/*    */       
/*    */       public int hashCode() {
/*    */         return -1685208551;
/*    */       }
/*    */       
/*    */       public boolean equals(@Nullable Object other) {
/*    */         if (this == other)
/*    */           return true; 
/*    */         if (!(other instanceof AipLicenseEndUserHasToAskAdminToAcceptAgreement))
/*    */           return false; 
/*    */         (AipLicenseEndUserHasToAskAdminToAcceptAgreement)other;
/*    */         return true;
/*    */       } }
/*    */      }
/*    */ 
/*    */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\ej-243.132.63.jar!\com\intellij\ml\llm\matterhorn\activation\state\model\AipLicenseAgreementAcceptPending.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */