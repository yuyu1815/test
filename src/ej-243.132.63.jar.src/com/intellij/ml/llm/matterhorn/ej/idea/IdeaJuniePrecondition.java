/*    */ package com.intellij.ml.llm.matterhorn.ej.idea;
/*    */ 
/*    */ import com.intellij.ml.llm.matterhorn.ej.core.JuniePreconditionChecker;
/*    */ import com.intellij.openapi.project.Project;
/*    */ import com.intellij.openapi.roots.ui.configuration.ProjectStructureConfigurable;
/*    */ import kotlin.Metadata;
/*    */ import kotlin.ResultKt;
/*    */ import kotlin.Unit;
/*    */ import kotlin.coroutines.Continuation;
/*    */ import kotlin.coroutines.intrinsics.IntrinsicsKt;
/*    */ import kotlin.coroutines.jvm.internal.Boxing;
/*    */ import kotlin.jvm.functions.Function2;
/*    */ import kotlinx.coroutines.CoroutineScope;
/*    */ 
/*    */ @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000\036\n\002\030\002\n\002\030\002\n\002\b\003\n\002\020 \n\002\030\002\n\000\n\002\030\002\n\002\b\003\b\000\030\0002\0020\001B\007¢\006\004\b\002\020\003J\026\020\004\032\b\022\004\022\0020\0060\0052\006\020\007\032\0020\bH\026J\022\020\t\032\004\030\0010\0062\006\020\007\032\0020\bH\002J\022\020\n\032\004\030\0010\0062\006\020\007\032\0020\bH\002¨\006\013"}, d2 = {"Lcom/intellij/ml/llm/matterhorn/ej/idea/IdeaJuniePrecondition;", "Lcom/intellij/ml/llm/matterhorn/ej/core/DefaultJuniePreconditionChecker;", "<init>", "()V", "canRunJunie", "", "Lcom/intellij/ml/llm/matterhorn/ej/core/JuniePreconditionChecker$JunieProblem;", "project", "Lcom/intellij/openapi/project/Project;", "checkAutoBuild", "checkJavaOrKotlinSdk", "ej-idea"})
/*    */ public final class IdeaJuniePrecondition extends DefaultJuniePreconditionChecker {
/*    */   @NotNull
/* 18 */   public List<JuniePreconditionChecker.JunieProblem> canRunJunie(@NotNull Project project) { Intrinsics.checkNotNullParameter(project, "project");
/* 19 */     JuniePreconditionChecker.JunieProblem[] arrayOfJunieProblem = new JuniePreconditionChecker.JunieProblem[2]; arrayOfJunieProblem[0] = checkAutoBuild(project); arrayOfJunieProblem[1] = 
/* 20 */       checkJavaOrKotlinSdk(project); return CollectionsKt.plus(super.canRunJunie(project), CollectionsKt.listOfNotNull((Object[])arrayOfJunieProblem)); } @DebugMetadata(f = "IdeaJuniePrecondition.kt", l = {28}, i = {}, s = {}, n = {}, m = "invokeSuspend", c = "com.intellij.ml.llm.matterhorn.ej.idea.IdeaJuniePrecondition$checkAutoBuild$1") @Metadata(mv = {2, 1, 0}, k = 3, xi = 48, d1 = {"\000\006\n\000\n\002\020\013\020\000\032\0020\001H\n"}, d2 = {"<anonymous>", ""}) static final class IdeaJuniePrecondition$checkAutoBuild$1 extends SuspendLambda implements Function1<Continuation<? super Boolean>, Object> {
/*    */     int label; IdeaJuniePrecondition$checkAutoBuild$1(Project $project, Continuation $completion) { super(1, $completion); } public final Object invokeSuspend(Object $result) { Object object = IntrinsicsKt.getCOROUTINE_SUSPENDED(); switch (this.label) { case 0: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1); this.label = 1; if (BuildersKt.withContext(CoroutinesKt.getEDT(Dispatchers.INSTANCE), new Function2<CoroutineScope, Continuation<? super Unit>, Object>(this.$project, null) { int label; public final Object invokeSuspend(Object $result) { IntrinsicsKt.getCOROUTINE_SUSPENDED(); switch (this.label) { case 0: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1); (CompilerWorkspaceConfiguration.getInstance(this.$project)).MAKE_PROJECT_ON_SAVE = false; BuildManager.getInstance().clearState(this.$project); return Unit.INSTANCE; }  throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine"); } public final Continuation<Unit> create(Object value, Continuation<? super null> $completion) { return (Continuation)new Function2<>(this.$project, $completion); } public final Object invoke(CoroutineScope p1, Continuation<?> p2) { return ((null)create(p1, p2)).invokeSuspend(Unit.INSTANCE); } }
/*    */               (Continuation)this) == object) return object;  BuildersKt.withContext(CoroutinesKt.getEDT(Dispatchers.INSTANCE), new Function2<CoroutineScope, Continuation<? super Unit>, Object>(this.$project, null) {
/*    */                 int label; public final Object invokeSuspend(Object $result) { IntrinsicsKt.getCOROUTINE_SUSPENDED(); switch (this.label) { case 0: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1); (CompilerWorkspaceConfiguration.getInstance(this.$project)).MAKE_PROJECT_ON_SAVE = false; BuildManager.getInstance().clearState(this.$project); return Unit.INSTANCE; }  throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine"); } public final Continuation<Unit> create(Object value, Continuation<? super null> $completion) { return (Continuation)new Function2<>(this.$project, $completion); } public final Object invoke(CoroutineScope p1, Continuation<?> p2) { return ((null)create(p1, p2)).invokeSuspend(Unit.INSTANCE); }
/*    */               }(Continuation)this); return Boxing.boxBoolean(true);case 1: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1); return Boxing.boxBoolean(true); }  throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine"); } public final Continuation<Unit> create(Continuation<? super IdeaJuniePrecondition$checkAutoBuild$1> $completion) { return (Continuation<Unit>)new IdeaJuniePrecondition$checkAutoBuild$1(this.$project, $completion); } public final Object invoke(Continuation<?> p1) { return ((IdeaJuniePrecondition$checkAutoBuild$1)create(p1)).invokeSuspend(Unit.INSTANCE); }
/* 25 */   } private final JuniePreconditionChecker.JunieProblem checkAutoBuild(Project project) { CompilerWorkspaceConfiguration compilerConfig = CompilerWorkspaceConfiguration.getInstance(project);
/* 26 */     if (compilerConfig.MAKE_PROJECT_ON_SAVE) {
/* 27 */       return new JuniePreconditionChecker.JunieProblem("`Build project automatically` should be disabled in Compiler options", "Disable", new IdeaJuniePrecondition$checkAutoBuild$1(project, null));
/*    */     }
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */ 
/*    */     
/* 35 */     return null; }
/*    */ 
/*    */   
/*    */   private final JuniePreconditionChecker.JunieProblem checkJavaOrKotlinSdk(Project project) {
/* 39 */     if (hasSdk(project, IdeaJuniePrecondition::checkJavaOrKotlinSdk$lambda$0)) {
/* 40 */       return null;
/*    */     }
/*    */     
/* 43 */     return new JuniePreconditionChecker.JunieProblem("SDK is not configured", "Set Up", new IdeaJuniePrecondition$checkJavaOrKotlinSdk$2(project, null)); } private static final boolean checkJavaOrKotlinSdk$lambda$0(Sdk it) { Intrinsics.checkNotNullParameter(it, "it"); return (it.getSdkType() instanceof com.intellij.openapi.projectRoots.JavaSdkType || Intrinsics.areEqual(it.getSdkType().getName(), "KotlinSDK")); } @DebugMetadata(f = "IdeaJuniePrecondition.kt", l = {44}, i = {}, s = {}, n = {}, m = "invokeSuspend", c = "com.intellij.ml.llm.matterhorn.ej.idea.IdeaJuniePrecondition$checkJavaOrKotlinSdk$2") @Metadata(mv = {2, 1, 0}, k = 3, xi = 48, d1 = {"\000\006\n\000\n\002\020\013\020\000\032\0020\001H\n"}, d2 = {"<anonymous>", ""}) static final class IdeaJuniePrecondition$checkJavaOrKotlinSdk$2 extends SuspendLambda implements Function1<Continuation<? super Boolean>, Object> { int label; IdeaJuniePrecondition$checkJavaOrKotlinSdk$2(Project $project, Continuation $completion) { super(1, $completion); } public final Object invokeSuspend(Object $result) { Object object = IntrinsicsKt.getCOROUTINE_SUSPENDED(); switch (this.label) { case 0: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1);
/* 44 */           this.label = 1; if (BuildersKt.withContext(CoroutinesKt.getEDT(Dispatchers.INSTANCE), new Function2<CoroutineScope, Continuation<? super Boolean>, Object>(this.$project, null) { int label; public final Object invokeSuspend(Object $result) { ProjectStructureConfigurable configurable; IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1 editor; IntrinsicsKt.getCOROUTINE_SUSPENDED(); switch (this.label) { case 0: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1);
/*    */                       
/* 46 */                       configurable = ProjectStructureConfigurable.getInstance(this.$project);
/* 47 */                       editor = new IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1(this.$project, configurable);
/*    */ 
/*    */ 
/*    */ 
/*    */                       
/* 52 */                       return Boxing.boxBoolean(editor.showAndGet()); }  throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine"); } public final Continuation<Unit> create(Object value, Continuation<? super null> $completion) { return (Continuation)new Function2<>(this.$project, $completion); } public final Object invoke(CoroutineScope p1, Continuation<?> p2) { return ((null)create(p1, p2)).invokeSuspend(Unit.INSTANCE); } @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000\021\n\000\n\002\030\002\n\000\n\002\030\002\n\000*\001\000\b\n\030\0002\0020\001J\b\020\002\032\0020\003H\024¨\006\004"}, d2 = {"com/intellij/ml/llm/matterhorn/ej/idea/IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1", "Lcom/intellij/openapi/options/ex/SingleConfigurableEditor;", "getStyle", "Lcom/intellij/openapi/ui/DialogWrapper$DialogStyle;", "ej-idea"}) public static final class IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1 extends SingleConfigurableEditor { IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1(Project $project, ProjectStructureConfigurable $configurable) { super($project, (Configurable)$configurable, "SettingsEditor"); } protected DialogWrapper.DialogStyle getStyle() { return DialogWrapper.DialogStyle.COMPACT; } } }(Continuation)this) == object) return object;  BuildersKt.withContext(CoroutinesKt.getEDT(Dispatchers.INSTANCE), new Function2<CoroutineScope, Continuation<? super Boolean>, Object>(this.$project, null) { int label; public final Object invokeSuspend(Object $result) { ProjectStructureConfigurable configurable; IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1 editor; IntrinsicsKt.getCOROUTINE_SUSPENDED(); switch (this.label) { case 0: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1); configurable = ProjectStructureConfigurable.getInstance(this.$project); editor = new IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1(this.$project, configurable); return Boxing.boxBoolean(editor.showAndGet()); }  throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine"); } public final Continuation<Unit> create(Object value, Continuation<? super null> $completion) { return (Continuation)new Function2<>(this.$project, $completion); } public final Object invoke(CoroutineScope p1, Continuation<?> p2) { return ((null)create(p1, p2)).invokeSuspend(Unit.INSTANCE); } @Metadata(mv = {2, 1, 0}, k = 1, xi = 48, d1 = {"\000\021\n\000\n\002\030\002\n\000\n\002\030\002\n\000*\001\000\b\n\030\0002\0020\001J\b\020\002\032\0020\003H\024¨\006\004"}, d2 = {"com/intellij/ml/llm/matterhorn/ej/idea/IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1", "Lcom/intellij/openapi/options/ex/SingleConfigurableEditor;", "getStyle", "Lcom/intellij/openapi/ui/DialogWrapper$DialogStyle;", "ej-idea"}) public static final class IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1 extends SingleConfigurableEditor {
/*    */                   IdeaJuniePrecondition$checkJavaOrKotlinSdk$2$1$editor$1(Project $project, ProjectStructureConfigurable $configurable) { super($project, (Configurable)$configurable, "SettingsEditor"); }
/* 54 */                   protected DialogWrapper.DialogStyle getStyle() { return DialogWrapper.DialogStyle.COMPACT; } } }(Continuation)this); return Boxing.boxBoolean(IdeaJuniePrecondition.this.hasSdk(this.$project, IdeaJuniePrecondition$checkJavaOrKotlinSdk$2::invokeSuspend$lambda$0));case 1: ResultKt.throwOnFailure(SYNTHETIC_LOCAL_VARIABLE_1); return Boxing.boxBoolean(IdeaJuniePrecondition.this.hasSdk(this.$project, IdeaJuniePrecondition$checkJavaOrKotlinSdk$2::invokeSuspend$lambda$0)); }  throw new IllegalStateException("call to 'resume' before 'invoke' with coroutine"); } public final Continuation<Unit> create(Continuation<? super IdeaJuniePrecondition$checkJavaOrKotlinSdk$2> $completion) { return (Continuation<Unit>)new IdeaJuniePrecondition$checkJavaOrKotlinSdk$2(this.$project, $completion); } public final Object invoke(Continuation<?> p1) { return ((IdeaJuniePrecondition$checkJavaOrKotlinSdk$2)create(p1)).invokeSuspend(Unit.INSTANCE); } private static final boolean invokeSuspend$lambda$0(Sdk it) { return it.getSdkType() instanceof com.intellij.openapi.projectRoots.JavaSdkType; }
/*    */      }
/*    */ 
/*    */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\ej-243.132.63.jar!\com\intellij\ml\llm\matterhorn\ej\idea\IdeaJuniePrecondition.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */