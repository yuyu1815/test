/*      */ package androidx.compose.foundation.layout;
/*      */ 
/*      */ import androidx.annotation.FloatRange;
/*      */ import androidx.compose.runtime.Stable;
/*      */ import androidx.compose.ui.Alignment;
/*      */ import androidx.compose.ui.Modifier;
/*      */ import androidx.compose.ui.platform.InspectableValueKt;
/*      */ import androidx.compose.ui.unit.Dp;
/*      */ import androidx.compose.ui.unit.DpSize;
/*      */ import kotlin.Metadata;
/*      */ import kotlin.jvm.functions.Function1;
/*      */ import kotlin.jvm.internal.Intrinsics;
/*      */ import kotlin.jvm.internal.SourceDebugExtension;
/*      */ import org.jetbrains.annotations.NotNull;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ @Metadata(mv = {1, 9, 0}, k = 2, xi = 48, d1 = {"\000H\n\000\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b\006\n\002\030\002\n\000\n\002\030\002\n\002\b\005\n\002\020\007\n\002\b\022\n\002\030\002\n\002\b\025\n\002\030\002\n\000\n\002\020\013\n\000\n\002\030\002\n\000\n\002\030\002\n\000\032*\020\013\032\0020\f*\0020\f2\b\b\002\020\r\032\0020\0162\b\b\002\020\017\032\0020\016H\007ø\001\000¢\006\004\b\020\020\021\032\026\020\022\032\0020\f*\0020\f2\b\b\003\020\023\032\0020\024H\007\032\026\020\025\032\0020\f*\0020\f2\b\b\003\020\023\032\0020\024H\007\032\026\020\026\032\0020\f*\0020\f2\b\b\003\020\023\032\0020\024H\007\032\036\020\027\032\0020\f*\0020\f2\006\020\027\032\0020\016H\007ø\001\000¢\006\004\b\030\020\031\032*\020\032\032\0020\f*\0020\f2\b\b\002\020\033\032\0020\0162\b\b\002\020\034\032\0020\016H\007ø\001\000¢\006\004\b\035\020\021\032\036\020\036\032\0020\f*\0020\f2\006\020\027\032\0020\016H\007ø\001\000¢\006\004\b\037\020\031\032*\020 \032\0020\f*\0020\f2\b\b\002\020\033\032\0020\0162\b\b\002\020\034\032\0020\016H\007ø\001\000¢\006\004\b!\020\021\032\036\020\"\032\0020\f*\0020\f2\006\020#\032\0020\016H\007ø\001\000¢\006\004\b$\020\031\032&\020\"\032\0020\f*\0020\f2\006\020%\032\0020\0162\006\020\027\032\0020\016H\007ø\001\000¢\006\004\b&\020\021\032\036\020\"\032\0020\f*\0020\f2\006\020#\032\0020'H\007ø\001\000¢\006\004\b(\020)\032>\020*\032\0020\f*\0020\f2\b\b\002\020\r\032\0020\0162\b\b\002\020\017\032\0020\0162\b\b\002\020+\032\0020\0162\b\b\002\020,\032\0020\016H\007ø\001\000¢\006\004\b-\020.\032\036\020/\032\0020\f*\0020\f2\006\020%\032\0020\016H\007ø\001\000¢\006\004\b0\020\031\032*\0201\032\0020\f*\0020\f2\b\b\002\020\033\032\0020\0162\b\b\002\020\034\032\0020\016H\007ø\001\000¢\006\004\b2\020\021\032\036\020#\032\0020\f*\0020\f2\006\020#\032\0020\016H\007ø\001\000¢\006\004\b3\020\031\032&\020#\032\0020\f*\0020\f2\006\020%\032\0020\0162\006\020\027\032\0020\016H\007ø\001\000¢\006\004\b4\020\021\032\036\020#\032\0020\f*\0020\f2\006\020#\032\0020'H\007ø\001\000¢\006\004\b5\020)\032>\0206\032\0020\f*\0020\f2\b\b\002\020\r\032\0020\0162\b\b\002\020\017\032\0020\0162\b\b\002\020+\032\0020\0162\b\b\002\020,\032\0020\016H\007ø\001\000¢\006\004\b7\020.\032\036\020%\032\0020\f*\0020\f2\006\020%\032\0020\016H\007ø\001\000¢\006\004\b8\020\031\032*\0209\032\0020\f*\0020\f2\b\b\002\020\033\032\0020\0162\b\b\002\020\034\032\0020\016H\007ø\001\000¢\006\004\b:\020\021\032 \020;\032\0020\f*\0020\f2\b\b\002\020<\032\0020=2\b\b\002\020>\032\0020?H\007\032 \020@\032\0020\f*\0020\f2\b\b\002\020<\032\0020A2\b\b\002\020>\032\0020?H\007\032 \020B\032\0020\f*\0020\f2\b\b\002\020<\032\0020C2\b\b\002\020>\032\0020?H\007\"\016\020\000\032\0020\001X\004¢\006\002\n\000\"\016\020\002\032\0020\001X\004¢\006\002\n\000\"\016\020\003\032\0020\001X\004¢\006\002\n\000\"\016\020\004\032\0020\005X\004¢\006\002\n\000\"\016\020\006\032\0020\005X\004¢\006\002\n\000\"\016\020\007\032\0020\005X\004¢\006\002\n\000\"\016\020\b\032\0020\005X\004¢\006\002\n\000\"\016\020\t\032\0020\005X\004¢\006\002\n\000\"\016\020\n\032\0020\005X\004¢\006\002\n\000\002\007\n\005\b¡\0360\001¨\006D"}, d2 = {"FillWholeMaxHeight", "Landroidx/compose/foundation/layout/FillElement;", "FillWholeMaxSize", "FillWholeMaxWidth", "WrapContentHeightCenter", "Landroidx/compose/foundation/layout/WrapContentElement;", "WrapContentHeightTop", "WrapContentSizeCenter", "WrapContentSizeTopStart", "WrapContentWidthCenter", "WrapContentWidthStart", "defaultMinSize", "Landroidx/compose/ui/Modifier;", "minWidth", "Landroidx/compose/ui/unit/Dp;", "minHeight", "defaultMinSize-VpY3zN4", "(Landroidx/compose/ui/Modifier;FF)Landroidx/compose/ui/Modifier;", "fillMaxHeight", "fraction", "", "fillMaxSize", "fillMaxWidth", "height", "height-3ABfNKs", "(Landroidx/compose/ui/Modifier;F)Landroidx/compose/ui/Modifier;", "heightIn", "min", "max", "heightIn-VpY3zN4", "requiredHeight", "requiredHeight-3ABfNKs", "requiredHeightIn", "requiredHeightIn-VpY3zN4", "requiredSize", "size", "requiredSize-3ABfNKs", "width", "requiredSize-VpY3zN4", "Landroidx/compose/ui/unit/DpSize;", "requiredSize-6HolHcs", "(Landroidx/compose/ui/Modifier;J)Landroidx/compose/ui/Modifier;", "requiredSizeIn", "maxWidth", "maxHeight", "requiredSizeIn-qDBjuR0", "(Landroidx/compose/ui/Modifier;FFFF)Landroidx/compose/ui/Modifier;", "requiredWidth", "requiredWidth-3ABfNKs", "requiredWidthIn", "requiredWidthIn-VpY3zN4", "size-3ABfNKs", "size-VpY3zN4", "size-6HolHcs", "sizeIn", "sizeIn-qDBjuR0", "width-3ABfNKs", "widthIn", "widthIn-VpY3zN4", "wrapContentHeight", "align", "Landroidx/compose/ui/Alignment$Vertical;", "unbounded", "", "wrapContentSize", "Landroidx/compose/ui/Alignment;", "wrapContentWidth", "Landroidx/compose/ui/Alignment$Horizontal;", "foundation-layout"})
/*      */ @SourceDebugExtension({"SMAP\nSize.kt\nKotlin\n*S Kotlin\n*F\n+ 1 Size.kt\nandroidx/compose/foundation/layout/SizeKt\n+ 2 InspectableValue.kt\nandroidx/compose/ui/platform/InspectableValueKt\n*L\n1#1,1112:1\n135#2:1113\n135#2:1114\n135#2:1115\n135#2:1116\n135#2:1117\n135#2:1118\n135#2:1119\n135#2:1120\n135#2:1121\n135#2:1122\n135#2:1123\n135#2:1124\n135#2:1125\n135#2:1126\n*S KotlinDebug\n*F\n+ 1 Size.kt\nandroidx/compose/foundation/layout/SizeKt\n*L\n61#1:1113\n85#1:1114\n111#1:1115\n138#1:1116\n176#1:1117\n199#1:1118\n226#1:1119\n257#1:1120\n285#1:1121\n315#1:1122\n342#1:1123\n381#1:1124\n405#1:1125\n434#1:1126\n*E\n"})
/*      */ public final class SizeKt
/*      */ {
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier width-3ABfNKs(@NotNull Modifier $this$width_u2d3ABfNKs, float width) {
/*   56 */     Intrinsics.checkNotNullParameter($this$width_u2d3ABfNKs, "$this$width");
/*      */ 
/*      */ 
/*      */ 
/*      */     
/*   61 */     int $i$f$debugInspectorInfo = 0;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 1113 */     return $this$width_u2d3ABfNKs.then((Modifier)new SizeElement(width, 0.0F, width, 0.0F, true, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$width-3ABfNKs$$inlined$debugInspectorInfo$1(width) : InspectableValueKt.getNoInspectorInfo(), 10, null)); } @Stable @NotNull public static final Modifier height-3ABfNKs(@NotNull Modifier $this$height_u2d3ABfNKs, float height) { Intrinsics.checkNotNullParameter($this$height_u2d3ABfNKs, "$this$height"); int $i$f$debugInspectorInfo = 0;
/* 1114 */     return $this$height_u2d3ABfNKs.then((Modifier)new SizeElement(0.0F, height, 0.0F, height, true, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$height-3ABfNKs$$inlined$debugInspectorInfo$1(height) : InspectableValueKt.getNoInspectorInfo(), 5, null)); } @Stable @NotNull public static final Modifier size-3ABfNKs(@NotNull Modifier $this$size_u2d3ABfNKs, float size) { Intrinsics.checkNotNullParameter($this$size_u2d3ABfNKs, "$this$size"); int $i$f$debugInspectorInfo = 0;
/* 1115 */     Function1 function1 = InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$size-3ABfNKs$$inlined$debugInspectorInfo$1(size) : InspectableValueKt.getNoInspectorInfo(); return $this$size_u2d3ABfNKs.then((Modifier)new SizeElement(size, size, size, size, true, function1, null)); } @Stable @NotNull public static final Modifier size-VpY3zN4(@NotNull Modifier $this$size_u2dVpY3zN4, float width, float height) { Intrinsics.checkNotNullParameter($this$size_u2dVpY3zN4, "$this$size"); int $i$f$debugInspectorInfo = 0;
/* 1116 */     Function1 function1 = InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$size-VpY3zN4$$inlined$debugInspectorInfo$1(width, height) : InspectableValueKt.getNoInspectorInfo(); return $this$size_u2dVpY3zN4.then((Modifier)new SizeElement(width, height, width, height, true, function1, null)); } @Stable @NotNull public static final Modifier widthIn-VpY3zN4(@NotNull Modifier $this$widthIn_u2dVpY3zN4, float min, float max) { Intrinsics.checkNotNullParameter($this$widthIn_u2dVpY3zN4, "$this$widthIn"); int $i$f$debugInspectorInfo = 0;
/* 1117 */     return $this$widthIn_u2dVpY3zN4.then((Modifier)new SizeElement(min, 0.0F, max, 0.0F, true, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$widthIn-VpY3zN4$$inlined$debugInspectorInfo$1(min, max) : InspectableValueKt.getNoInspectorInfo(), 10, null)); }
/* 1118 */   @Stable @NotNull public static final Modifier size-6HolHcs(@NotNull Modifier $this$size_u2d6HolHcs, long size) { Intrinsics.checkNotNullParameter($this$size_u2d6HolHcs, "$this$size"); return size-VpY3zN4($this$size_u2d6HolHcs, DpSize.getWidth-D9Ej5fM(size), DpSize.getHeight-D9Ej5fM(size)); } @Stable @NotNull public static final Modifier heightIn-VpY3zN4(@NotNull Modifier $this$heightIn_u2dVpY3zN4, float min, float max) { Intrinsics.checkNotNullParameter($this$heightIn_u2dVpY3zN4, "$this$heightIn"); int $i$f$debugInspectorInfo = 0; return $this$heightIn_u2dVpY3zN4.then((Modifier)new SizeElement(0.0F, min, 0.0F, max, true, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$heightIn-VpY3zN4$$inlined$debugInspectorInfo$1(min, max) : InspectableValueKt.getNoInspectorInfo(), 5, null)); } @Stable @NotNull public static final Modifier sizeIn-qDBjuR0(@NotNull Modifier $this$sizeIn_u2dqDBjuR0, float minWidth, float minHeight, float maxWidth, float maxHeight) { Intrinsics.checkNotNullParameter($this$sizeIn_u2dqDBjuR0, "$this$sizeIn"); int $i$f$debugInspectorInfo = 0;
/* 1119 */     return $this$sizeIn_u2dqDBjuR0.then((Modifier)new SizeElement(minWidth, minHeight, maxWidth, maxHeight, true, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$sizeIn-qDBjuR0$$inlined$debugInspectorInfo$1(minWidth, minHeight, maxWidth, maxHeight) : InspectableValueKt.getNoInspectorInfo(), null)); } @Stable @NotNull public static final Modifier requiredWidth-3ABfNKs(@NotNull Modifier $this$requiredWidth_u2d3ABfNKs, float width) { Intrinsics.checkNotNullParameter($this$requiredWidth_u2d3ABfNKs, "$this$requiredWidth"); int $i$f$debugInspectorInfo = 0;
/* 1120 */     return $this$requiredWidth_u2d3ABfNKs.then((Modifier)new SizeElement(width, 0.0F, width, 0.0F, false, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$requiredWidth-3ABfNKs$$inlined$debugInspectorInfo$1(width) : InspectableValueKt.getNoInspectorInfo(), 10, null)); } @Stable @NotNull public static final Modifier requiredHeight-3ABfNKs(@NotNull Modifier $this$requiredHeight_u2d3ABfNKs, float height) { Intrinsics.checkNotNullParameter($this$requiredHeight_u2d3ABfNKs, "$this$requiredHeight"); int $i$f$debugInspectorInfo = 0;
/* 1121 */     return $this$requiredHeight_u2d3ABfNKs.then((Modifier)new SizeElement(0.0F, height, 0.0F, height, false, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$requiredHeight-3ABfNKs$$inlined$debugInspectorInfo$1(height) : InspectableValueKt.getNoInspectorInfo(), 5, null)); } @Stable @NotNull public static final Modifier requiredSize-3ABfNKs(@NotNull Modifier $this$requiredSize_u2d3ABfNKs, float size) { Intrinsics.checkNotNullParameter($this$requiredSize_u2d3ABfNKs, "$this$requiredSize"); int $i$f$debugInspectorInfo = 0;
/* 1122 */     Function1 function1 = InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$requiredSize-3ABfNKs$$inlined$debugInspectorInfo$1(size) : InspectableValueKt.getNoInspectorInfo(); return $this$requiredSize_u2d3ABfNKs.then((Modifier)new SizeElement(size, size, size, size, false, function1, null)); } @Stable @NotNull public static final Modifier requiredSize-VpY3zN4(@NotNull Modifier $this$requiredSize_u2dVpY3zN4, float width, float height) { Intrinsics.checkNotNullParameter($this$requiredSize_u2dVpY3zN4, "$this$requiredSize"); int $i$f$debugInspectorInfo = 0;
/* 1123 */     Function1 function1 = InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$requiredSize-VpY3zN4$$inlined$debugInspectorInfo$1(width, height) : InspectableValueKt.getNoInspectorInfo(); return $this$requiredSize_u2dVpY3zN4.then((Modifier)new SizeElement(width, height, width, height, false, function1, null)); } @Stable @NotNull public static final Modifier requiredSize-6HolHcs(@NotNull Modifier $this$requiredSize_u2d6HolHcs, long size) { Intrinsics.checkNotNullParameter($this$requiredSize_u2d6HolHcs, "$this$requiredSize"); return requiredSize-VpY3zN4($this$requiredSize_u2d6HolHcs, DpSize.getWidth-D9Ej5fM(size), DpSize.getHeight-D9Ej5fM(size)); }
/* 1124 */   @Stable @NotNull public static final Modifier requiredWidthIn-VpY3zN4(@NotNull Modifier $this$requiredWidthIn_u2dVpY3zN4, float min, float max) { Intrinsics.checkNotNullParameter($this$requiredWidthIn_u2dVpY3zN4, "$this$requiredWidthIn"); int $i$f$debugInspectorInfo = 0; return $this$requiredWidthIn_u2dVpY3zN4.then((Modifier)new SizeElement(min, 0.0F, max, 0.0F, false, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$requiredWidthIn-VpY3zN4$$inlined$debugInspectorInfo$1(min, max) : InspectableValueKt.getNoInspectorInfo(), 10, null)); } @Stable @NotNull public static final Modifier requiredHeightIn-VpY3zN4(@NotNull Modifier $this$requiredHeightIn_u2dVpY3zN4, float min, float max) { Intrinsics.checkNotNullParameter($this$requiredHeightIn_u2dVpY3zN4, "$this$requiredHeightIn"); int $i$f$debugInspectorInfo = 0;
/* 1125 */     return $this$requiredHeightIn_u2dVpY3zN4.then((Modifier)new SizeElement(0.0F, min, 0.0F, max, false, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$requiredHeightIn-VpY3zN4$$inlined$debugInspectorInfo$1(min, max) : InspectableValueKt.getNoInspectorInfo(), 5, null)); } @Stable @NotNull public static final Modifier requiredSizeIn-qDBjuR0(@NotNull Modifier $this$requiredSizeIn_u2dqDBjuR0, float minWidth, float minHeight, float maxWidth, float maxHeight) { Intrinsics.checkNotNullParameter($this$requiredSizeIn_u2dqDBjuR0, "$this$requiredSizeIn"); int $i$f$debugInspectorInfo = 0;
/* 1126 */     return $this$requiredSizeIn_u2dqDBjuR0.then((Modifier)new SizeElement(minWidth, minHeight, maxWidth, maxHeight, false, InspectableValueKt.isDebugInspectorInfoEnabled() ? new SizeKt$requiredSizeIn-qDBjuR0$$inlined$debugInspectorInfo$1(minWidth, minHeight, maxWidth, maxHeight) : InspectableValueKt.getNoInspectorInfo(), null)); }
/*      */ 
/*      */   
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier fillMaxWidth(@NotNull Modifier $this$fillMaxWidth, @FloatRange(from = 0.0D, to = 1.0D) float fraction) {
/*      */     Intrinsics.checkNotNullParameter($this$fillMaxWidth, "<this>");
/*      */     return $this$fillMaxWidth.then(((fraction == 1.0F)) ? (Modifier)FillWholeMaxWidth : (Modifier)FillElement.Companion.width(fraction));
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   private static final FillElement FillWholeMaxWidth = FillElement.Companion.width(1.0F);
/*      */   
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier fillMaxHeight(@NotNull Modifier $this$fillMaxHeight, @FloatRange(from = 0.0D, to = 1.0D) float fraction) {
/*      */     Intrinsics.checkNotNullParameter($this$fillMaxHeight, "<this>");
/*      */     return $this$fillMaxHeight.then(((fraction == 1.0F)) ? (Modifier)FillWholeMaxHeight : (Modifier)FillElement.Companion.height(fraction));
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   private static final FillElement FillWholeMaxHeight = FillElement.Companion.height(1.0F);
/*      */   
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier fillMaxSize(@NotNull Modifier $this$fillMaxSize, @FloatRange(from = 0.0D, to = 1.0D) float fraction) {
/*      */     Intrinsics.checkNotNullParameter($this$fillMaxSize, "<this>");
/*      */     return $this$fillMaxSize.then(((fraction == 1.0F)) ? (Modifier)FillWholeMaxSize : (Modifier)FillElement.Companion.size(fraction));
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   private static final FillElement FillWholeMaxSize = FillElement.Companion.size(1.0F);
/*      */   
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier wrapContentWidth(@NotNull Modifier $this$wrapContentWidth, @NotNull Alignment.Horizontal align, boolean unbounded) {
/*      */     Intrinsics.checkNotNullParameter($this$wrapContentWidth, "<this>");
/*      */     Intrinsics.checkNotNullParameter(align, "align");
/*      */     return $this$wrapContentWidth.then((Intrinsics.areEqual(align, Alignment.Companion.getCenterHorizontally()) && !unbounded) ? (Modifier)WrapContentWidthCenter : ((Intrinsics.areEqual(align, Alignment.Companion.getStart()) && !unbounded) ? (Modifier)WrapContentWidthStart : (Modifier)WrapContentElement.Companion.width(align, unbounded)));
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   private static final WrapContentElement WrapContentWidthCenter = WrapContentElement.Companion.width(Alignment.Companion.getCenterHorizontally(), false);
/*      */   @NotNull
/*      */   private static final WrapContentElement WrapContentWidthStart = WrapContentElement.Companion.width(Alignment.Companion.getStart(), false);
/*      */   
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier wrapContentHeight(@NotNull Modifier $this$wrapContentHeight, @NotNull Alignment.Vertical align, boolean unbounded) {
/*      */     Intrinsics.checkNotNullParameter($this$wrapContentHeight, "<this>");
/*      */     Intrinsics.checkNotNullParameter(align, "align");
/*      */     return $this$wrapContentHeight.then((Intrinsics.areEqual(align, Alignment.Companion.getCenterVertically()) && !unbounded) ? (Modifier)WrapContentHeightCenter : ((Intrinsics.areEqual(align, Alignment.Companion.getTop()) && !unbounded) ? (Modifier)WrapContentHeightTop : (Modifier)WrapContentElement.Companion.height(align, unbounded)));
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   private static final WrapContentElement WrapContentHeightCenter = WrapContentElement.Companion.height(Alignment.Companion.getCenterVertically(), false);
/*      */   @NotNull
/*      */   private static final WrapContentElement WrapContentHeightTop = WrapContentElement.Companion.height(Alignment.Companion.getTop(), false);
/*      */   
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier wrapContentSize(@NotNull Modifier $this$wrapContentSize, @NotNull Alignment align, boolean unbounded) {
/*      */     Intrinsics.checkNotNullParameter($this$wrapContentSize, "<this>");
/*      */     Intrinsics.checkNotNullParameter(align, "align");
/*      */     return $this$wrapContentSize.then((Intrinsics.areEqual(align, Alignment.Companion.getCenter()) && !unbounded) ? (Modifier)WrapContentSizeCenter : ((Intrinsics.areEqual(align, Alignment.Companion.getTopStart()) && !unbounded) ? (Modifier)WrapContentSizeTopStart : (Modifier)WrapContentElement.Companion.size(align, unbounded)));
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   private static final WrapContentElement WrapContentSizeCenter = WrapContentElement.Companion.size(Alignment.Companion.getCenter(), false);
/*      */   @NotNull
/*      */   private static final WrapContentElement WrapContentSizeTopStart = WrapContentElement.Companion.size(Alignment.Companion.getTopStart(), false);
/*      */   
/*      */   @Stable
/*      */   @NotNull
/*      */   public static final Modifier defaultMinSize-VpY3zN4(@NotNull Modifier $this$defaultMinSize_u2dVpY3zN4, float minWidth, float minHeight) {
/*      */     Intrinsics.checkNotNullParameter($this$defaultMinSize_u2dVpY3zN4, "$this$defaultMinSize");
/*      */     return $this$defaultMinSize_u2dVpY3zN4.then((Modifier)new UnspecifiedConstraintsElement(minWidth, minHeight, null));
/*      */   }
/*      */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\foundation-layout-desktop-1.7.3.jar!\androidx\compose\foundation\layout\SizeKt.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */