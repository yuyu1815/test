$ref = {0}: hat einen Fehler mit ''refs''
additionalItems = {0}: Index \u201E{1}\u201C ist im Schema nicht definiert und das Schema lässt keine zusätzlichen Elemente zu
additionalProperties = {0}: Eigenschaft ''{1}'' ist im Schema nicht definiert und das Schema lässt keine zusätzlichen Eigenschaften zu
allOf = {0}: muss für alle Schemas {1} gültig sein
anyOf = {0}: muss für eines der Schemas {1} gültig sein
const = {0}: muss der konstante Wert ''{1}'' sein
contains = {0}: enthält kein Element, das diese Validierungen besteht: {2}
contains.max = {0}: muss höchstens {1} Elemente enthalten, die diese Validierungen bestehen: {2}
contains.min = {0}: muss mindestens {1} Elemente enthalten, die diese Validierungen bestehen: {2}
dependencies = {0}: Es liegt ein Fehler mit den Abhängigkeiten {1} vor.
dependentRequired = {0}: Es fehlt eine Eigenschaft \u201E{1}\u201C, die abhängig ist, da \u201E{2}\u201C vorhanden ist
dependentSchemas = {0}: Es liegt ein Fehler mit dependenceSchemas {1} vor.
enum = {0}: hat keinen Wert in der Aufzählung {1}
exclusiveMaximum = {0}: muss einen exklusiven Maximalwert von {1} haben
exclusiveMinimum = {0}: muss einen exklusiven Mindestwert von {1} haben
false = {0}: Schema für ''{1}'' ist falsch
format = {0}: entspricht nicht dem Muster {1} {2}
format.date = {0}: stimmt nicht mit dem {1}-Muster überein, muss ein gültiges RFC 3339-Volldatum sein
format.date-time = {0}: entspricht nicht dem {1}-Muster. Es muss sich um ein gültiges RFC 3339-Datum/Uhrzeit-Format handeln
format.duration = {0}: stimmt nicht mit dem {1}-Muster überein, muss eine gültige ISO 8601-Dauer sein
format.email = {0}: entspricht nicht dem {1}-Muster. Es muss sich um ein gültiges RFC 5321-Postfach handeln
format.ipv4 = {0}: entspricht nicht dem {1}-Muster. Es muss sich um eine gültige RFC 2673-IP-Adresse handeln
format.ipv6 = {0}: entspricht nicht dem {1}-Muster. Es muss sich um eine gültige RFC 4291-IP-Adresse handeln
format.idn-email = {0}: entspricht nicht dem {1}-Muster. Es muss sich um ein gültiges RFC 6531-Postfach handeln
format.idn-hostname = {0}: entspricht nicht dem {1}-Muster. Es muss sich um einen gültigen internationalisierten RFC 5890-Hostnamen handeln
format.iri = {0}: entspricht nicht dem {1}-Muster, muss ein gültiger RFC 3987 IRI sein
format.iri-reference = {0}: entspricht nicht dem {1}-Muster muss eine gültige RFC 3987 IRI-Referenz sein
format.uri = {0}: entspricht nicht dem {1}-Muster muss ein gültiger RFC 3986-URI sein
format.uri-reference = {0}: stimmt nicht mit dem {1}-Muster überein, muss eine gültige RFC 3986-URI-Referenz sein
format.uri-template = {0}: entspricht nicht dem {1}-Muster. Es muss sich um eine gültige RFC 6570-URI-Vorlage handeln
format.uuid = {0}: stimmt nicht mit dem {1}-Muster überein, muss eine gültige RFC 4122-UUID sein
format.regex = {0}: entspricht nicht dem Muster {1} muss ein gültiger regulärer ECMA-262-Ausdruck sein
format.time = {0}: entspricht nicht dem {1}-Muster muss eine gültige RFC 3339-Zeit sein
format.hostname = {0}: entspricht nicht dem {1}-Muster. Es muss sich um einen gültigen RFC 1123-Hostnamen handeln
format.json-pointer = {0}: stimmt nicht mit dem {1}-Muster überein, muss ein gültiger RFC 6901-JSON-Zeiger sein
format.relative-json-pointer = {0}: stimmt nicht mit dem {1}-Muster überein, muss ein gültiger relativer IETF-JSON-Zeiger sein
format.unknown = {0}: hat ein unbekanntes Format ''{1}''
id = {0}: ''{1}'' ist kein gültiger {2}
items = {0}: Index ''{1}'' ist im Schema nicht definiert und das Schema lässt keine zusätzlichen Elemente zu
maxContains = {0}: muss eine nicht negative Ganzzahl in {1} sein
maxItems = {0}: muss höchstens {1} Elemente haben, aber {2} gefunden
maxLength = {0}: darf höchstens {1} Zeichen lang sein
maxProperties = {0}: darf höchstens {1} Eigenschaften haben
maximum = {0}: muss einen Maximalwert von {1} haben
minContains = {0}: muss eine nicht negative Ganzzahl in {1} sein
minContainsVsMaxContains = {0}: minContains muss kleiner oder gleich maxContains in {1} sein
minItems = {0}: muss mindestens {1} Elemente haben, aber {2} gefunden
minLength = {0}: muss mindestens {1} Zeichen lang sein
minProperties = {0}: muss mindestens {1} Eigenschaften haben
minimum = {0}: muss einen Mindestwert von {1} haben
multipleOf = {0}: muss ein Vielfaches von {1} sein
not = {0}: darf für das Schema {1} nicht gültig sein
notAllowed = {0}: Eigenschaft ''{1}'' ist nicht zulässig, befindet sich aber in den Daten
oneOf = {0}: muss für ein und nur ein Schema gültig sein, aber {1} sind gültig
oneOf.indexes = {0}: muss für ein und nur ein Schema gültig sein, aber {1} sind mit den Indizes \u201E{2}\u201C gültig.
pattern = {0}: stimmt nicht mit dem Regex-Muster {1} überein
patternProperties = {0}: Es liegt ein Fehler mit den \u201EMustereigenschaften\u201C vor.
prefixItems = {0}: Bei diesem Index wurde kein Validator gefunden
properties = {0}: Es liegt ein Fehler mit \u201EProperties\u201C vor.
propertyNames = {0}: Der Name der Eigenschaft \u201E{1}\u201C ist ungültig: {2}
readOnly = {0}: ist ein schreibgeschütztes Feld, es kann nicht geändert werden
required = {0}: erforderliche Eigenschaft ''{1}'' nicht gefunden
type = {0}: {1} gefunden, {2} erwartet
unevaluatedItems = {0}: Index ''{1}'' wird nicht ausgewertet und das Schema lässt keine nicht ausgewerteten Elemente zu
unevaluatedProperties = {0}: Eigenschaft ''{1}'' wird nicht ausgewertet und das Schema lässt keine nicht ausgewerteten Eigenschaften zu
unionType = {0}: {1} gefunden, {2} erwartet
uniqueItems = {0}: Das Array darf nur eindeutige Elemente enthalten
writeOnly = {0}: ist ein schreibgeschütztes Feld, es kann nicht in den Daten erscheinen
contentEncoding = {0}: stimmt nicht mit der Inhaltskodierung {1} überein
contentMediaType = {0}: ist kein Inhalt für mich
