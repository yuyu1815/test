/*      */ package androidx.compose.runtime.snapshots;
/*      */ 
/*      */ import androidx.collection.MutableScatterSet;
/*      */ import androidx.collection.ScatterSet;
/*      */ import androidx.collection.ScatterSetKt;
/*      */ import androidx.compose.runtime.SynchronizedObject;
/*      */ import androidx.compose.runtime.internal.StabilityInferred;
/*      */ import java.util.List;
/*      */ import java.util.Map;
/*      */ import kotlin.Metadata;
/*      */ import kotlin.Pair;
/*      */ import kotlin.Unit;
/*      */ import kotlin.collections.ArraysKt;
/*      */ import kotlin.jvm.functions.Function0;
/*      */ import kotlin.jvm.functions.Function1;
/*      */ import kotlin.jvm.internal.DefaultConstructorMarker;
/*      */ import kotlin.jvm.internal.InlineMarker;
/*      */ import kotlin.jvm.internal.Intrinsics;
/*      */ import kotlin.jvm.internal.SourceDebugExtension;
/*      */ import org.jetbrains.annotations.NotNull;
/*      */ import org.jetbrains.annotations.Nullable;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ @Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\000f\n\002\030\002\n\002\030\002\n\000\n\002\020\b\n\000\n\002\030\002\n\000\n\002\030\002\n\002\020\000\n\002\020\002\n\002\b\003\n\002\020\013\n\002\b\005\n\002\020 \n\002\030\002\n\002\b\005\n\002\030\002\n\002\b\013\n\002\020\025\n\002\b\027\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\007\n\002\020$\n\002\030\002\n\002\b\036\b\027\030\000 g2\0020\001:\001gBC\b\000\022\006\020\002\032\0020\003\022\006\020\004\032\0020\005\022\024\020\006\032\020\022\004\022\0020\b\022\004\022\0020\t\030\0010\007\022\024\020\n\032\020\022\004\022\0020\b\022\004\022\0020\t\030\0010\007¢\006\002\020\013J\b\0209\032\0020\tH\002J\r\020:\032\0020\tH\000¢\006\002\b;J'\020:\032\002H<\"\004\b\000\020<2\f\020=\032\b\022\004\022\002H<0>H\bø\001\000¢\006\004\b;\020?J\b\020@\032\0020AH\026J\r\020B\032\0020\tH\020¢\006\002\bCJ\b\020D\032\0020\tH\026J\b\020E\032\0020\rH\026J3\020F\032\0020A2\006\020G\032\0020\0032\024\020H\032\020\022\004\022\0020J\022\004\022\0020J\030\0010I2\006\020K\032\0020\005H\000¢\006\002\bLJ\025\020M\032\0020\t2\006\020N\032\0020\001H\020¢\006\002\bOJ\025\020P\032\0020\t2\006\020N\032\0020\001H\020¢\006\002\bQJ\r\020R\032\0020\tH\020¢\006\002\bSJ\025\020T\032\0020\t2\006\020U\032\0020\024H\020¢\006\002\bVJ\025\020W\032\0020\t2\006\020\002\032\0020\003H\000¢\006\002\bXJ\025\020Y\032\0020\t2\006\0202\032\0020\005H\000¢\006\002\bZJ\025\020[\032\0020\t2\006\020\002\032\0020\003H\000¢\006\002\b\\J\025\020]\032\0020\t2\006\020^\032\0020&H\000¢\006\002\b_J\r\020`\032\0020\tH\020¢\006\002\baJ\b\020b\032\0020\tH\002J8\020c\032\0020\0002\026\b\002\020\006\032\020\022\004\022\0020\b\022\004\022\0020\t\030\0010\0072\026\b\002\020\n\032\020\022\004\022\0020\b\022\004\022\0020\t\030\0010\007H\026J\036\020d\032\0020\0012\024\020\006\032\020\022\004\022\0020\b\022\004\022\0020\t\030\0010\007H\026J\b\020e\032\0020\tH\002J\b\020f\032\0020\tH\002R\032\020\f\032\0020\rX\016¢\006\016\n\000\032\004\b\016\020\017\"\004\b\020\020\021R\"\020\022\032\n\022\004\022\0020\024\030\0010\023X\016¢\006\016\n\000\032\004\b\025\020\026\"\004\b\027\020\030R4\020\033\032\n\022\004\022\0020\024\030\0010\0322\016\020\031\032\n\022\004\022\0020\024\030\0010\032@VX\016¢\006\016\n\000\032\004\b\034\020\035\"\004\b\036\020\037R\032\020 \032\0020\005X\016¢\006\016\n\000\032\004\b!\020\"\"\004\b#\020$R\032\020%\032\0020&X\016¢\006\016\n\000\032\004\b'\020(\"\004\b)\020*R\"\020\006\032\020\022\004\022\0020\b\022\004\022\0020\t\030\0010\007X\004¢\006\b\n\000\032\004\b+\020,R\024\020-\032\0020\r8VX\004¢\006\006\032\004\b.\020\017R\024\020/\032\0020\0018VX\004¢\006\006\032\004\b0\0201R\016\0202\032\0020\003X\016¢\006\002\n\000R\032\0203\032\0020\003X\016¢\006\016\n\000\032\004\b4\0205\"\004\b6\0207R\"\020\n\032\020\022\004\022\0020\b\022\004\022\0020\t\030\0010\007X\004¢\006\b\n\000\032\004\b8\020,\002\007\n\005\b20\001¨\006h"}, d2 = {"Landroidx/compose/runtime/snapshots/MutableSnapshot;", "Landroidx/compose/runtime/snapshots/Snapshot;", "id", "", "invalid", "Landroidx/compose/runtime/snapshots/SnapshotIdSet;", "readObserver", "Lkotlin/Function1;", "", "", "writeObserver", "(ILandroidx/compose/runtime/snapshots/SnapshotIdSet;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)V", "applied", "", "getApplied$runtime", "()Z", "setApplied$runtime", "(Z)V", "merged", "", "Landroidx/compose/runtime/snapshots/StateObject;", "getMerged$runtime", "()Ljava/util/List;", "setMerged$runtime", "(Ljava/util/List;)V", "<set-?>", "Landroidx/collection/MutableScatterSet;", "modified", "getModified$runtime", "()Landroidx/collection/MutableScatterSet;", "setModified", "(Landroidx/collection/MutableScatterSet;)V", "previousIds", "getPreviousIds$runtime", "()Landroidx/compose/runtime/snapshots/SnapshotIdSet;", "setPreviousIds$runtime", "(Landroidx/compose/runtime/snapshots/SnapshotIdSet;)V", "previousPinnedSnapshots", "", "getPreviousPinnedSnapshots$runtime", "()[I", "setPreviousPinnedSnapshots$runtime", "([I)V", "getReadObserver$runtime", "()Lkotlin/jvm/functions/Function1;", "readOnly", "getReadOnly", "root", "getRoot", "()Landroidx/compose/runtime/snapshots/Snapshot;", "snapshots", "writeCount", "getWriteCount$runtime", "()I", "setWriteCount$runtime", "(I)V", "getWriteObserver$runtime", "abandon", "advance", "advance$runtime", "T", "block", "Lkotlin/Function0;", "(Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;", "apply", "Landroidx/compose/runtime/snapshots/SnapshotApplyResult;", "closeLocked", "closeLocked$runtime", "dispose", "hasPendingChanges", "innerApplyLocked", "snapshotId", "optimisticMerges", "", "Landroidx/compose/runtime/snapshots/StateRecord;", "invalidSnapshots", "innerApplyLocked$runtime", "nestedActivated", "snapshot", "nestedActivated$runtime", "nestedDeactivated", "nestedDeactivated$runtime", "notifyObjectsInitialized", "notifyObjectsInitialized$runtime", "recordModified", "state", "recordModified$runtime", "recordPrevious", "recordPrevious$runtime", "recordPreviousList", "recordPreviousList$runtime", "recordPreviousPinnedSnapshot", "recordPreviousPinnedSnapshot$runtime", "recordPreviousPinnedSnapshots", "handles", "recordPreviousPinnedSnapshots$runtime", "releasePinnedSnapshotsForCloseLocked", "releasePinnedSnapshotsForCloseLocked$runtime", "releasePreviouslyPinnedSnapshotsLocked", "takeNestedMutableSnapshot", "takeNestedSnapshot", "validateNotApplied", "validateNotAppliedOrPinned", "Companion", "runtime"})
/*      */ @StabilityInferred(parameters = 0)
/*      */ @SourceDebugExtension({"SMAP\nSnapshot.kt\nKotlin\n*S Kotlin\n*F\n+ 1 Snapshot.kt\nandroidx/compose/runtime/snapshots/MutableSnapshot\n+ 2 Snapshot.kt\nandroidx/compose/runtime/snapshots/SnapshotKt\n+ 3 SynchronizedObject.jvm.kt\nandroidx/compose/runtime/ActualJvm_jvmKt__SynchronizedObject_jvmKt\n+ 4 ListUtils.kt\nandroidx/compose/runtime/snapshots/ListUtilsKt\n+ 5 ScatterSet.kt\nandroidx/collection/ScatterSet\n+ 6 ScatterMap.kt\nandroidx/collection/ScatterMapKt\n+ 7 Preconditions.kt\nandroidx/compose/runtime/PreconditionsKt\n+ 8 Snapshot.kt\nandroidx/compose/runtime/snapshots/Snapshot\n+ 9 fake.kt\nkotlin/jvm/internal/FakeKt\n*L\n1#1,2432:1\n1100#1,2:2433\n1106#1,3:2437\n1109#1,6:2442\n1100#1,2:2524\n1106#1,3:2528\n1109#1,6:2533\n1100#1,9:2630\n1109#1,6:2641\n1844#2:2435\n1844#2:2440\n1844#2:2448\n1844#2:2462\n1844#2:2526\n1844#2:2531\n1844#2:2619\n1844#2:2628\n1844#2:2639\n1844#2:2647\n1844#2:2649\n26#3:2436\n26#3:2441\n26#3:2449\n26#3:2463\n26#3:2527\n26#3:2532\n26#3:2620\n26#3:2629\n26#3:2640\n26#3:2648\n26#3:2650\n33#4,6:2450\n33#4,6:2456\n33#4,6:2518\n33#4,4:2615\n38#4:2621\n33#4,6:2622\n267#5,4:2464\n237#5,7:2468\n248#5,3:2476\n251#5,2:2480\n272#5,2:2482\n254#5,6:2484\n274#5:2490\n267#5,4:2491\n237#5,7:2495\n248#5,3:2503\n251#5,2:2507\n272#5,2:2509\n254#5,6:2511\n274#5:2517\n267#5,4:2561\n237#5,7:2565\n248#5,3:2573\n251#5,2:2577\n272#5,2:2579\n254#5,6:2581\n274#5:2587\n267#5,4:2588\n237#5,7:2592\n248#5,3:2600\n251#5,2:2604\n272#5,2:2606\n254#5,6:2608\n274#5:2614\n1810#6:2475\n1672#6:2479\n1810#6:2502\n1672#6:2506\n1810#6:2572\n1672#6:2576\n1810#6:2599\n1672#6:2603\n33#7,7:2539\n50#7,7:2546\n50#7,7:2554\n202#8:2553\n1#9:2651\n*S KotlinDebug\n*F\n+ 1 Snapshot.kt\nandroidx/compose/runtime/snapshots/MutableSnapshot\n*L\n786#1:2433,2\n786#1:2437,3\n786#1:2442,6\n921#1:2524,2\n921#1:2528,3\n921#1:2533,6\n1117#1:2630,9\n1117#1:2641,6\n787#1:2435\n786#1:2440\n838#1:2448\n894#1:2462\n922#1:2526\n921#1:2531\n1083#1:2619\n1108#1:2628\n1117#1:2639\n1120#1:2647\n1144#1:2649\n787#1:2436\n786#1:2441\n838#1:2449\n894#1:2463\n922#1:2527\n921#1:2532\n1083#1:2620\n1108#1:2629\n1117#1:2640\n1120#1:2648\n1144#1:2650\n878#1:2450,6\n886#1:2456,6\n899#1:2518,6\n1080#1:2615,4\n1080#1:2621\n1091#1:2622,6\n897#1:2464,4\n897#1:2468,7\n897#1:2476,3\n897#1:2480,2\n897#1:2482,2\n897#1:2484,6\n897#1:2490\n898#1:2491,4\n898#1:2495,7\n898#1:2503,3\n898#1:2507,2\n898#1:2509,2\n898#1:2511,6\n898#1:2517\n986#1:2561,4\n986#1:2565,7\n986#1:2573,3\n986#1:2577,2\n986#1:2579,2\n986#1:2581,6\n986#1:2587\n1021#1:2588,4\n1021#1:2592,7\n1021#1:2600,3\n1021#1:2604,2\n1021#1:2606,2\n1021#1:2608,6\n1021#1:2614\n897#1:2475\n897#1:2479\n898#1:2502\n898#1:2506\n986#1:2572\n986#1:2576\n1021#1:2599\n1021#1:2603\n938#1:2539,7\n962#1:2546,7\n968#1:2554,7\n968#1:2553\n*E\n"})
/*      */ public class MutableSnapshot
/*      */   extends Snapshot
/*      */ {
/*      */   @Nullable
/*      */   public Function1<Object, Unit> getReadObserver$runtime() {
/*  758 */     return this.readObserver; } @Nullable
/*  759 */   public Function1<Object, Unit> getWriteObserver$runtime() { return this.writeObserver; } public MutableSnapshot(int id, @NotNull SnapshotIdSet invalid, @Nullable Function1<Object, Unit> readObserver, @Nullable Function1<Object, Unit> writeObserver) {
/*  760 */     super(id, invalid, null);
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/*      */     this.readObserver = readObserver;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/*      */     this.writeObserver = writeObserver;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 1163 */     this.previousIds = SnapshotIdSet.Companion.getEMPTY();
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 1168 */     this.previousPinnedSnapshots = EmptyIntArray;
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 1174 */     this.snapshots = 1;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean hasPendingChanges() {
/*      */     getModified$runtime();
/*      */     return (getModified$runtime() != null) ? ((getModified$runtime().isNotEmpty() == true)) : false;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   @NotNull
/*      */   public MutableSnapshot takeNestedMutableSnapshot(@Nullable Function1 readObserver, @Nullable Function1 writeObserver) {
/*      */     validateNotDisposed$runtime();
/*      */     validateNotAppliedOrPinned();
/*      */     MutableSnapshot this_$iv = this;
/*      */     int $i$f$advance$runtime = 0;
/* 2433 */     this_$iv.recordPrevious$runtime(this_$iv.getId());
/* 2434 */     int $i$a$-advance$runtime-MutableSnapshot$takeNestedMutableSnapshot$1 = 0; int $i$f$sync = 0;
/* 2435 */     SynchronizedObject lock$iv$iv = SnapshotKt.getLock(); int $i$f$synchronized = 0;
/* 2436 */     synchronized (lock$iv$iv) { int $i$a$-sync-MutableSnapshot$takeNestedMutableSnapshot$1$1 = 0; int i = SnapshotKt.access$getNextSnapshotId$p(); SnapshotKt.access$setNextSnapshotId$p(i + 1); int newId = i; SnapshotKt.access$setOpenSnapshots$p(SnapshotKt.access$getOpenSnapshots$p().set(newId)); SnapshotIdSet currentInvalid = getInvalid$runtime(); setInvalid$runtime(currentInvalid.set(newId)); NestedMutableSnapshot nestedMutableSnapshot1 = new NestedMutableSnapshot(newId, SnapshotKt.addRange(currentInvalid, getId() + 1, newId), SnapshotKt.mergedReadObserver$default(readObserver, getReadObserver$runtime(), false, 4, null), SnapshotKt.access$mergedWriteObserver(writeObserver, getWriteObserver$runtime()), this); }  NestedMutableSnapshot nestedMutableSnapshot = nestedMutableSnapshot1; Object it$iv = nestedMutableSnapshot; int $i$a$-also-MutableSnapshot$advance$1$iv = 0;
/* 2437 */     if (!this_$iv.getApplied$runtime() && !this_$iv.getDisposed$runtime()) {
/* 2438 */       int previousId$iv = this_$iv.getId();
/* 2439 */       int i = 0;
/* 2440 */       SynchronizedObject lock$iv$iv$iv = SnapshotKt.getLock(); int j = 0;
/* 2441 */       synchronized (lock$iv$iv$iv) { int $i$a$-sync-MutableSnapshot$advance$1$1$iv = 0;
/* 2442 */         int k = SnapshotKt.access$getNextSnapshotId$p(); SnapshotKt.access$setNextSnapshotId$p(k + 1); this_$iv.setId$runtime(k);
/* 2443 */         SnapshotKt.access$setOpenSnapshots$p(SnapshotKt.access$getOpenSnapshots$p().set(this_$iv.getId()));
/* 2444 */         Unit unit = Unit.INSTANCE; }
/* 2445 */        this_$iv.setInvalid$runtime(SnapshotKt.addRange(this_$iv.getInvalid$runtime(), previousId$iv + 1, this_$iv.getId()));
/*      */     } 
/*      */     return nestedMutableSnapshot;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   @NotNull
/*      */   public SnapshotApplyResult apply() {
/*      */     // Byte code:
/*      */     //   0: aload_0
/*      */     //   1: invokevirtual getModified$runtime : ()Landroidx/collection/MutableScatterSet;
/*      */     //   4: astore_1
/*      */     //   5: aload_1
/*      */     //   6: ifnull -> 43
/*      */     //   9: invokestatic access$getCurrentGlobalSnapshot$p : ()Landroidx/compose/runtime/AtomicReference;
/*      */     //   12: invokevirtual get : ()Ljava/lang/Object;
/*      */     //   15: checkcast androidx/compose/runtime/snapshots/MutableSnapshot
/*      */     //   18: aload_0
/*      */     //   19: invokestatic access$getOpenSnapshots$p : ()Landroidx/compose/runtime/snapshots/SnapshotIdSet;
/*      */     //   22: invokestatic access$getCurrentGlobalSnapshot$p : ()Landroidx/compose/runtime/AtomicReference;
/*      */     //   25: invokevirtual get : ()Ljava/lang/Object;
/*      */     //   28: checkcast androidx/compose/runtime/snapshots/GlobalSnapshot
/*      */     //   31: invokevirtual getId : ()I
/*      */     //   34: invokevirtual clear : (I)Landroidx/compose/runtime/snapshots/SnapshotIdSet;
/*      */     //   37: invokestatic access$optimisticMerges : (Landroidx/compose/runtime/snapshots/MutableSnapshot;Landroidx/compose/runtime/snapshots/MutableSnapshot;Landroidx/compose/runtime/snapshots/SnapshotIdSet;)Ljava/util/Map;
/*      */     //   40: goto -> 44
/*      */     //   43: aconst_null
/*      */     //   44: astore_2
/*      */     //   45: aconst_null
/*      */     //   46: astore_3
/*      */     //   47: invokestatic emptyList : ()Ljava/util/List;
/*      */     //   50: astore_3
/*      */     //   51: aconst_null
/*      */     //   52: astore #4
/*      */     //   54: iconst_0
/*      */     //   55: istore #5
/*      */     //   57: invokestatic getLock : ()Landroidx/compose/runtime/SynchronizedObject;
/*      */     //   60: astore #6
/*      */     //   62: iconst_0
/*      */     //   63: istore #7
/*      */     //   65: aload #6
/*      */     //   67: astore #8
/*      */     //   69: aload #8
/*      */     //   71: monitorenter
/*      */     //   72: nop
/*      */     //   73: iconst_0
/*      */     //   74: istore #9
/*      */     //   76: aload_0
/*      */     //   77: checkcast androidx/compose/runtime/snapshots/Snapshot
/*      */     //   80: invokestatic access$validateOpen : (Landroidx/compose/runtime/snapshots/Snapshot;)V
/*      */     //   83: aload_1
/*      */     //   84: ifnull -> 94
/*      */     //   87: aload_1
/*      */     //   88: invokevirtual getSize : ()I
/*      */     //   91: ifne -> 152
/*      */     //   94: aload_0
/*      */     //   95: invokevirtual closeLocked$runtime : ()V
/*      */     //   98: invokestatic access$getCurrentGlobalSnapshot$p : ()Landroidx/compose/runtime/AtomicReference;
/*      */     //   101: invokevirtual get : ()Ljava/lang/Object;
/*      */     //   104: checkcast androidx/compose/runtime/snapshots/GlobalSnapshot
/*      */     //   107: astore #10
/*      */     //   109: aload #10
/*      */     //   111: checkcast androidx/compose/runtime/snapshots/Snapshot
/*      */     //   114: invokestatic access$getEmptyLambda$p : ()Lkotlin/jvm/functions/Function1;
/*      */     //   117: invokestatic access$takeNewGlobalSnapshot : (Landroidx/compose/runtime/snapshots/Snapshot;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
/*      */     //   120: pop
/*      */     //   121: aload #10
/*      */     //   123: invokevirtual getModified$runtime : ()Landroidx/collection/MutableScatterSet;
/*      */     //   126: astore #11
/*      */     //   128: aload #11
/*      */     //   130: ifnull -> 247
/*      */     //   133: aload #11
/*      */     //   135: invokevirtual isNotEmpty : ()Z
/*      */     //   138: ifeq -> 247
/*      */     //   141: invokestatic access$getApplyObservers$p : ()Ljava/util/List;
/*      */     //   144: astore_3
/*      */     //   145: aload #11
/*      */     //   147: astore #4
/*      */     //   149: goto -> 247
/*      */     //   152: invokestatic access$getCurrentGlobalSnapshot$p : ()Landroidx/compose/runtime/AtomicReference;
/*      */     //   155: invokevirtual get : ()Ljava/lang/Object;
/*      */     //   158: checkcast androidx/compose/runtime/snapshots/GlobalSnapshot
/*      */     //   161: astore #10
/*      */     //   163: aload_0
/*      */     //   164: invokestatic access$getNextSnapshotId$p : ()I
/*      */     //   167: aload_2
/*      */     //   168: invokestatic access$getOpenSnapshots$p : ()Landroidx/compose/runtime/snapshots/SnapshotIdSet;
/*      */     //   171: aload #10
/*      */     //   173: invokevirtual getId : ()I
/*      */     //   176: invokevirtual clear : (I)Landroidx/compose/runtime/snapshots/SnapshotIdSet;
/*      */     //   179: invokevirtual innerApplyLocked$runtime : (ILjava/util/Map;Landroidx/compose/runtime/snapshots/SnapshotIdSet;)Landroidx/compose/runtime/snapshots/SnapshotApplyResult;
/*      */     //   182: astore #11
/*      */     //   184: aload #11
/*      */     //   186: getstatic androidx/compose/runtime/snapshots/SnapshotApplyResult$Success.INSTANCE : Landroidx/compose/runtime/snapshots/SnapshotApplyResult$Success;
/*      */     //   189: invokestatic areEqual : (Ljava/lang/Object;Ljava/lang/Object;)Z
/*      */     //   192: ifne -> 205
/*      */     //   195: aload #11
/*      */     //   197: astore #14
/*      */     //   199: aload #8
/*      */     //   201: monitorexit
/*      */     //   202: aload #14
/*      */     //   204: areturn
/*      */     //   205: aload_0
/*      */     //   206: invokevirtual closeLocked$runtime : ()V
/*      */     //   209: aload #10
/*      */     //   211: checkcast androidx/compose/runtime/snapshots/Snapshot
/*      */     //   214: invokestatic access$getEmptyLambda$p : ()Lkotlin/jvm/functions/Function1;
/*      */     //   217: invokestatic access$takeNewGlobalSnapshot : (Landroidx/compose/runtime/snapshots/Snapshot;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
/*      */     //   220: pop
/*      */     //   221: aload #10
/*      */     //   223: invokevirtual getModified$runtime : ()Landroidx/collection/MutableScatterSet;
/*      */     //   226: astore #12
/*      */     //   228: aload_0
/*      */     //   229: aconst_null
/*      */     //   230: invokevirtual setModified : (Landroidx/collection/MutableScatterSet;)V
/*      */     //   233: aload #10
/*      */     //   235: aconst_null
/*      */     //   236: invokevirtual setModified : (Landroidx/collection/MutableScatterSet;)V
/*      */     //   239: invokestatic access$getApplyObservers$p : ()Ljava/util/List;
/*      */     //   242: astore_3
/*      */     //   243: aload #12
/*      */     //   245: astore #4
/*      */     //   247: nop
/*      */     //   248: getstatic kotlin/Unit.INSTANCE : Lkotlin/Unit;
/*      */     //   251: astore #13
/*      */     //   253: aload #8
/*      */     //   255: monitorexit
/*      */     //   256: goto -> 267
/*      */     //   259: astore #13
/*      */     //   261: aload #8
/*      */     //   263: monitorexit
/*      */     //   264: aload #13
/*      */     //   266: athrow
/*      */     //   267: nop
/*      */     //   268: nop
/*      */     //   269: aload_0
/*      */     //   270: iconst_1
/*      */     //   271: putfield applied : Z
/*      */     //   274: aload #4
/*      */     //   276: ifnull -> 377
/*      */     //   279: aload #4
/*      */     //   281: checkcast androidx/collection/ScatterSet
/*      */     //   284: invokestatic wrapIntoSet : (Landroidx/collection/ScatterSet;)Ljava/util/Set;
/*      */     //   287: astore #5
/*      */     //   289: aload #5
/*      */     //   291: checkcast java/util/Collection
/*      */     //   294: invokeinterface isEmpty : ()Z
/*      */     //   299: ifne -> 306
/*      */     //   302: iconst_1
/*      */     //   303: goto -> 307
/*      */     //   306: iconst_0
/*      */     //   307: ifeq -> 377
/*      */     //   310: aload_3
/*      */     //   311: astore #6
/*      */     //   313: iconst_0
/*      */     //   314: istore #7
/*      */     //   316: nop
/*      */     //   317: iconst_0
/*      */     //   318: istore #8
/*      */     //   320: aload #6
/*      */     //   322: invokeinterface size : ()I
/*      */     //   327: istore #9
/*      */     //   329: iload #8
/*      */     //   331: iload #9
/*      */     //   333: if_icmpge -> 376
/*      */     //   336: aload #6
/*      */     //   338: iload #8
/*      */     //   340: invokeinterface get : (I)Ljava/lang/Object;
/*      */     //   345: astore #10
/*      */     //   347: aload #10
/*      */     //   349: checkcast kotlin/jvm/functions/Function2
/*      */     //   352: astore #11
/*      */     //   354: iconst_0
/*      */     //   355: istore #12
/*      */     //   357: aload #11
/*      */     //   359: aload #5
/*      */     //   361: aload_0
/*      */     //   362: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
/*      */     //   367: pop
/*      */     //   368: nop
/*      */     //   369: nop
/*      */     //   370: iinc #8, 1
/*      */     //   373: goto -> 329
/*      */     //   376: nop
/*      */     //   377: aload_1
/*      */     //   378: ifnull -> 464
/*      */     //   381: aload_1
/*      */     //   382: invokevirtual isNotEmpty : ()Z
/*      */     //   385: ifeq -> 464
/*      */     //   388: aload_1
/*      */     //   389: checkcast androidx/collection/ScatterSet
/*      */     //   392: invokestatic wrapIntoSet : (Landroidx/collection/ScatterSet;)Ljava/util/Set;
/*      */     //   395: astore #5
/*      */     //   397: aload_3
/*      */     //   398: astore #6
/*      */     //   400: iconst_0
/*      */     //   401: istore #7
/*      */     //   403: nop
/*      */     //   404: iconst_0
/*      */     //   405: istore #8
/*      */     //   407: aload #6
/*      */     //   409: invokeinterface size : ()I
/*      */     //   414: istore #9
/*      */     //   416: iload #8
/*      */     //   418: iload #9
/*      */     //   420: if_icmpge -> 463
/*      */     //   423: aload #6
/*      */     //   425: iload #8
/*      */     //   427: invokeinterface get : (I)Ljava/lang/Object;
/*      */     //   432: astore #10
/*      */     //   434: aload #10
/*      */     //   436: checkcast kotlin/jvm/functions/Function2
/*      */     //   439: astore #11
/*      */     //   441: iconst_0
/*      */     //   442: istore #12
/*      */     //   444: aload #11
/*      */     //   446: aload #5
/*      */     //   448: aload_0
/*      */     //   449: invokeinterface invoke : (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
/*      */     //   454: pop
/*      */     //   455: nop
/*      */     //   456: nop
/*      */     //   457: iinc #8, 1
/*      */     //   460: goto -> 416
/*      */     //   463: nop
/*      */     //   464: iconst_0
/*      */     //   465: istore #5
/*      */     //   467: invokestatic getLock : ()Landroidx/compose/runtime/SynchronizedObject;
/*      */     //   470: astore #6
/*      */     //   472: iconst_0
/*      */     //   473: istore #7
/*      */     //   475: aload #6
/*      */     //   477: astore #8
/*      */     //   479: aload #8
/*      */     //   481: monitorenter
/*      */     //   482: nop
/*      */     //   483: iconst_0
/*      */     //   484: istore #9
/*      */     //   486: aload_0
/*      */     //   487: invokevirtual releasePinnedSnapshotsForCloseLocked$runtime : ()V
/*      */     //   490: invokestatic access$checkAndOverwriteUnusedRecordsLocked : ()V
/*      */     //   493: aload #4
/*      */     //   495: dup
/*      */     //   496: ifnull -> 712
/*      */     //   499: checkcast androidx/collection/ScatterSet
/*      */     //   502: astore #10
/*      */     //   504: iconst_0
/*      */     //   505: istore #11
/*      */     //   507: nop
/*      */     //   508: aload #10
/*      */     //   510: getfield elements : [Ljava/lang/Object;
/*      */     //   513: astore #12
/*      */     //   515: aload #10
/*      */     //   517: astore #13
/*      */     //   519: iconst_0
/*      */     //   520: istore #14
/*      */     //   522: nop
/*      */     //   523: aload #13
/*      */     //   525: getfield metadata : [J
/*      */     //   528: astore #15
/*      */     //   530: aload #15
/*      */     //   532: arraylength
/*      */     //   533: iconst_2
/*      */     //   534: isub
/*      */     //   535: istore #16
/*      */     //   537: iconst_0
/*      */     //   538: istore #17
/*      */     //   540: iload #17
/*      */     //   542: iload #16
/*      */     //   544: if_icmpgt -> 707
/*      */     //   547: aload #15
/*      */     //   549: iload #17
/*      */     //   551: laload
/*      */     //   552: lstore #18
/*      */     //   554: lload #18
/*      */     //   556: lstore #20
/*      */     //   558: iconst_0
/*      */     //   559: istore #22
/*      */     //   561: lload #20
/*      */     //   563: lload #20
/*      */     //   565: ldc2_w -1
/*      */     //   568: lxor
/*      */     //   569: bipush #7
/*      */     //   571: lshl
/*      */     //   572: land
/*      */     //   573: ldc2_w -9187201950435737472
/*      */     //   576: land
/*      */     //   577: ldc2_w -9187201950435737472
/*      */     //   580: lcmp
/*      */     //   581: ifeq -> 694
/*      */     //   584: bipush #8
/*      */     //   586: iload #17
/*      */     //   588: iload #16
/*      */     //   590: isub
/*      */     //   591: iconst_m1
/*      */     //   592: ixor
/*      */     //   593: bipush #31
/*      */     //   595: iushr
/*      */     //   596: isub
/*      */     //   597: istore #23
/*      */     //   599: iconst_0
/*      */     //   600: istore #24
/*      */     //   602: iload #24
/*      */     //   604: iload #23
/*      */     //   606: if_icmpge -> 687
/*      */     //   609: lload #18
/*      */     //   611: ldc2_w 255
/*      */     //   614: land
/*      */     //   615: lstore #25
/*      */     //   617: iconst_0
/*      */     //   618: istore #27
/*      */     //   620: lload #25
/*      */     //   622: ldc2_w 128
/*      */     //   625: lcmp
/*      */     //   626: ifge -> 633
/*      */     //   629: iconst_1
/*      */     //   630: goto -> 634
/*      */     //   633: iconst_0
/*      */     //   634: ifeq -> 674
/*      */     //   637: iload #17
/*      */     //   639: iconst_3
/*      */     //   640: ishl
/*      */     //   641: iload #24
/*      */     //   643: iadd
/*      */     //   644: istore #22
/*      */     //   646: iload #22
/*      */     //   648: istore #28
/*      */     //   650: iconst_0
/*      */     //   651: istore #29
/*      */     //   653: aload #12
/*      */     //   655: iload #28
/*      */     //   657: aaload
/*      */     //   658: checkcast androidx/compose/runtime/snapshots/StateObject
/*      */     //   661: astore #30
/*      */     //   663: iconst_0
/*      */     //   664: istore #31
/*      */     //   666: aload #30
/*      */     //   668: invokestatic access$processForUnusedRecordsLocked : (Landroidx/compose/runtime/snapshots/StateObject;)V
/*      */     //   671: nop
/*      */     //   672: nop
/*      */     //   673: nop
/*      */     //   674: lload #18
/*      */     //   676: bipush #8
/*      */     //   678: lshr
/*      */     //   679: lstore #18
/*      */     //   681: iinc #24, 1
/*      */     //   684: goto -> 602
/*      */     //   687: iload #23
/*      */     //   689: bipush #8
/*      */     //   691: if_icmpne -> 708
/*      */     //   694: iload #17
/*      */     //   696: iload #16
/*      */     //   698: if_icmpeq -> 707
/*      */     //   701: iinc #17, 1
/*      */     //   704: goto -> 547
/*      */     //   707: nop
/*      */     //   708: nop
/*      */     //   709: goto -> 714
/*      */     //   712: pop
/*      */     //   713: nop
/*      */     //   714: aload_1
/*      */     //   715: dup
/*      */     //   716: ifnull -> 932
/*      */     //   719: checkcast androidx/collection/ScatterSet
/*      */     //   722: astore #32
/*      */     //   724: iconst_0
/*      */     //   725: istore #10
/*      */     //   727: nop
/*      */     //   728: aload #32
/*      */     //   730: getfield elements : [Ljava/lang/Object;
/*      */     //   733: astore #11
/*      */     //   735: aload #32
/*      */     //   737: astore #12
/*      */     //   739: iconst_0
/*      */     //   740: istore #13
/*      */     //   742: nop
/*      */     //   743: aload #12
/*      */     //   745: getfield metadata : [J
/*      */     //   748: astore #14
/*      */     //   750: aload #14
/*      */     //   752: arraylength
/*      */     //   753: iconst_2
/*      */     //   754: isub
/*      */     //   755: istore #15
/*      */     //   757: iconst_0
/*      */     //   758: istore #16
/*      */     //   760: iload #16
/*      */     //   762: iload #15
/*      */     //   764: if_icmpgt -> 927
/*      */     //   767: aload #14
/*      */     //   769: iload #16
/*      */     //   771: laload
/*      */     //   772: lstore #33
/*      */     //   774: lload #33
/*      */     //   776: lstore #35
/*      */     //   778: iconst_0
/*      */     //   779: istore #37
/*      */     //   781: lload #35
/*      */     //   783: lload #35
/*      */     //   785: ldc2_w -1
/*      */     //   788: lxor
/*      */     //   789: bipush #7
/*      */     //   791: lshl
/*      */     //   792: land
/*      */     //   793: ldc2_w -9187201950435737472
/*      */     //   796: land
/*      */     //   797: ldc2_w -9187201950435737472
/*      */     //   800: lcmp
/*      */     //   801: ifeq -> 914
/*      */     //   804: bipush #8
/*      */     //   806: iload #16
/*      */     //   808: iload #15
/*      */     //   810: isub
/*      */     //   811: iconst_m1
/*      */     //   812: ixor
/*      */     //   813: bipush #31
/*      */     //   815: iushr
/*      */     //   816: isub
/*      */     //   817: istore #22
/*      */     //   819: iconst_0
/*      */     //   820: istore #23
/*      */     //   822: iload #23
/*      */     //   824: iload #22
/*      */     //   826: if_icmpge -> 907
/*      */     //   829: lload #33
/*      */     //   831: ldc2_w 255
/*      */     //   834: land
/*      */     //   835: lstore #38
/*      */     //   837: iconst_0
/*      */     //   838: istore #40
/*      */     //   840: lload #38
/*      */     //   842: ldc2_w 128
/*      */     //   845: lcmp
/*      */     //   846: ifge -> 853
/*      */     //   849: iconst_1
/*      */     //   850: goto -> 854
/*      */     //   853: iconst_0
/*      */     //   854: ifeq -> 894
/*      */     //   857: iload #16
/*      */     //   859: iconst_3
/*      */     //   860: ishl
/*      */     //   861: iload #23
/*      */     //   863: iadd
/*      */     //   864: istore #37
/*      */     //   866: iload #37
/*      */     //   868: istore #27
/*      */     //   870: iconst_0
/*      */     //   871: istore #28
/*      */     //   873: aload #11
/*      */     //   875: iload #27
/*      */     //   877: aaload
/*      */     //   878: checkcast androidx/compose/runtime/snapshots/StateObject
/*      */     //   881: astore #29
/*      */     //   883: iconst_0
/*      */     //   884: istore #30
/*      */     //   886: aload #29
/*      */     //   888: invokestatic access$processForUnusedRecordsLocked : (Landroidx/compose/runtime/snapshots/StateObject;)V
/*      */     //   891: nop
/*      */     //   892: nop
/*      */     //   893: nop
/*      */     //   894: lload #33
/*      */     //   896: bipush #8
/*      */     //   898: lshr
/*      */     //   899: lstore #33
/*      */     //   901: iinc #23, 1
/*      */     //   904: goto -> 822
/*      */     //   907: iload #22
/*      */     //   909: bipush #8
/*      */     //   911: if_icmpne -> 928
/*      */     //   914: iload #16
/*      */     //   916: iload #15
/*      */     //   918: if_icmpeq -> 927
/*      */     //   921: iinc #16, 1
/*      */     //   924: goto -> 767
/*      */     //   927: nop
/*      */     //   928: nop
/*      */     //   929: goto -> 934
/*      */     //   932: pop
/*      */     //   933: nop
/*      */     //   934: aload_0
/*      */     //   935: getfield merged : Ljava/util/List;
/*      */     //   938: dup
/*      */     //   939: ifnull -> 1004
/*      */     //   942: astore #10
/*      */     //   944: iconst_0
/*      */     //   945: istore #11
/*      */     //   947: nop
/*      */     //   948: iconst_0
/*      */     //   949: istore #12
/*      */     //   951: aload #10
/*      */     //   953: invokeinterface size : ()I
/*      */     //   958: istore #13
/*      */     //   960: iload #12
/*      */     //   962: iload #13
/*      */     //   964: if_icmpge -> 1000
/*      */     //   967: aload #10
/*      */     //   969: iload #12
/*      */     //   971: invokeinterface get : (I)Ljava/lang/Object;
/*      */     //   976: astore #14
/*      */     //   978: aload #14
/*      */     //   980: checkcast androidx/compose/runtime/snapshots/StateObject
/*      */     //   983: astore #15
/*      */     //   985: iconst_0
/*      */     //   986: istore #16
/*      */     //   988: aload #15
/*      */     //   990: invokestatic access$processForUnusedRecordsLocked : (Landroidx/compose/runtime/snapshots/StateObject;)V
/*      */     //   993: nop
/*      */     //   994: iinc #12, 1
/*      */     //   997: goto -> 960
/*      */     //   1000: nop
/*      */     //   1001: goto -> 1006
/*      */     //   1004: pop
/*      */     //   1005: nop
/*      */     //   1006: aload_0
/*      */     //   1007: aconst_null
/*      */     //   1008: putfield merged : Ljava/util/List;
/*      */     //   1011: nop
/*      */     //   1012: getstatic kotlin/Unit.INSTANCE : Lkotlin/Unit;
/*      */     //   1015: astore #41
/*      */     //   1017: aload #8
/*      */     //   1019: monitorexit
/*      */     //   1020: goto -> 1031
/*      */     //   1023: astore #41
/*      */     //   1025: aload #8
/*      */     //   1027: monitorexit
/*      */     //   1028: aload #41
/*      */     //   1030: athrow
/*      */     //   1031: nop
/*      */     //   1032: nop
/*      */     //   1033: getstatic androidx/compose/runtime/snapshots/SnapshotApplyResult$Success.INSTANCE : Landroidx/compose/runtime/snapshots/SnapshotApplyResult$Success;
/*      */     //   1036: checkcast androidx/compose/runtime/snapshots/SnapshotApplyResult
/*      */     //   1039: areturn
/*      */     // Line number table:
/*      */     //   Java source line number -> byte code offset
/*      */     //   #829	-> 0
/*      */     //   #830	-> 5
/*      */     //   #831	-> 9
/*      */     //   #832	-> 18
/*      */     //   #833	-> 19
/*      */     //   #830	-> 37
/*      */     //   #834	-> 43
/*      */     //   #830	-> 44
/*      */     //   #836	-> 45
/*      */     //   #837	-> 51
/*      */     //   #838	-> 54
/*      */     //   #2448	-> 57
/*      */     //   #2449	-> 65
/*      */     //   #839	-> 76
/*      */     //   #840	-> 83
/*      */     //   #841	-> 94
/*      */     //   #842	-> 98
/*      */     //   #843	-> 109
/*      */     //   #844	-> 121
/*      */     //   #845	-> 128
/*      */     //   #846	-> 141
/*      */     //   #847	-> 145
/*      */     //   #850	-> 152
/*      */     //   #851	-> 163
/*      */     //   #852	-> 164
/*      */     //   #853	-> 167
/*      */     //   #854	-> 168
/*      */     //   #851	-> 179
/*      */     //   #856	-> 184
/*      */     //   #858	-> 205
/*      */     //   #861	-> 209
/*      */     //   #862	-> 221
/*      */     //   #863	-> 228
/*      */     //   #864	-> 233
/*      */     //   #866	-> 239
/*      */     //   #867	-> 243
/*      */     //   #869	-> 247
/*      */     //   #2449	-> 251
/*      */     //   #2449	-> 267
/*      */     //   #2448	-> 268
/*      */     //   #872	-> 269
/*      */     //   #875	-> 274
/*      */     //   #876	-> 279
/*      */     //   #877	-> 289
/*      */     //   #877	-> 307
/*      */     //   #878	-> 310
/*      */     //   #2450	-> 316
/*      */     //   #2451	-> 317
/*      */     //   #2452	-> 336
/*      */     //   #2453	-> 347
/*      */     //   #879	-> 357
/*      */     //   #880	-> 368
/*      */     //   #2453	-> 369
/*      */     //   #2451	-> 370
/*      */     //   #2455	-> 376
/*      */     //   #884	-> 377
/*      */     //   #885	-> 388
/*      */     //   #886	-> 397
/*      */     //   #2456	-> 403
/*      */     //   #2457	-> 404
/*      */     //   #2458	-> 423
/*      */     //   #2459	-> 434
/*      */     //   #887	-> 444
/*      */     //   #888	-> 455
/*      */     //   #2459	-> 456
/*      */     //   #2457	-> 457
/*      */     //   #2461	-> 463
/*      */     //   #894	-> 464
/*      */     //   #2462	-> 467
/*      */     //   #2463	-> 475
/*      */     //   #895	-> 486
/*      */     //   #896	-> 490
/*      */     //   #897	-> 493
/*      */     //   #2464	-> 507
/*      */     //   #2465	-> 508
/*      */     //   #2467	-> 515
/*      */     //   #2468	-> 522
/*      */     //   #2469	-> 523
/*      */     //   #2470	-> 530
/*      */     //   #2472	-> 537
/*      */     //   #2473	-> 547
/*      */     //   #2474	-> 554
/*      */     //   #2475	-> 561
/*      */     //   #2474	-> 577
/*      */     //   #2476	-> 584
/*      */     //   #2477	-> 599
/*      */     //   #2478	-> 609
/*      */     //   #2479	-> 620
/*      */     //   #2478	-> 634
/*      */     //   #2480	-> 637
/*      */     //   #2481	-> 646
/*      */     //   #2482	-> 653
/*      */     //   #897	-> 666
/*      */     //   #2482	-> 671
/*      */     //   #2483	-> 672
/*      */     //   #2481	-> 673
/*      */     //   #2484	-> 674
/*      */     //   #2477	-> 681
/*      */     //   #2486	-> 687
/*      */     //   #2472	-> 694
/*      */     //   #2489	-> 707
/*      */     //   #2490	-> 708
/*      */     //   #897	-> 712
/*      */     //   #898	-> 714
/*      */     //   #2491	-> 727
/*      */     //   #2492	-> 728
/*      */     //   #2494	-> 735
/*      */     //   #2495	-> 742
/*      */     //   #2496	-> 743
/*      */     //   #2497	-> 750
/*      */     //   #2499	-> 757
/*      */     //   #2500	-> 767
/*      */     //   #2501	-> 774
/*      */     //   #2502	-> 781
/*      */     //   #2501	-> 797
/*      */     //   #2503	-> 804
/*      */     //   #2504	-> 819
/*      */     //   #2505	-> 829
/*      */     //   #2506	-> 840
/*      */     //   #2505	-> 854
/*      */     //   #2507	-> 857
/*      */     //   #2508	-> 866
/*      */     //   #2509	-> 873
/*      */     //   #898	-> 886
/*      */     //   #2509	-> 891
/*      */     //   #2510	-> 892
/*      */     //   #2508	-> 893
/*      */     //   #2511	-> 894
/*      */     //   #2504	-> 901
/*      */     //   #2513	-> 907
/*      */     //   #2499	-> 914
/*      */     //   #2516	-> 927
/*      */     //   #2517	-> 928
/*      */     //   #898	-> 932
/*      */     //   #899	-> 934
/*      */     //   #2518	-> 947
/*      */     //   #2519	-> 948
/*      */     //   #2520	-> 967
/*      */     //   #2521	-> 978
/*      */     //   #899	-> 988
/*      */     //   #2521	-> 993
/*      */     //   #2519	-> 994
/*      */     //   #2523	-> 1000
/*      */     //   #899	-> 1004
/*      */     //   #900	-> 1006
/*      */     //   #901	-> 1011
/*      */     //   #2463	-> 1015
/*      */     //   #2463	-> 1031
/*      */     //   #2462	-> 1032
/*      */     //   #903	-> 1033
/*      */     // Local variable table:
/*      */     //   start	length	slot	name	descriptor
/*      */     //   109	40	10	previousGlobalSnapshot	Landroidx/compose/runtime/snapshots/GlobalSnapshot;
/*      */     //   128	21	11	previousModified	Landroidx/collection/MutableScatterSet;
/*      */     //   163	34	10	previousGlobalSnapshot	Landroidx/compose/runtime/snapshots/GlobalSnapshot;
/*      */     //   184	13	11	result	Landroidx/compose/runtime/snapshots/SnapshotApplyResult;
/*      */     //   228	19	12	previousModified	Landroidx/collection/MutableScatterSet;
/*      */     //   76	121	9	$i$a$-sync-MutableSnapshot$apply$1	I
/*      */     //   65	132	7	$i$f$synchronized	I
/*      */     //   62	135	6	lock$iv$iv	Landroidx/compose/runtime/SynchronizedObject;
/*      */     //   57	140	5	$i$f$sync	I
/*      */     //   205	64	5	$i$f$sync	I
/*      */     //   205	63	7	$i$f$synchronized	I
/*      */     //   205	63	6	lock$iv$iv	Landroidx/compose/runtime/SynchronizedObject;
/*      */     //   205	43	9	$i$a$-sync-MutableSnapshot$apply$1	I
/*      */     //   205	42	10	previousGlobalSnapshot	Landroidx/compose/runtime/snapshots/GlobalSnapshot;
/*      */     //   205	42	11	result	Landroidx/compose/runtime/snapshots/SnapshotApplyResult;
/*      */     //   357	12	12	$i$a$-fastForEach-MutableSnapshot$apply$2	I
/*      */     //   354	15	11	it	Lkotlin/jvm/functions/Function2;
/*      */     //   347	23	10	item$iv	Ljava/lang/Object;
/*      */     //   320	56	8	index$iv	I
/*      */     //   316	61	7	$i$f$fastForEach	I
/*      */     //   313	64	6	$this$fastForEach$iv	Ljava/util/List;
/*      */     //   289	88	5	nonNullGlobalModified	Ljava/util/Set;
/*      */     //   444	12	12	$i$a$-fastForEach-MutableSnapshot$apply$3	I
/*      */     //   441	15	11	it	Lkotlin/jvm/functions/Function2;
/*      */     //   434	23	10	item$iv	Ljava/lang/Object;
/*      */     //   407	56	8	index$iv	I
/*      */     //   403	61	7	$i$f$fastForEach	I
/*      */     //   400	64	6	$this$fastForEach$iv	Ljava/util/List;
/*      */     //   397	67	5	modifiedSet	Ljava/util/Set;
/*      */     //   666	5	31	$i$a$-forEach-MutableSnapshot$apply$4$1	I
/*      */     //   663	8	30	it	Landroidx/compose/runtime/snapshots/StateObject;
/*      */     //   653	20	29	$i$a$-forEachIndex-ScatterSet$forEach$2$iv	I
/*      */     //   650	23	28	index$iv	I
/*      */     //   561	16	22	$i$f$maskEmptyOrDeleted	I
/*      */     //   558	19	20	$this$maskEmptyOrDeleted$iv$iv$iv	J
/*      */     //   620	14	27	$i$f$isFull	I
/*      */     //   617	17	25	value$iv$iv$iv	J
/*      */     //   646	28	22	index$iv$iv	I
/*      */     //   602	85	24	j$iv$iv	I
/*      */     //   599	95	23	bitCount$iv$iv	I
/*      */     //   554	140	18	slot$iv$iv	J
/*      */     //   540	167	17	i$iv$iv	I
/*      */     //   522	186	14	$i$f$forEachIndex	I
/*      */     //   530	178	15	m$iv$iv	[J
/*      */     //   537	171	16	lastIndex$iv$iv	I
/*      */     //   519	189	13	this_$iv$iv	Landroidx/collection/ScatterSet;
/*      */     //   507	202	11	$i$f$forEach	I
/*      */     //   515	194	12	k$iv	[Ljava/lang/Object;
/*      */     //   504	205	10	this_$iv	Landroidx/collection/ScatterSet;
/*      */     //   886	5	30	$i$a$-forEach-MutableSnapshot$apply$4$2	I
/*      */     //   883	8	29	it	Landroidx/compose/runtime/snapshots/StateObject;
/*      */     //   873	20	28	$i$a$-forEachIndex-ScatterSet$forEach$2$iv	I
/*      */     //   870	23	27	index$iv	I
/*      */     //   781	16	37	$i$f$maskEmptyOrDeleted	I
/*      */     //   778	19	35	$this$maskEmptyOrDeleted$iv$iv$iv	J
/*      */     //   840	14	40	$i$f$isFull	I
/*      */     //   837	17	38	value$iv$iv$iv	J
/*      */     //   866	28	37	index$iv$iv	I
/*      */     //   822	85	23	j$iv$iv	I
/*      */     //   819	95	22	bitCount$iv$iv	I
/*      */     //   774	140	33	slot$iv$iv	J
/*      */     //   760	167	16	i$iv$iv	I
/*      */     //   742	186	13	$i$f$forEachIndex	I
/*      */     //   750	178	14	m$iv$iv	[J
/*      */     //   757	171	15	lastIndex$iv$iv	I
/*      */     //   739	189	12	this_$iv$iv	Landroidx/collection/ScatterSet;
/*      */     //   727	202	10	$i$f$forEach	I
/*      */     //   735	194	11	k$iv	[Ljava/lang/Object;
/*      */     //   724	205	32	this_$iv	Landroidx/collection/ScatterSet;
/*      */     //   988	5	16	$i$a$-fastForEach-MutableSnapshot$apply$4$3	I
/*      */     //   985	8	15	it	Landroidx/compose/runtime/snapshots/StateObject;
/*      */     //   978	16	14	item$iv	Ljava/lang/Object;
/*      */     //   951	49	12	index$iv	I
/*      */     //   947	54	11	$i$f$fastForEach	I
/*      */     //   944	57	10	$this$fastForEach$iv	Ljava/util/List;
/*      */     //   486	526	9	$i$a$-sync-MutableSnapshot$apply$4	I
/*      */     //   475	557	7	$i$f$synchronized	I
/*      */     //   472	560	6	lock$iv$iv	Landroidx/compose/runtime/SynchronizedObject;
/*      */     //   467	566	5	$i$f$sync	I
/*      */     //   5	1035	1	modified	Landroidx/collection/MutableScatterSet;
/*      */     //   45	995	2	optimisticMerges	Ljava/util/Map;
/*      */     //   47	993	3	observers	Ljava/lang/Object;
/*      */     //   54	986	4	globalModified	Ljava/lang/Object;
/*      */     //   0	1040	0	this	Landroidx/compose/runtime/snapshots/MutableSnapshot;
/*      */     // Exception table:
/*      */     //   from	to	target	type
/*      */     //   72	199	259	finally
/*      */     //   205	253	259	finally
/*      */     //   259	261	259	finally
/*      */     //   482	1017	1023	finally
/*      */     //   1023	1025	1023	finally
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public boolean getReadOnly() {
/*      */     return false;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   @NotNull
/*      */   public Snapshot getRoot() {
/*      */     return this;
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   public void dispose() {
/*      */     if (!getDisposed$runtime()) {
/*      */       super.dispose();
/*      */       nestedDeactivated$runtime(this);
/*      */     } 
/*      */   }
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */   
/*      */   @NotNull
/*      */   public Snapshot takeNestedSnapshot(@Nullable Function1 readObserver) {
/*      */     validateNotDisposed$runtime();
/*      */     validateNotAppliedOrPinned();
/*      */     int previousId = getId();
/*      */     MutableSnapshot this_$iv = this;
/*      */     int $i$f$advance$runtime = 0;
/* 2524 */     this_$iv.recordPrevious$runtime(this_$iv.getId());
/* 2525 */     int $i$a$-advance$runtime-MutableSnapshot$takeNestedSnapshot$1 = 0; int $i$f$sync = 0;
/* 2526 */     SynchronizedObject lock$iv$iv = SnapshotKt.getLock(); int $i$f$synchronized = 0;
/* 2527 */     synchronized (lock$iv$iv) { int $i$a$-sync-MutableSnapshot$takeNestedSnapshot$1$1 = 0; int i = SnapshotKt.access$getNextSnapshotId$p(); SnapshotKt.access$setNextSnapshotId$p(i + 1); int readonlyId = i; SnapshotKt.access$setOpenSnapshots$p(SnapshotKt.access$getOpenSnapshots$p().set(readonlyId)); NestedReadonlySnapshot nestedReadonlySnapshot1 = new NestedReadonlySnapshot(readonlyId, SnapshotKt.addRange(getInvalid$runtime(), previousId + 1, readonlyId), SnapshotKt.mergedReadObserver$default(readObserver, getReadObserver$runtime(), false, 4, null), this); }  NestedReadonlySnapshot nestedReadonlySnapshot = nestedReadonlySnapshot1; Object it$iv = nestedReadonlySnapshot; int $i$a$-also-MutableSnapshot$advance$1$iv = 0;
/* 2528 */     if (!this_$iv.getApplied$runtime() && !this_$iv.getDisposed$runtime()) {
/* 2529 */       int previousId$iv = this_$iv.getId();
/* 2530 */       int i = 0;
/* 2531 */       SynchronizedObject lock$iv$iv$iv = SnapshotKt.getLock(); int j = 0;
/* 2532 */       synchronized (lock$iv$iv$iv) { int $i$a$-sync-MutableSnapshot$advance$1$1$iv = 0;
/* 2533 */         int k = SnapshotKt.access$getNextSnapshotId$p(); SnapshotKt.access$setNextSnapshotId$p(k + 1); this_$iv.setId$runtime(k);
/* 2534 */         SnapshotKt.access$setOpenSnapshots$p(SnapshotKt.access$getOpenSnapshots$p().set(this_$iv.getId()));
/* 2535 */         Unit unit = Unit.INSTANCE; }
/* 2536 */        this_$iv.setInvalid$runtime(SnapshotKt.addRange(this_$iv.getInvalid$runtime(), previousId$iv + 1, this_$iv.getId()));
/*      */     } 
/*      */     return nestedReadonlySnapshot;
/*      */   }
/*      */   public void nestedActivated$runtime(@NotNull Snapshot snapshot) { Intrinsics.checkNotNullParameter(snapshot, "snapshot");
/*      */     int i = this.snapshots;
/*      */     this.snapshots = i + 1; }
/*      */   public void nestedDeactivated$runtime(@NotNull Snapshot snapshot) { // Byte code:
/*      */     //   0: aload_1
/*      */     //   1: ldc_w 'snapshot'
/*      */     //   4: invokestatic checkNotNullParameter : (Ljava/lang/Object;Ljava/lang/String;)V
/*      */     //   7: aload_0
/*      */     //   8: getfield snapshots : I
/*      */     //   11: ifle -> 18
/*      */     //   14: iconst_1
/*      */     //   15: goto -> 19
/*      */     //   18: iconst_0
/*      */     //   19: istore_2
/*      */     //   20: iconst_0
/*      */     //   21: istore_3
/*      */     //   22: nop
/*      */     //   23: iload_2
/*      */     //   24: ifne -> 36
/*      */     //   27: iconst_0
/*      */     //   28: istore #4
/*      */     //   30: ldc_w 'no pending nested snapshots'
/*      */     //   33: invokestatic throwIllegalArgumentException : (Ljava/lang/String;)V
/*      */     //   36: nop
/*      */     //   37: aload_0
/*      */     //   38: aload_0
/*      */     //   39: getfield snapshots : I
/*      */     //   42: iconst_m1
/*      */     //   43: iadd
/*      */     //   44: putfield snapshots : I
/*      */     //   47: aload_0
/*      */     //   48: getfield snapshots : I
/*      */     //   51: ifne -> 65
/*      */     //   54: aload_0
/*      */     //   55: getfield applied : Z
/*      */     //   58: ifne -> 65
/*      */     //   61: aload_0
/*      */     //   62: invokespecial abandon : ()V
/*      */     //   65: return
/*      */     // Line number table:
/*      */     //   Java source line number -> byte code offset
/*      */     //   #938	-> 7
/*      */     //   #2539	-> 22
/*      */     //   #2542	-> 23
/*      */     //   #2543	-> 27
/*      */     //   #938	-> 30
/*      */     //   #2543	-> 33
/*      */     //   #2545	-> 36
/*      */     //   #939	-> 37
/*      */     //   #940	-> 54
/*      */     //   #941	-> 61
/*      */     //   #944	-> 65
/*      */     // Local variable table:
/*      */     //   start	length	slot	name	descriptor
/*      */     //   30	3	4	$i$a$-requirePrecondition-MutableSnapshot$nestedDeactivated$1	I
/*      */     //   22	15	3	$i$f$requirePrecondition	I
/*      */     //   20	17	2	value$iv	Z
/*      */     //   0	66	0	this	Landroidx/compose/runtime/snapshots/MutableSnapshot;
/*      */     //   0	66	1	snapshot	Landroidx/compose/runtime/snapshots/Snapshot; }
/*      */   public void notifyObjectsInitialized$runtime() { if (this.applied || getDisposed$runtime())
/*      */       return; 
/*      */     advance$runtime(); } public void closeLocked$runtime() {
/*      */     SnapshotKt.access$setOpenSnapshots$p(SnapshotKt.access$getOpenSnapshots$p().clear(getId()).andNot(this.previousIds));
/*      */   } public void releasePinnedSnapshotsForCloseLocked$runtime() {
/*      */     releasePreviouslyPinnedSnapshotsLocked();
/*      */     super.releasePinnedSnapshotsForCloseLocked$runtime();
/*      */   } private final void validateNotApplied() {
/*      */     // Byte code:
/*      */     //   0: aload_0
/*      */     //   1: getfield applied : Z
/*      */     //   4: ifne -> 11
/*      */     //   7: iconst_1
/*      */     //   8: goto -> 12
/*      */     //   11: iconst_0
/*      */     //   12: istore_1
/*      */     //   13: iconst_0
/*      */     //   14: istore_2
/*      */     //   15: nop
/*      */     //   16: iload_1
/*      */     //   17: ifne -> 28
/*      */     //   20: iconst_0
/*      */     //   21: istore_3
/*      */     //   22: ldc_w 'Unsupported operation on a snapshot that has been applied'
/*      */     //   25: invokestatic throwIllegalStateException : (Ljava/lang/String;)V
/*      */     //   28: nop
/*      */     //   29: return
/*      */     // Line number table:
/*      */     //   Java source line number -> byte code offset
/*      */     //   #962	-> 0
/*      */     //   #2546	-> 15
/*      */     //   #2549	-> 16
/*      */     //   #2550	-> 20
/*      */     //   #963	-> 22
/*      */     //   #2550	-> 25
/*      */     //   #2552	-> 28
/*      */     //   #965	-> 29
/*      */     // Local variable table:
/*      */     //   start	length	slot	name	descriptor
/*      */     //   22	3	3	$i$a$-checkPrecondition-MutableSnapshot$validateNotApplied$1	I
/*      */     //   15	14	2	$i$f$checkPrecondition	I
/*      */     //   13	16	1	value$iv	Z
/*      */     //   0	30	0	this	Landroidx/compose/runtime/snapshots/MutableSnapshot;
/*      */   } private final void validateNotAppliedOrPinned() {
/*      */     // Byte code:
/*      */     //   0: aload_0
/*      */     //   1: getfield applied : Z
/*      */     //   4: ifeq -> 29
/*      */     //   7: aload_0
/*      */     //   8: checkcast androidx/compose/runtime/snapshots/Snapshot
/*      */     //   11: astore_1
/*      */     //   12: iconst_0
/*      */     //   13: istore_2
/*      */     //   14: aload_1
/*      */     //   15: invokestatic access$getPinningTrackingHandle$p : (Landroidx/compose/runtime/snapshots/Snapshot;)I
/*      */     //   18: iflt -> 25
/*      */     //   21: iconst_1
/*      */     //   22: goto -> 26
/*      */     //   25: iconst_0
/*      */     //   26: ifeq -> 33
/*      */     //   29: iconst_1
/*      */     //   30: goto -> 34
/*      */     //   33: iconst_0
/*      */     //   34: istore_1
/*      */     //   35: nop
/*      */     //   36: iconst_0
/*      */     //   37: istore_2
/*      */     //   38: nop
/*      */     //   39: iload_1
/*      */     //   40: ifne -> 51
/*      */     //   43: iconst_0
/*      */     //   44: istore_3
/*      */     //   45: ldc_w 'Unsupported operation on a disposed or applied snapshot'
/*      */     //   48: invokestatic throwIllegalStateException : (Ljava/lang/String;)V
/*      */     //   51: nop
/*      */     //   52: return
/*      */     // Line number table:
/*      */     //   Java source line number -> byte code offset
/*      */     //   #968	-> 0
/*      */     //   #2553	-> 14
/*      */     //   #968	-> 35
/*      */     //   #2554	-> 38
/*      */     //   #2557	-> 39
/*      */     //   #2558	-> 43
/*      */     //   #969	-> 45
/*      */     //   #2558	-> 48
/*      */     //   #2560	-> 51
/*      */     //   #971	-> 52
/*      */     // Local variable table:
/*      */     //   start	length	slot	name	descriptor
/*      */     //   14	12	2	$i$f$isPinned$runtime	I
/*      */     //   12	14	1	this_$iv	Landroidx/compose/runtime/snapshots/Snapshot;
/*      */     //   45	3	3	$i$a$-checkPrecondition-MutableSnapshot$validateNotAppliedOrPinned$1	I
/*      */     //   38	14	2	$i$f$checkPrecondition	I
/*      */     //   36	16	1	value$iv	Z
/*      */     //   0	53	0	this	Landroidx/compose/runtime/snapshots/MutableSnapshot;
/*      */   } private final void abandon() { MutableScatterSet<StateObject> modified = getModified$runtime();
/*      */     if (modified != null) {
/*      */       validateNotApplied();
/*      */       setModified((MutableScatterSet<StateObject>)null);
/*      */       int id = getId();
/*      */       ScatterSet this_$iv = (ScatterSet)modified;
/*      */       int $i$f$forEach = 0;
/* 2562 */       Object[] k$iv = this_$iv.elements;
/*      */       
/* 2564 */       ScatterSet this_$iv$iv = this_$iv; int $i$f$forEachIndex = 0;
/*      */       
/* 2566 */       long[] m$iv$iv = this_$iv$iv.metadata;
/* 2567 */       int lastIndex$iv$iv = m$iv$iv.length - 2;
/*      */       
/* 2569 */       int i$iv$iv = 0; if (i$iv$iv <= lastIndex$iv$iv) { while (true) {
/* 2570 */           long slot$iv$iv = m$iv$iv[i$iv$iv];
/* 2571 */           long $this$maskEmptyOrDeleted$iv$iv$iv = slot$iv$iv; int $i$f$maskEmptyOrDeleted = 0;
/* 2572 */           if (($this$maskEmptyOrDeleted$iv$iv$iv & ($this$maskEmptyOrDeleted$iv$iv$iv ^ 0xFFFFFFFFFFFFFFFFL) << 7L & 0x8080808080808080L) != -9187201950435737472L)
/* 2573 */           { int bitCount$iv$iv = 8 - ((i$iv$iv - lastIndex$iv$iv ^ 0xFFFFFFFF) >>> 31);
/* 2574 */             for (int j$iv$iv = 0;; j$iv$iv++);
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */             
/* 2583 */             if (bitCount$iv$iv == 8)
/*      */               continue;  break; }  continue; if (i$iv$iv != lastIndex$iv$iv) { i$iv$iv++; continue; }
/*      */            // Byte code: goto -> 285
/*      */         }  }
/*      */       else {  }
/*      */     
/* 2589 */     }  closeAndReleasePinning$runtime(); } @NotNull public final SnapshotApplyResult innerApplyLocked$runtime(int snapshotId, @Nullable Map optimisticMerges, @NotNull SnapshotIdSet invalidSnapshots) { Object object1; int index$iv; Intrinsics.checkNotNullParameter(invalidSnapshots, "invalidSnapshots"); Object mergedRecords = null; SnapshotIdSet start = getInvalid$runtime().set(getId()).or(this.previousIds); Intrinsics.checkNotNull(getModified$runtime()); MutableScatterSet<StateObject> modified = getModified$runtime(); Object statesToRemove = null; ScatterSet this_$iv = (ScatterSet)modified; int $i$f$forEach = 0; Object[] k$iv = this_$iv.elements;
/*      */     
/* 2591 */     ScatterSet this_$iv$iv = this_$iv; int $i$f$forEachIndex = 0;
/*      */     
/* 2593 */     long[] m$iv$iv = this_$iv$iv.metadata;
/* 2594 */     int lastIndex$iv$iv = m$iv$iv.length - 2;
/*      */     
/* 2596 */     int i$iv$iv = 0; if (i$iv$iv <= lastIndex$iv$iv) { while (true) {
/* 2597 */         long slot$iv$iv = m$iv$iv[i$iv$iv];
/* 2598 */         long $this$maskEmptyOrDeleted$iv$iv$iv = slot$iv$iv; int $i$f$maskEmptyOrDeleted = 0;
/* 2599 */         if (($this$maskEmptyOrDeleted$iv$iv$iv & ($this$maskEmptyOrDeleted$iv$iv$iv ^ 0xFFFFFFFFFFFFFFFFL) << 7L & 0x8080808080808080L) != -9187201950435737472L) {
/* 2600 */           int bitCount$iv$iv = 8 - ((i$iv$iv - lastIndex$iv$iv ^ 0xFFFFFFFF) >>> 31);
/* 2601 */           for (int j$iv$iv = 0;; j$iv$iv++);
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */ 
/*      */           
/* 2610 */           if (bitCount$iv$iv == 8)
/*      */             continue;  break;
/*      */         }  continue; if (i$iv$iv != lastIndex$iv$iv) { i$iv$iv++; continue; }
/*      */          // Byte code: goto -> 601
/*      */       }  }
/*      */     else {  }
/* 2616 */      if (mergedRecords != null) { Object object = mergedRecords; int $i$a$-let-MutableSnapshot$innerApplyLocked$2 = 0; advance$runtime(); object1 = object; int $i$f$fastForEach = 0; index$iv = 0; i$iv$iv = object1.size(); }
/*      */     else if (statesToRemove != null)
/*      */     { Object object = statesToRemove;
/*      */       
/*      */       int $i$a$-let-MutableSnapshot$innerApplyLocked$3 = 0;
/*      */       object1 = object;
/*      */       int $i$f$fastForEach = 0;
/* 2623 */       index$iv = 0; i$iv$iv = object1.size(); }
/*      */     else { return SnapshotApplyResult.Success.INSTANCE; }
/*      */      if (index$iv < i$iv$iv) {
/*      */       Object item$iv = object1.get(index$iv); Pair merged = (Pair)item$iv; int $i$a$-fastForEach-MutableSnapshot$innerApplyLocked$2$1 = 0; StateObject state = (StateObject)merged.component1(); StateRecord stateRecord = (StateRecord)merged.component2(); stateRecord.setSnapshotId$runtime(getId()); int $i$f$sync = 0; SynchronizedObject lock$iv$iv = SnapshotKt.getLock(); int $i$f$synchronized = 0; SynchronizedObject synchronizedObject1 = lock$iv$iv; /* monitor enter ClassFileLocalVariableReferenceExpression{type=ObjectType{androidx/compose/runtime/SynchronizedObject}, name=null} */
/*      */     }  } public final <T> T advance$runtime(@NotNull Function0 block) { Intrinsics.checkNotNullParameter(block, "block"); int $i$f$advance$runtime = 0; recordPrevious$runtime(getId()); Object object1 = block.invoke(), it = object1; int $i$a$-also-MutableSnapshot$advance$1 = 0; if (!getApplied$runtime() && !getDisposed$runtime()) {
/* 2628 */       int previousId = getId(); int $i$f$sync = 0; SynchronizedObject lock$iv$iv = SnapshotKt.getLock(); int $i$f$synchronized = 0;
/* 2629 */       SynchronizedObject synchronizedObject1 = lock$iv$iv; /* monitor enter ClassFileLocalVariableReferenceExpression{type=ObjectType{androidx/compose/runtime/SynchronizedObject}, name=null} */ try { int $i$a$-sync-MutableSnapshot$advance$1$1 = 0; int i = SnapshotKt.access$getNextSnapshotId$p(); SnapshotKt.access$setNextSnapshotId$p(i + 1); setId$runtime(i); SnapshotKt.access$setOpenSnapshots$p(SnapshotKt.access$getOpenSnapshots$p().set(getId())); Unit unit = Unit.INSTANCE; } finally { InlineMarker.finallyStart(1); /* monitor exit ClassFileLocalVariableReferenceExpression{type=ObjectType{androidx/compose/runtime/SynchronizedObject}, name=null} */ InlineMarker.finallyEnd(1); }  setInvalid$runtime(SnapshotKt.addRange(getInvalid$runtime(), previousId + 1, getId()));
/* 2630 */     }  return (T)object1; } public final void advance$runtime() { MutableSnapshot this_$iv = this; int $i$f$advance$runtime = 0; this_$iv.recordPrevious$runtime(this_$iv.getId());
/* 2631 */     int $i$a$-advance$runtime-MutableSnapshot$advance$2 = 0; Unit unit = Unit.INSTANCE; Object it$iv = unit; int $i$a$-also-MutableSnapshot$advance$1$iv = 0;
/*      */ 
/*      */ 
/*      */ 
/*      */     
/* 2636 */     if (!this_$iv.getApplied$runtime() && !this_$iv.getDisposed$runtime()) {
/* 2637 */       int previousId$iv = this_$iv.getId();
/* 2638 */       int $i$f$sync = 0;
/* 2639 */       SynchronizedObject lock$iv$iv$iv = SnapshotKt.getLock(); int $i$f$synchronized = 0;
/* 2640 */       synchronized (lock$iv$iv$iv) { int $i$a$-sync-MutableSnapshot$advance$1$1$iv = 0;
/* 2641 */         $i$a$-advance$runtime-MutableSnapshot$advance$2 = SnapshotKt.access$getNextSnapshotId$p(); SnapshotKt.access$setNextSnapshotId$p($i$a$-advance$runtime-MutableSnapshot$advance$2 + 1); this_$iv.setId$runtime($i$a$-advance$runtime-MutableSnapshot$advance$2);
/* 2642 */         SnapshotKt.access$setOpenSnapshots$p(SnapshotKt.access$getOpenSnapshots$p().set(this_$iv.getId()));
/* 2643 */         Unit unit1 = Unit.INSTANCE; }
/* 2644 */        this_$iv.setInvalid$runtime(SnapshotKt.addRange(this_$iv.getInvalid$runtime(), previousId$iv + 1, this_$iv.getId()));
/*      */     }  }
/*      */   public final void recordPrevious$runtime(int id) { int $i$f$sync = 0;
/* 2647 */     SynchronizedObject lock$iv$iv = SnapshotKt.getLock(); int $i$f$synchronized = 0;
/* 2648 */     synchronized (lock$iv$iv) { int $i$a$-sync-MutableSnapshot$recordPrevious$1 = 0; this.previousIds = this.previousIds.set(id); Unit unit = Unit.INSTANCE; }  }
/* 2649 */   public final void recordPreviousPinnedSnapshot$runtime(int id) { if (id >= 0) this.previousPinnedSnapshots = ArraysKt.plus(this.previousPinnedSnapshots, id);  } public final void recordPreviousPinnedSnapshots$runtime(@NotNull int[] handles) { Intrinsics.checkNotNullParameter(handles, "handles"); if ((handles.length == 0)) return;  int[] pinned = this.previousPinnedSnapshots; this.previousPinnedSnapshots = ((pinned.length == 0)) ? handles : ArraysKt.plus(pinned, handles); } private final void releasePreviouslyPinnedSnapshotsLocked() { for (int index = 0, i = this.previousPinnedSnapshots.length; index < i; index++) SnapshotKt.releasePinningLocked(this.previousPinnedSnapshots[index]);  } public final void recordPreviousList$runtime(@NotNull SnapshotIdSet snapshots) { Intrinsics.checkNotNullParameter(snapshots, "snapshots"); int $i$f$sync = 0; SynchronizedObject lock$iv$iv = SnapshotKt.getLock(); int $i$f$synchronized = 0;
/* 2650 */     synchronized (lock$iv$iv) { int $i$a$-sync-MutableSnapshot$recordPreviousList$1 = 0; this.previousIds = this.previousIds.or(snapshots); Unit unit = Unit.INSTANCE; }
/* 2651 */      } public void recordModified$runtime(@NotNull StateObject state) { Intrinsics.checkNotNullParameter(state, "state"); if (getModified$runtime() == null) { getModified$runtime(); MutableScatterSet<StateObject> mutableScatterSet1 = ScatterSetKt.mutableScatterSetOf(), it = mutableScatterSet1; int $i$a$-also-MutableSnapshot$recordModified$1 = 0;
/*      */       setModified(it); }
/*      */     
/*      */     mutableScatterSet1.add(state); }
/*      */ 
/*      */   
/*      */   public int getWriteCount$runtime() {
/*      */     return this.writeCount;
/*      */   }
/*      */   
/*      */   public void setWriteCount$runtime(int <set-?>) {
/*      */     this.writeCount = <set-?>;
/*      */   }
/*      */   
/*      */   @Nullable
/*      */   public MutableScatterSet<StateObject> getModified$runtime() {
/*      */     return this.modified;
/*      */   }
/*      */   
/*      */   public void setModified(@Nullable MutableScatterSet<StateObject> <set-?>) {
/*      */     this.modified = <set-?>;
/*      */   }
/*      */   
/*      */   @Nullable
/*      */   public final List<StateObject> getMerged$runtime() {
/*      */     return (List)this.merged;
/*      */   }
/*      */   
/*      */   public final void setMerged$runtime(@Nullable List<? extends StateObject> <set-?>) {
/*      */     this.merged = <set-?>;
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   public final SnapshotIdSet getPreviousIds$runtime() {
/*      */     return this.previousIds;
/*      */   }
/*      */   
/*      */   public final void setPreviousIds$runtime(@NotNull SnapshotIdSet <set-?>) {
/*      */     Intrinsics.checkNotNullParameter(<set-?>, "<set-?>");
/*      */     this.previousIds = <set-?>;
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   public final int[] getPreviousPinnedSnapshots$runtime() {
/*      */     return this.previousPinnedSnapshots;
/*      */   }
/*      */   
/*      */   public final void setPreviousPinnedSnapshots$runtime(@NotNull int[] <set-?>) {
/*      */     Intrinsics.checkNotNullParameter(<set-?>, "<set-?>");
/*      */     this.previousPinnedSnapshots = <set-?>;
/*      */   }
/*      */   
/*      */   public final boolean getApplied$runtime() {
/*      */     return this.applied;
/*      */   }
/*      */   
/*      */   public final void setApplied$runtime(boolean <set-?>) {
/*      */     this.applied = <set-?>;
/*      */   }
/*      */   
/*      */   @Metadata(mv = {1, 9, 0}, k = 1, xi = 48, d1 = {"\000\022\n\002\030\002\n\002\020\000\n\002\b\002\n\002\020\025\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002R\016\020\003\032\0020\004X\004¢\006\002\n\000¨\006\005"}, d2 = {"Landroidx/compose/runtime/snapshots/MutableSnapshot$Companion;", "", "()V", "EmptyIntArray", "", "runtime"})
/*      */   private static final class Companion {
/*      */     private Companion() {}
/*      */   }
/*      */   
/*      */   @NotNull
/*      */   private static final Companion Companion = new Companion(null);
/*      */   @Nullable
/*      */   private final Function1<Object, Unit> readObserver;
/*      */   @Nullable
/*      */   private final Function1<Object, Unit> writeObserver;
/*      */   private int writeCount;
/*      */   @Nullable
/*      */   private MutableScatterSet<StateObject> modified;
/*      */   @Nullable
/*      */   private List<? extends StateObject> merged;
/*      */   @NotNull
/*      */   private SnapshotIdSet previousIds;
/*      */   @NotNull
/*      */   private int[] previousPinnedSnapshots;
/*      */   private int snapshots;
/*      */   private boolean applied;
/*      */   public static final int $stable = 8;
/*      */   @NotNull
/*      */   private static final int[] EmptyIntArray = new int[0];
/*      */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\runtime-desktop-1.7.3.jar!\androidx\compose\runtime\snapshots\MutableSnapshot.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */