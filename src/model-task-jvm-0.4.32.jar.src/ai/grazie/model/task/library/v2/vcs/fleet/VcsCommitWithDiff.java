/*   */ package ai.grazie.model.task.library.v2.vcs.fleet;@Serializable
/*   */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000<\n\002\030\002\n\002\020\000\n\000\n\002\020\b\n\000\n\002\020\016\n\000\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\b\n\002\020\002\n\002\b\002\n\002\030\002\n\000\n\002\030\002\n\002\b\004\b\007\030\000 \0332\0020\001:\002\032\033B7\b\021\022\006\020\002\032\0020\003\022\b\020\004\032\004\030\0010\005\022\b\020\006\032\004\030\0010\007\022\b\020\b\032\004\030\0010\005\022\b\020\t\032\004\030\0010\n¢\006\002\020\013B\035\022\006\020\004\032\0020\005\022\006\020\006\032\0020\007\022\006\020\b\032\0020\005¢\006\002\020\fJ&\020\022\032\0020\0232\006\020\024\032\0020\0002\006\020\025\032\0020\0262\006\020\027\032\0020\030HÁ\001¢\006\002\b\031R\021\020\b\032\0020\005¢\006\b\n\000\032\004\b\r\020\016R\021\020\004\032\0020\005¢\006\b\n\000\032\004\b\017\020\016R\021\020\006\032\0020\007¢\006\b\n\000\032\004\b\020\020\021¨\006\034"}, d2 = {"Lai/grazie/model/task/library/v2/vcs/fleet/VcsCommitWithDiff;", "", "seen1", "", "hash", "", "meta", "Lai/grazie/model/task/library/vcs/VcsCommitMeta;", "diff", "serializationConstructorMarker", "Lkotlinx/serialization/internal/SerializationConstructorMarker;", "(ILjava/lang/String;Lai/grazie/model/task/library/vcs/VcsCommitMeta;Ljava/lang/String;Lkotlinx/serialization/internal/SerializationConstructorMarker;)V", "(Ljava/lang/String;Lai/grazie/model/task/library/vcs/VcsCommitMeta;Ljava/lang/String;)V", "getDiff", "()Ljava/lang/String;", "getHash", "getMeta", "()Lai/grazie/model/task/library/vcs/VcsCommitMeta;", "write$Self", "", "self", "output", "Lkotlinx/serialization/encoding/CompositeEncoder;", "serialDesc", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "write$Self$model_task", "$serializer", "Companion", "model-task"})
/*   */ public final class VcsCommitWithDiff { @NotNull
/*   */   public static final Companion Companion = new Companion(null); @NotNull
/*   */   private final String hash; @NotNull
/*   */   private final VcsCommitMeta meta; @NotNull
/*   */   private final String diff;
/*   */   
/* 9 */   public VcsCommitWithDiff(@NotNull String hash, @NotNull VcsCommitMeta meta, @NotNull String diff) { this.hash = hash; this.meta = meta; this.diff = diff; } @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN) @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/model/task/library/v2/vcs/fleet/VcsCommitWithDiff.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/model/task/library/v2/vcs/fleet/VcsCommitWithDiff;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "model-task"}) public static final class $serializer implements GeneratedSerializer<VcsCommitWithDiff> { @NotNull public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer = new KSerializer[3]; arrayOfKSerializer[0] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer[1] = (KSerializer)VcsCommitMeta$.serializer.INSTANCE; arrayOfKSerializer[2] = (KSerializer)StringSerializer.INSTANCE; return (KSerializer<?>[])arrayOfKSerializer; } @NotNull public VcsCommitWithDiff deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; String str1 = null; VcsCommitMeta vcsCommitMeta = null; String str2 = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); if (compositeDecoder.decodeSequentially()) { str1 = compositeDecoder.decodeStringElement(serialDescriptor, 0); i |= 0x1; vcsCommitMeta = (VcsCommitMeta)compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)VcsCommitMeta$.serializer.INSTANCE, vcsCommitMeta); i |= 0x2; str2 = compositeDecoder.decodeStringElement(serialDescriptor, 2); i |= 0x4; } else { while (bool) { int j = compositeDecoder.decodeElementIndex(serialDescriptor); switch (j) { case -1: bool = false; continue;case 0: str1 = compositeDecoder.decodeStringElement(serialDescriptor, 0); i |= 0x1; continue;case 1: vcsCommitMeta = (VcsCommitMeta)compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)VcsCommitMeta$.serializer.INSTANCE, vcsCommitMeta); i |= 0x2; continue;case 2: str2 = compositeDecoder.decodeStringElement(serialDescriptor, 2); i |= 0x4; continue; }  throw new UnknownFieldException(j); }  }  compositeDecoder.endStructure(serialDescriptor); return new VcsCommitWithDiff(i, str1, vcsCommitMeta, str2, null); } public void serialize(@NotNull Encoder encoder, @NotNull VcsCommitWithDiff value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); VcsCommitWithDiff.write$Self$model_task(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("ai.grazie.model.task.library.v2.vcs.fleet.VcsCommitWithDiff", INSTANCE, 3); pluginGeneratedSerialDescriptor.addElement("hash", false); pluginGeneratedSerialDescriptor.addElement("meta", false); pluginGeneratedSerialDescriptor.addElement("diff", false); descriptor = pluginGeneratedSerialDescriptor; } } @NotNull public final String getHash() { return this.hash; } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\020\000\n\002\b\002\n\002\030\002\n\002\030\002\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002J\017\020\003\032\b\022\004\022\0020\0050\004HÆ\001¨\006\006"}, d2 = {"Lai/grazie/model/task/library/v2/vcs/fleet/VcsCommitWithDiff$Companion;", "", "()V", "serializer", "Lkotlinx/serialization/KSerializer;", "Lai/grazie/model/task/library/v2/vcs/fleet/VcsCommitWithDiff;", "model-task"}) public static final class Companion { private Companion() {} @NotNull public final KSerializer<VcsCommitWithDiff> serializer() { return (KSerializer<VcsCommitWithDiff>)VcsCommitWithDiff.$serializer.INSTANCE; } } @NotNull public final VcsCommitMeta getMeta() { return this.meta; } @NotNull public final String getDiff() { return this.diff; }
/*   */    }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\model-task-jvm-0.4.32.jar!\ai\grazie\model\task\library\v2\vcs\fleet\VcsCommitWithDiff.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */