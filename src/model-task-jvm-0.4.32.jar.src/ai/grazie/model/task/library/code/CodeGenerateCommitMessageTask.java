/*    */ package ai.grazie.model.task.library.code;
/*    */ import ai.grazie.model.task.exec.TaskParametersBuilder;
/*    */ import ai.grazie.model.task.id.TaskTag;
/*    */ import ai.grazie.utils.attributes.AttributeDescriptor;
/*    */ import ai.grazie.utils.attributes.Attributes;
/*    */ import ai.grazie.utils.attributes.AttributesBuilder;
/*    */ import kotlin.Metadata;
/*    */ import org.jetbrains.annotations.NotNull;
/*    */ 
/*    */ @Deprecated(message = "Use VcsGenerateCommitMessageTask")
/*    */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000*\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\016\n\002\b\002\n\002\020\b\n\002\b\004\bÇ\002\030\0002\0020\001:\001\020B\007\b\002¢\006\002\020\002J3\020\007\032\0020\b2\006\020\t\032\0020\n2\006\020\013\032\0020\n2\n\b\002\020\f\032\004\030\0010\r2\n\b\002\020\016\032\004\030\0010\n¢\006\002\020\017R\024\020\003\032\0020\004X\004¢\006\b\n\000\032\004\b\005\020\006¨\006\021"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask;", "Lai/grazie/model/task/id/TaskNameDescriptor;", "()V", "name", "Lai/grazie/model/task/id/TaskName;", "getName", "()Lai/grazie/model/task/id/TaskName;", "default", "Lai/grazie/model/task/exec/TaskCall;", "diff", "", "text", "summaryLength", "", "instruction", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)Lai/grazie/model/task/exec/TaskCall;", "LLM", "model-task"})
/*    */ public final class CodeGenerateCommitMessageTask implements TaskNameDescriptor {
/*    */   @NotNull
/* 14 */   public static final CodeGenerateCommitMessageTask INSTANCE = new CodeGenerateCommitMessageTask(); @NotNull private static final TaskName name = new TaskName("code-generate-commit-message"); @NotNull public TaskName getName() { return name; }
/*    */   
/*    */   @NotNull
/* 17 */   public final TaskCall default(@NotNull String diff, @NotNull String text, @Nullable Integer summaryLength, @Nullable String instruction) { Intrinsics.checkNotNullParameter(diff, "diff"); Intrinsics.checkNotNullParameter(text, "text"); return new TaskCall(getName().tag(LLM.IJ.Slow.Default.INSTANCE.getTag()), TaskParameters.Companion.build(new CodeGenerateCommitMessageTask$default$1(diff, text, instruction))); } @Metadata(mv = {1, 7, 0}, k = 3, xi = 48, d1 = {"\000\f\n\000\n\002\020\002\n\002\030\002\n\000\020\000\032\0020\001*\0020\002H\n¢\006\002\b\003"}, d2 = {"<anonymous>", "", "Lai/grazie/model/task/exec/TaskParametersBuilder;", "invoke"})
/* 18 */   static final class CodeGenerateCommitMessageTask$default$1 extends Lambda implements Function1<TaskParametersBuilder, Unit> { public final void invoke(TaskParametersBuilder $this$build) { Intrinsics.checkNotNullParameter($this$build, "$this$build"); $this$build.add((AttributeDescriptor)CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getDiff(), this.$diff);
/* 19 */       $this$build.add((AttributeDescriptor)CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getText(), this.$text);
/* 20 */       $this$build.add((AttributeDescriptor)CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getInstruction(), this.$instruction); } CodeGenerateCommitMessageTask$default$1(String $diff, String $text, String $instruction) {
/*    */       super(1);
/*    */     } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\f\n\002\030\002\n\002\020\000\n\002\b\003\bÆ\002\030\0002\0020\001:\001\003B\007\b\002¢\006\002\020\002¨\006\004"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM;", "", "()V", "IJ", "model-task"})
/*    */   public static final class LLM { @NotNull
/*    */     public static final LLM INSTANCE = new LLM(); @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\f\n\002\030\002\n\002\020\000\n\002\b\003\bÆ\002\030\0002\0020\001:\001\003B\007\b\002¢\006\002\020\002¨\006\004"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ;", "", "()V", "Slow", "model-task"})
/*    */     public static final class IJ { @NotNull
/*    */       public static final IJ INSTANCE = new IJ(); @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\034\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\004\n\002\030\002\n\002\b\007\bÆ\002\030\0002\0020\001:\003\r\016\017B\007\b\002¢\006\002\020\002R\034\020\003\032\0020\0048\006X\004¢\006\016\n\000\022\004\b\005\020\002\032\004\b\006\020\007R\034\020\b\032\0020\t8\026X\004¢\006\016\n\000\022\004\b\n\020\002\032\004\b\013\020\f¨\006\020"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow;", "Lai/grazie/model/task/id/TaskTagDescriptor$Stable;", "()V", "defaults", "Lai/grazie/model/task/exec/TaskParameters;", "getDefaults$annotations", "getDefaults", "()Lai/grazie/model/task/exec/TaskParameters;", "tag", "Lai/grazie/model/task/id/TaskTag;", "getTag$annotations", "getTag", "()Lai/grazie/model/task/id/TaskTag;", "Default", "Params", "Schema", "model-task"})
/*    */       public static final class Slow implements TaskTagDescriptor.Stable { @NotNull
/* 28 */         public static final Slow INSTANCE = new Slow(); @NotNull private static final TaskTag tag = new TaskTag("llm-ij-slow-default"); @NotNull public TaskTag getTag() { return tag; }
/*    */         
/*    */         @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\024\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\bÆ\002\030\0002\0020\001B\007\b\002¢\006\002\020\002R\024\020\003\032\0020\004X\004¢\006\b\n\000\032\004\b\005\020\006¨\006\007"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Default;", "Lai/grazie/model/task/id/TaskTagDescriptor$Stable;", "()V", "tag", "Lai/grazie/model/task/id/TaskTag;", "getTag", "()Lai/grazie/model/task/id/TaskTag;", "model-task"})
/*    */         public static final class Default implements TaskTagDescriptor.Stable { @NotNull
/* 32 */           public static final Default INSTANCE = new Default(); @NotNull private static final TaskTag tag = new TaskTag("llm-ij-slow-default"); @NotNull public TaskTag getTag() { return tag; }
/*    */            }
/*    */         
/*    */         @NotNull
/* 36 */         private static final TaskParameters defaults = TaskParameters.Companion.build(CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1.INSTANCE); @NotNull public final TaskParameters getDefaults() { return defaults; } @Metadata(mv = {1, 7, 0}, k = 3, xi = 48, d1 = {"\000\f\n\000\n\002\020\002\n\002\030\002\n\000\020\000\032\0020\001*\0020\002H\n¢\006\002\b\003"}, d2 = {"<anonymous>", "", "Lai/grazie/model/task/exec/TaskParametersBuilder;", "invoke"})
/* 37 */         static final class CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1 extends Lambda implements Function1<TaskParametersBuilder, Unit> { public static final CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1 INSTANCE = new CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1(); public final void invoke(TaskParametersBuilder $this$build) { Intrinsics.checkNotNullParameter($this$build, "$this$build"); String defaultInstruction = "Avoid overly verbose descriptions or unnecessary details.\nStart with a short sentence in imperative form, no more than 50 characters long.\nThen leave an empty line and continue with a more detailed explanation.\nWrite only one sentence for the first part, and two or three sentences at most for the detailed explanation.";
/*    */ 
/*    */ 
/*    */ 
/*    */             
/* 42 */             $this$build.add((AttributeDescriptor)CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getInstruction(), defaultInstruction); } CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1() {
/*    */             super(1);
/*    */           } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0004\n\002\030\002\n\002\030\002\n\002\b\002\n\002\020 \n\002\030\002\n\002\030\002\n\002\030\002\n\002\020\016\n\002\b\004\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b\005\bÆ\002\030\0002\0020\001B\007\b\002¢\006\002\020\002R6\020\003\032\036\022\032\022\030\022\004\022\0020\006\022\004\022\0020\007\022\b\b\001\022\004\030\0010\b0\0050\004X\004¢\006\016\n\000\022\004\b\t\020\002\032\004\b\n\020\013R\021\020\f\032\0020\r¢\006\b\n\000\032\004\b\016\020\017R\021\020\020\032\0020\021¢\006\b\n\000\032\004\b\022\020\023R\021\020\024\032\0020\021¢\006\b\n\000\032\004\b\025\020\023¨\006\026"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Schema;", "Lai/grazie/model/task/id/TaskSchemaDescriptor;", "()V", "all", "", "Lai/grazie/utils/attributes/AttributeDescriptor;", "Lai/grazie/utils/attributes/Attributes$Key$Text;", "Lai/grazie/utils/attributes/Attributes$Value$Text;", "", "getAll$annotations", "getAll", "()Ljava/util/List;", "diff", "Lai/grazie/utils/attributes/AttributeDescriptor$Text;", "getDiff", "()Lai/grazie/utils/attributes/AttributeDescriptor$Text;", "instruction", "Lai/grazie/utils/attributes/AttributeDescriptor$OptText;", "getInstruction", "()Lai/grazie/utils/attributes/AttributeDescriptor$OptText;", "text", "getText", "model-task"})
/*    */         public static final class Schema implements TaskSchemaDescriptor { @NotNull
/* 46 */           public static final Schema INSTANCE = new Schema(); @NotNull private static final AttributeDescriptor.Text diff = new AttributeDescriptor.Text("diff"); @NotNull public final AttributeDescriptor.Text getDiff() { return diff; } @NotNull
/* 47 */           private static final AttributeDescriptor.OptText text = new AttributeDescriptor.OptText("text"); @NotNull public final AttributeDescriptor.OptText getText() { return text; } @NotNull
/* 48 */           private static final AttributeDescriptor.OptText instruction = new AttributeDescriptor.OptText("instruction"); @NotNull private static final List<AttributeDescriptor<Attributes.Key.Text, Attributes.Value.Text, ? extends String>> all; @NotNull public final AttributeDescriptor.OptText getInstruction() { return instruction; }
/*    */           
/*    */           @NotNull
/* 51 */           public List<AttributeDescriptor<Attributes.Key.Text, Attributes.Value.Text, ? extends String>> getAll() { return all; } static { AttributeDescriptor[] arrayOfAttributeDescriptor = new AttributeDescriptor[3]; arrayOfAttributeDescriptor[0] = (AttributeDescriptor)diff; arrayOfAttributeDescriptor[1] = (AttributeDescriptor)text; arrayOfAttributeDescriptor[2] = (AttributeDescriptor)instruction; all = CollectionsKt.listOf((Object[])arrayOfAttributeDescriptor); } } @Deprecated(message = "Use schema with task builder") @Serializable(with = TaskParameters.Serializer.class) @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\"\n\002\030\002\n\002\030\002\n\000\n\002\020\016\n\002\b\002\n\002\020\b\n\002\b\003\n\002\030\002\n\002\b\013\b\007\030\000 \0242\0020\001:\001\024B-\022\006\020\002\032\0020\003\022\006\020\004\032\0020\003\022\n\b\002\020\005\032\004\030\0010\006\022\n\b\002\020\007\032\004\030\0010\003¢\006\002\020\bR\024\020\t\032\0020\nX\004¢\006\b\n\000\032\004\b\013\020\fR\021\020\002\032\0020\003¢\006\b\n\000\032\004\b\r\020\016R\023\020\007\032\004\030\0010\003¢\006\b\n\000\032\004\b\017\020\016R\025\020\005\032\004\030\0010\006¢\006\n\n\002\020\022\032\004\b\020\020\021R\021\020\004\032\0020\003¢\006\b\n\000\032\004\b\023\020\016¨\006\025"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params;", "Lai/grazie/model/task/exec/TaskParameters;", "diff", "", "text", "summaryLength", "", "instruction", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V", "attributes", "Lai/grazie/utils/attributes/Attributes;", "getAttributes", "()Lai/grazie/utils/attributes/Attributes;", "getDiff", "()Ljava/lang/String;", "getInstruction", "getSummaryLength", "()Ljava/lang/Integer;", "Ljava/lang/Integer;", "getText", "Companion", "model-task"}) public static final class Params extends TaskParameters { @NotNull public static final Companion Companion = new Companion(null); @NotNull private final String diff; @NotNull private final String text; @Nullable private final Integer summaryLength; @Nullable private final String instruction; @NotNull
/*    */           private final Attributes attributes; @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\020\000\n\002\b\002\n\002\030\002\n\002\030\002\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002J\017\020\003\032\b\022\004\022\0020\0050\004HÆ\001¨\006\006"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$Companion;", "", "()V", "serializer", "Lkotlinx/serialization/KSerializer;", "Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params;", "model-task"})
/*    */           public static final class Companion { private Companion() {} @NotNull
/* 54 */             public final KSerializer<CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params> serializer() { return (KSerializer<CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params>)TaskParameters.Serializer.INSTANCE; }
/*    */              }
/* 56 */           public Params(@NotNull String diff, @NotNull String text, @Nullable Integer summaryLength, @Nullable String instruction) { this.diff = diff; this.text = text; this.summaryLength = summaryLength; this.instruction = instruction;
/* 57 */             this.attributes = Attributes.Companion.build(new CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1()); } @NotNull public final String getDiff() { return this.diff; } @NotNull public final String getText() { return this.text; } @Nullable public final Integer getSummaryLength() { return this.summaryLength; } @Nullable public final String getInstruction() { return this.instruction; } @NotNull public Attributes getAttributes() { return this.attributes; } @Metadata(mv = {1, 7, 0}, k = 3, xi = 48, d1 = {"\000\f\n\000\n\002\020\002\n\002\030\002\n\000\020\000\032\0020\001*\0020\002H\n¢\006\002\b\003"}, d2 = {"<anonymous>", "", "Lai/grazie/utils/attributes/AttributesBuilder;", "invoke"}) static final class CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1 extends Lambda implements Function1<AttributesBuilder, Unit> {
/* 58 */             CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1() { super(1); } public final void invoke(AttributesBuilder $this$build) { Intrinsics.checkNotNullParameter($this$build, "$this$build"); $this$build.text(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getDiff().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getDiff());
/* 59 */               $this$build.text(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getText().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getText());
/* 60 */               $this$build.optText(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getInstruction().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getInstruction()); } } } } } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\f\n\002\030\002\n\002\020\000\n\002\b\003\bÆ\002\030\0002\0020\001:\001\003B\007\b\002¢\006\002\020\002¨\006\004"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ;", "", "()V", "Slow", "model-task"}) public static final class IJ { @NotNull public static final IJ INSTANCE = new IJ(); @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\034\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\004\n\002\030\002\n\002\b\007\bÆ\002\030\0002\0020\001:\003\r\016\017B\007\b\002¢\006\002\020\002R\034\020\003\032\0020\0048\006X\004¢\006\016\n\000\022\004\b\005\020\002\032\004\b\006\020\007R\034\020\b\032\0020\t8\026X\004¢\006\016\n\000\022\004\b\n\020\002\032\004\b\013\020\f¨\006\020"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow;", "Lai/grazie/model/task/id/TaskTagDescriptor$Stable;", "()V", "defaults", "Lai/grazie/model/task/exec/TaskParameters;", "getDefaults$annotations", "getDefaults", "()Lai/grazie/model/task/exec/TaskParameters;", "tag", "Lai/grazie/model/task/id/TaskTag;", "getTag$annotations", "getTag", "()Lai/grazie/model/task/id/TaskTag;", "Default", "Params", "Schema", "model-task"}) public static final class Slow implements TaskTagDescriptor.Stable { @NotNull public static final Slow INSTANCE = new Slow(); @NotNull private static final TaskTag tag = new TaskTag("llm-ij-slow-default"); @NotNull public TaskTag getTag() { return tag; } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\024\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\bÆ\002\030\0002\0020\001B\007\b\002¢\006\002\020\002R\024\020\003\032\0020\004X\004¢\006\b\n\000\032\004\b\005\020\006¨\006\007"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Default;", "Lai/grazie/model/task/id/TaskTagDescriptor$Stable;", "()V", "tag", "Lai/grazie/model/task/id/TaskTag;", "getTag", "()Lai/grazie/model/task/id/TaskTag;", "model-task"}) public static final class Default implements TaskTagDescriptor.Stable { @NotNull public static final Default INSTANCE = new Default(); @NotNull private static final TaskTag tag = new TaskTag("llm-ij-slow-default"); @NotNull public TaskTag getTag() { return tag; } } @NotNull private static final TaskParameters defaults = TaskParameters.Companion.build(CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1.INSTANCE); @NotNull public final TaskParameters getDefaults() { return defaults; } @Metadata(mv = {1, 7, 0}, k = 3, xi = 48, d1 = {"\000\f\n\000\n\002\020\002\n\002\030\002\n\000\020\000\032\0020\001*\0020\002H\n¢\006\002\b\003"}, d2 = {"<anonymous>", "", "Lai/grazie/model/task/exec/TaskParametersBuilder;", "invoke"}) static final class CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1 extends Lambda implements Function1<TaskParametersBuilder, Unit> { public static final CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1 INSTANCE = new CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1(); public final void invoke(TaskParametersBuilder $this$build) { Intrinsics.checkNotNullParameter($this$build, "$this$build"); String defaultInstruction = "Avoid overly verbose descriptions or unnecessary details.\nStart with a short sentence in imperative form, no more than 50 characters long.\nThen leave an empty line and continue with a more detailed explanation.\nWrite only one sentence for the first part, and two or three sentences at most for the detailed explanation."; $this$build.add((AttributeDescriptor)CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getInstruction(), defaultInstruction); } CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1() { super(1); } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0004\n\002\030\002\n\002\030\002\n\002\b\002\n\002\020 \n\002\030\002\n\002\030\002\n\002\030\002\n\002\020\016\n\002\b\004\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b\005\bÆ\002\030\0002\0020\001B\007\b\002¢\006\002\020\002R6\020\003\032\036\022\032\022\030\022\004\022\0020\006\022\004\022\0020\007\022\b\b\001\022\004\030\0010\b0\0050\004X\004¢\006\016\n\000\022\004\b\t\020\002\032\004\b\n\020\013R\021\020\f\032\0020\r¢\006\b\n\000\032\004\b\016\020\017R\021\020\020\032\0020\021¢\006\b\n\000\032\004\b\022\020\023R\021\020\024\032\0020\021¢\006\b\n\000\032\004\b\025\020\023¨\006\026"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Schema;", "Lai/grazie/model/task/id/TaskSchemaDescriptor;", "()V", "all", "", "Lai/grazie/utils/attributes/AttributeDescriptor;", "Lai/grazie/utils/attributes/Attributes$Key$Text;", "Lai/grazie/utils/attributes/Attributes$Value$Text;", "", "getAll$annotations", "getAll", "()Ljava/util/List;", "diff", "Lai/grazie/utils/attributes/AttributeDescriptor$Text;", "getDiff", "()Lai/grazie/utils/attributes/AttributeDescriptor$Text;", "instruction", "Lai/grazie/utils/attributes/AttributeDescriptor$OptText;", "getInstruction", "()Lai/grazie/utils/attributes/AttributeDescriptor$OptText;", "text", "getText", "model-task"}) public static final class Schema implements TaskSchemaDescriptor { @NotNull public static final Schema INSTANCE = new Schema(); @NotNull private static final AttributeDescriptor.Text diff = new AttributeDescriptor.Text("diff"); @NotNull public final AttributeDescriptor.Text getDiff() { return diff; } @NotNull private static final AttributeDescriptor.OptText text = new AttributeDescriptor.OptText("text"); @NotNull public final AttributeDescriptor.OptText getText() { return text; } @NotNull private static final AttributeDescriptor.OptText instruction = new AttributeDescriptor.OptText("instruction"); @NotNull private static final List<AttributeDescriptor<Attributes.Key.Text, Attributes.Value.Text, ? extends String>> all; @NotNull public final AttributeDescriptor.OptText getInstruction() { return instruction; } @NotNull public List<AttributeDescriptor<Attributes.Key.Text, Attributes.Value.Text, ? extends String>> getAll() { return all; } static { AttributeDescriptor[] arrayOfAttributeDescriptor = new AttributeDescriptor[3]; arrayOfAttributeDescriptor[0] = (AttributeDescriptor)diff; arrayOfAttributeDescriptor[1] = (AttributeDescriptor)text; arrayOfAttributeDescriptor[2] = (AttributeDescriptor)instruction; all = CollectionsKt.listOf((Object[])arrayOfAttributeDescriptor); } } @Deprecated(message = "Use schema with task builder") @Serializable(with = TaskParameters.Serializer.class) @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\"\n\002\030\002\n\002\030\002\n\000\n\002\020\016\n\002\b\002\n\002\020\b\n\002\b\003\n\002\030\002\n\002\b\013\b\007\030\000 \0242\0020\001:\001\024B-\022\006\020\002\032\0020\003\022\006\020\004\032\0020\003\022\n\b\002\020\005\032\004\030\0010\006\022\n\b\002\020\007\032\004\030\0010\003¢\006\002\020\bR\024\020\t\032\0020\nX\004¢\006\b\n\000\032\004\b\013\020\fR\021\020\002\032\0020\003¢\006\b\n\000\032\004\b\r\020\016R\023\020\007\032\004\030\0010\003¢\006\b\n\000\032\004\b\017\020\016R\025\020\005\032\004\030\0010\006¢\006\n\n\002\020\022\032\004\b\020\020\021R\021\020\004\032\0020\003¢\006\b\n\000\032\004\b\023\020\016¨\006\025"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params;", "Lai/grazie/model/task/exec/TaskParameters;", "diff", "", "text", "summaryLength", "", "instruction", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V", "attributes", "Lai/grazie/utils/attributes/Attributes;", "getAttributes", "()Lai/grazie/utils/attributes/Attributes;", "getDiff", "()Ljava/lang/String;", "getInstruction", "getSummaryLength", "()Ljava/lang/Integer;", "Ljava/lang/Integer;", "getText", "Companion", "model-task"}) public static final class Params extends TaskParameters { @NotNull public static final Companion Companion = new Companion(null); @NotNull private final String diff; @NotNull private final String text; @Nullable private final Integer summaryLength; @Nullable private final String instruction; @NotNull private final Attributes attributes; @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\020\000\n\002\b\002\n\002\030\002\n\002\030\002\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002J\017\020\003\032\b\022\004\022\0020\0050\004HÆ\001¨\006\006"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$Companion;", "", "()V", "serializer", "Lkotlinx/serialization/KSerializer;", "Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params;", "model-task"}) public static final class Companion { private Companion() {} @NotNull public final KSerializer<CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params> serializer() { return (KSerializer<CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params>)TaskParameters.Serializer.INSTANCE; } } public Params(@NotNull String diff, @NotNull String text, @Nullable Integer summaryLength, @Nullable String instruction) { this.diff = diff; this.text = text; this.summaryLength = summaryLength; this.instruction = instruction; this.attributes = Attributes.Companion.build(new CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1()); } @NotNull public final String getDiff() { return this.diff; } @NotNull public final String getText() { return this.text; } @Nullable public final Integer getSummaryLength() { return this.summaryLength; } @Nullable public final String getInstruction() { return this.instruction; } @NotNull public Attributes getAttributes() { return this.attributes; } @Metadata(mv = {1, 7, 0}, k = 3, xi = 48, d1 = {"\000\f\n\000\n\002\020\002\n\002\030\002\n\000\020\000\032\0020\001*\0020\002H\n¢\006\002\b\003"}, d2 = {"<anonymous>", "", "Lai/grazie/utils/attributes/AttributesBuilder;", "invoke"}) static final class CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1 extends Lambda implements Function1<AttributesBuilder, Unit> { public final void invoke(AttributesBuilder $this$build) { Intrinsics.checkNotNullParameter($this$build, "$this$build"); $this$build.text(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getDiff().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getDiff()); $this$build.text(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getText().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getText()); $this$build.optText(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getInstruction().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getInstruction()); } CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1() { super(1); } } } } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\034\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\004\n\002\030\002\n\002\b\007\bÆ\002\030\0002\0020\001:\003\r\016\017B\007\b\002¢\006\002\020\002R\034\020\003\032\0020\0048\006X\004¢\006\016\n\000\022\004\b\005\020\002\032\004\b\006\020\007R\034\020\b\032\0020\t8\026X\004¢\006\016\n\000\022\004\b\n\020\002\032\004\b\013\020\f¨\006\020"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow;", "Lai/grazie/model/task/id/TaskTagDescriptor$Stable;", "()V", "defaults", "Lai/grazie/model/task/exec/TaskParameters;", "getDefaults$annotations", "getDefaults", "()Lai/grazie/model/task/exec/TaskParameters;", "tag", "Lai/grazie/model/task/id/TaskTag;", "getTag$annotations", "getTag", "()Lai/grazie/model/task/id/TaskTag;", "Default", "Params", "Schema", "model-task"}) public static final class Slow implements TaskTagDescriptor.Stable { @NotNull public static final Slow INSTANCE = new Slow(); @NotNull private static final TaskTag tag = new TaskTag("llm-ij-slow-default"); @NotNull public TaskTag getTag() { return tag; } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\024\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\bÆ\002\030\0002\0020\001B\007\b\002¢\006\002\020\002R\024\020\003\032\0020\004X\004¢\006\b\n\000\032\004\b\005\020\006¨\006\007"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Default;", "Lai/grazie/model/task/id/TaskTagDescriptor$Stable;", "()V", "tag", "Lai/grazie/model/task/id/TaskTag;", "getTag", "()Lai/grazie/model/task/id/TaskTag;", "model-task"}) public static final class Default implements TaskTagDescriptor.Stable { @NotNull public static final Default INSTANCE = new Default(); @NotNull private static final TaskTag tag = new TaskTag("llm-ij-slow-default"); @NotNull public TaskTag getTag() { return tag; } } @NotNull private static final TaskParameters defaults = TaskParameters.Companion.build(CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1.INSTANCE); @NotNull public final TaskParameters getDefaults() { return defaults; } @Metadata(mv = {1, 7, 0}, k = 3, xi = 48, d1 = {"\000\f\n\000\n\002\020\002\n\002\030\002\n\000\020\000\032\0020\001*\0020\002H\n¢\006\002\b\003"}, d2 = {"<anonymous>", "", "Lai/grazie/model/task/exec/TaskParametersBuilder;", "invoke"}) static final class CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1 extends Lambda implements Function1<TaskParametersBuilder, Unit> { public static final CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1 INSTANCE = new CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1(); public final void invoke(TaskParametersBuilder $this$build) { Intrinsics.checkNotNullParameter($this$build, "$this$build"); String defaultInstruction = "Avoid overly verbose descriptions or unnecessary details.\nStart with a short sentence in imperative form, no more than 50 characters long.\nThen leave an empty line and continue with a more detailed explanation.\nWrite only one sentence for the first part, and two or three sentences at most for the detailed explanation."; $this$build.add((AttributeDescriptor)CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getInstruction(), defaultInstruction); } CodeGenerateCommitMessageTask$LLM$IJ$Slow$defaults$1() { super(1); } } @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0004\n\002\030\002\n\002\030\002\n\002\b\002\n\002\020 \n\002\030\002\n\002\030\002\n\002\030\002\n\002\020\016\n\002\b\004\n\002\030\002\n\002\b\003\n\002\030\002\n\002\b\005\bÆ\002\030\0002\0020\001B\007\b\002¢\006\002\020\002R6\020\003\032\036\022\032\022\030\022\004\022\0020\006\022\004\022\0020\007\022\b\b\001\022\004\030\0010\b0\0050\004X\004¢\006\016\n\000\022\004\b\t\020\002\032\004\b\n\020\013R\021\020\f\032\0020\r¢\006\b\n\000\032\004\b\016\020\017R\021\020\020\032\0020\021¢\006\b\n\000\032\004\b\022\020\023R\021\020\024\032\0020\021¢\006\b\n\000\032\004\b\025\020\023¨\006\026"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Schema;", "Lai/grazie/model/task/id/TaskSchemaDescriptor;", "()V", "all", "", "Lai/grazie/utils/attributes/AttributeDescriptor;", "Lai/grazie/utils/attributes/Attributes$Key$Text;", "Lai/grazie/utils/attributes/Attributes$Value$Text;", "", "getAll$annotations", "getAll", "()Ljava/util/List;", "diff", "Lai/grazie/utils/attributes/AttributeDescriptor$Text;", "getDiff", "()Lai/grazie/utils/attributes/AttributeDescriptor$Text;", "instruction", "Lai/grazie/utils/attributes/AttributeDescriptor$OptText;", "getInstruction", "()Lai/grazie/utils/attributes/AttributeDescriptor$OptText;", "text", "getText", "model-task"}) public static final class Schema implements TaskSchemaDescriptor { @NotNull public static final Schema INSTANCE = new Schema(); @NotNull private static final AttributeDescriptor.Text diff = new AttributeDescriptor.Text("diff"); @NotNull public final AttributeDescriptor.Text getDiff() { return diff; } @NotNull private static final AttributeDescriptor.OptText text = new AttributeDescriptor.OptText("text"); @NotNull public final AttributeDescriptor.OptText getText() { return text; } @NotNull private static final AttributeDescriptor.OptText instruction = new AttributeDescriptor.OptText("instruction"); @NotNull private static final List<AttributeDescriptor<Attributes.Key.Text, Attributes.Value.Text, ? extends String>> all; @NotNull public final AttributeDescriptor.OptText getInstruction() { return instruction; } @NotNull public List<AttributeDescriptor<Attributes.Key.Text, Attributes.Value.Text, ? extends String>> getAll() { return all; } static { AttributeDescriptor[] arrayOfAttributeDescriptor = new AttributeDescriptor[3]; arrayOfAttributeDescriptor[0] = (AttributeDescriptor)diff; arrayOfAttributeDescriptor[1] = (AttributeDescriptor)text; arrayOfAttributeDescriptor[2] = (AttributeDescriptor)instruction; all = CollectionsKt.listOf((Object[])arrayOfAttributeDescriptor); } } @Deprecated(message = "Use schema with task builder") @Serializable(with = TaskParameters.Serializer.class) @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\"\n\002\030\002\n\002\030\002\n\000\n\002\020\016\n\002\b\002\n\002\020\b\n\002\b\003\n\002\030\002\n\002\b\013\b\007\030\000 \0242\0020\001:\001\024B-\022\006\020\002\032\0020\003\022\006\020\004\032\0020\003\022\n\b\002\020\005\032\004\030\0010\006\022\n\b\002\020\007\032\004\030\0010\003¢\006\002\020\bR\024\020\t\032\0020\nX\004¢\006\b\n\000\032\004\b\013\020\fR\021\020\002\032\0020\003¢\006\b\n\000\032\004\b\r\020\016R\023\020\007\032\004\030\0010\003¢\006\b\n\000\032\004\b\017\020\016R\025\020\005\032\004\030\0010\006¢\006\n\n\002\020\022\032\004\b\020\020\021R\021\020\004\032\0020\003¢\006\b\n\000\032\004\b\023\020\016¨\006\025"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params;", "Lai/grazie/model/task/exec/TaskParameters;", "diff", "", "text", "summaryLength", "", "instruction", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V", "attributes", "Lai/grazie/utils/attributes/Attributes;", "getAttributes", "()Lai/grazie/utils/attributes/Attributes;", "getDiff", "()Ljava/lang/String;", "getInstruction", "getSummaryLength", "()Ljava/lang/Integer;", "Ljava/lang/Integer;", "getText", "Companion", "model-task"}) public static final class Params extends TaskParameters { @NotNull public static final Companion Companion = new Companion(null); @NotNull private final String diff; @NotNull private final String text; @Nullable private final Integer summaryLength; @Nullable private final String instruction; @NotNull private final Attributes attributes; @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\026\n\002\030\002\n\002\020\000\n\002\b\002\n\002\030\002\n\002\030\002\n\000\b\003\030\0002\0020\001B\007\b\002¢\006\002\020\002J\017\020\003\032\b\022\004\022\0020\0050\004HÆ\001¨\006\006"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$Companion;", "", "()V", "serializer", "Lkotlinx/serialization/KSerializer;", "Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params;", "model-task"}) public static final class Companion { private Companion() {} @NotNull public final KSerializer<CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params> serializer() { return (KSerializer<CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params>)TaskParameters.Serializer.INSTANCE; } } public Params(@NotNull String diff, @NotNull String text, @Nullable Integer summaryLength, @Nullable String instruction) { this.diff = diff; this.text = text; this.summaryLength = summaryLength; this.instruction = instruction; this.attributes = Attributes.Companion.build(new CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1()); } @NotNull public final String getDiff() { return this.diff; } @NotNull public final String getText() { return this.text; } @Nullable public final Integer getSummaryLength() { return this.summaryLength; } @Nullable public final String getInstruction() { return this.instruction; } @NotNull public Attributes getAttributes() { return this.attributes; } @Metadata(mv = {1, 7, 0}, k = 3, xi = 48, d1 = {"\000\f\n\000\n\002\020\002\n\002\030\002\n\000\020\000\032\0020\001*\0020\002H\n¢\006\002\b\003"}, d2 = {"<anonymous>", "", "Lai/grazie/utils/attributes/AttributesBuilder;", "invoke"}) static final class CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1 extends Lambda implements Function1<AttributesBuilder, Unit> { public final void invoke(AttributesBuilder $this$build) { Intrinsics.checkNotNullParameter($this$build, "$this$build"); $this$build.text(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getDiff().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getDiff()); $this$build.text(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getText().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getText()); $this$build.optText(CodeGenerateCommitMessageTask.LLM.IJ.Slow.Schema.INSTANCE.getInstruction().getName(), CodeGenerateCommitMessageTask.LLM.IJ.Slow.Params.this.getInstruction()); }
/*    */ 
/*    */         
/*    */         CodeGenerateCommitMessageTask$LLM$IJ$Slow$Params$attributes$1() {
/*    */           super(1);
/*    */         } }
/*    */        }
/*    */      }
/*    */ 
/*    */   
/*    */   @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\000\024\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\bÆ\002\030\0002\0020\001B\007\b\002¢\006\002\020\002R\024\020\003\032\0020\004X\004¢\006\b\n\000\032\004\b\005\020\006¨\006\007"}, d2 = {"Lai/grazie/model/task/library/code/CodeGenerateCommitMessageTask$LLM$IJ$Slow$Default;", "Lai/grazie/model/task/id/TaskTagDescriptor$Stable;", "()V", "tag", "Lai/grazie/model/task/id/TaskTag;", "getTag", "()Lai/grazie/model/task/id/TaskTag;", "model-task"})
/*    */   public static final class Default implements TaskTagDescriptor.Stable {
/*    */     @NotNull
/*    */     public static final Default INSTANCE = new Default();
/*    */     @NotNull
/*    */     private static final TaskTag tag = new TaskTag("llm-ij-slow-default");
/*    */     
/*    */     @NotNull
/*    */     public TaskTag getTag() {
/*    */       return tag;
/*    */     }
/*    */   }
/*    */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\model-task-jvm-0.4.32.jar!\ai\grazie\model\task\library\code\CodeGenerateCommitMessageTask.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */