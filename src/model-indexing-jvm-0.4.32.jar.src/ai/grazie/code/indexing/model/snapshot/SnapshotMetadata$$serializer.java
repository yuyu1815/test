/*   */ package ai.grazie.code.indexing.model.snapshot;
/*   */ 
/*   */ @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN)
/*   */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/code/indexing/model/snapshot/SnapshotMetadata.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/code/indexing/model/snapshot/SnapshotMetadata;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "model-indexing"})
/*   */ public final class $serializer implements GeneratedSerializer<SnapshotMetadata> {
/*   */   @NotNull
/* 7 */   public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer = new KSerializer[5]; arrayOfKSerializer[0] = (KSerializer)Snapshot.$serializer.INSTANCE; arrayOfKSerializer[1] = (KSerializer)Timestamp.Serializer.INSTANCE; arrayOfKSerializer[2] = (KSerializer)LongSerializer.INSTANCE; arrayOfKSerializer[3] = (KSerializer)BooleanSerializer.INSTANCE; arrayOfKSerializer[4] = (KSerializer)UIntSerializer.INSTANCE; return (KSerializer<?>[])arrayOfKSerializer; } @NotNull public SnapshotMetadata deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; Snapshot snapshot = null; Timestamp timestamp = null; long l = 0L; boolean bool1 = false; UInt uInt = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); if (compositeDecoder.decodeSequentially()) { snapshot = (Snapshot)compositeDecoder.decodeSerializableElement(serialDescriptor, 0, (DeserializationStrategy)Snapshot.$serializer.INSTANCE, snapshot); i |= 0x1; timestamp = (Timestamp)compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)Timestamp.Serializer.INSTANCE, timestamp); i |= 0x2; l = compositeDecoder.decodeLongElement(serialDescriptor, 2); i |= 0x4; bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 3); i |= 0x8; uInt = (UInt)compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)UIntSerializer.INSTANCE, uInt); i |= 0x10; } else { while (bool) { int j = compositeDecoder.decodeElementIndex(serialDescriptor); switch (j) { case -1: bool = false; continue;case 0: snapshot = (Snapshot)compositeDecoder.decodeSerializableElement(serialDescriptor, 0, (DeserializationStrategy)Snapshot.$serializer.INSTANCE, snapshot); i |= 0x1; continue;case 1: timestamp = (Timestamp)compositeDecoder.decodeSerializableElement(serialDescriptor, 1, (DeserializationStrategy)Timestamp.Serializer.INSTANCE, timestamp); i |= 0x2; continue;case 2: l = compositeDecoder.decodeLongElement(serialDescriptor, 2); i |= 0x4; continue;case 3: bool1 = compositeDecoder.decodeBooleanElement(serialDescriptor, 3); i |= 0x8; continue;case 4: uInt = (UInt)compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)UIntSerializer.INSTANCE, uInt); i |= 0x10; continue; }  throw new UnknownFieldException(j); }  }  compositeDecoder.endStructure(serialDescriptor); return new SnapshotMetadata(i, snapshot, timestamp, l, bool1, uInt, null, null); } public void serialize(@NotNull Encoder encoder, @NotNull SnapshotMetadata value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); SnapshotMetadata.write$Self$model_indexing(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("ai.grazie.code.indexing.model.snapshot.SnapshotMetadata", INSTANCE, 5); pluginGeneratedSerialDescriptor.addElement("snapshot", false); pluginGeneratedSerialDescriptor.addElement("createdAt", false); pluginGeneratedSerialDescriptor.addElement("clusters", false); pluginGeneratedSerialDescriptor.addElement("completed", false); pluginGeneratedSerialDescriptor.addElement("completionPercent", false); descriptor = pluginGeneratedSerialDescriptor; }
/*   */ 
/*   */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\model-indexing-jvm-0.4.32.jar!\ai\grazie\code\indexing\model\snapshot\SnapshotMetadata$$serializer.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */