/*   */ package ai.grazie.code.indexing.model;
/*   */ 
/*   */ @Deprecated(message = "This synthesized declaration should not be used directly", replaceWith = @ReplaceWith(expression = "", imports = {}), level = DeprecationLevel.HIDDEN)
/*   */ @Metadata(mv = {1, 7, 0}, k = 1, xi = 48, d1 = {"\0006\n\000\n\002\030\002\n\002\030\002\n\002\b\002\n\002\030\002\n\002\b\003\n\002\020\021\n\002\030\002\n\002\b\003\n\002\030\002\n\000\n\002\020\002\n\000\n\002\030\002\n\002\b\002\bÇ\002\030\0002\b\022\004\022\0020\0020\001B\007\b\002¢\006\002\020\003J\030\020\b\032\f\022\b\022\006\022\002\b\0030\n0\tHÖ\001¢\006\002\020\013J\021\020\f\032\0020\0022\006\020\r\032\0020\016HÖ\001J\031\020\017\032\0020\0202\006\020\021\032\0020\0222\006\020\023\032\0020\002HÖ\001R\024\020\004\032\0020\0058VXÖ\005¢\006\006\032\004\b\006\020\007¨\006\024"}, d2 = {"ai/grazie/code/indexing/model/IndexDescriptor.$serializer", "Lkotlinx/serialization/internal/GeneratedSerializer;", "Lai/grazie/code/indexing/model/IndexDescriptor;", "()V", "descriptor", "Lkotlinx/serialization/descriptors/SerialDescriptor;", "getDescriptor", "()Lkotlinx/serialization/descriptors/SerialDescriptor;", "childSerializers", "", "Lkotlinx/serialization/KSerializer;", "()[Lkotlinx/serialization/KSerializer;", "deserialize", "decoder", "Lkotlinx/serialization/encoding/Decoder;", "serialize", "", "encoder", "Lkotlinx/serialization/encoding/Encoder;", "value", "model-indexing"})
/*   */ public final class $serializer implements GeneratedSerializer<IndexDescriptor> {
/*   */   @NotNull
/* 7 */   public static final $serializer INSTANCE = new $serializer(); @NotNull public KSerializer<?>[] typeParametersSerializers() { return (KSerializer<?>[])GeneratedSerializer.DefaultImpls.typeParametersSerializers(this); } @NotNull public SerialDescriptor getDescriptor() { return (SerialDescriptor)descriptor; } @NotNull public KSerializer<?>[] childSerializers() { KSerializer[] arrayOfKSerializer1 = IndexDescriptor.access$get$childSerializers$cp(), arrayOfKSerializer2 = new KSerializer[11]; arrayOfKSerializer2[0] = arrayOfKSerializer1[0]; arrayOfKSerializer2[1] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer2[2] = (KSerializer)IntSerializer.INSTANCE; arrayOfKSerializer2[3] = arrayOfKSerializer1[3]; arrayOfKSerializer2[4] = arrayOfKSerializer1[4]; arrayOfKSerializer2[5] = (KSerializer)IntSerializer.INSTANCE; arrayOfKSerializer2[6] = arrayOfKSerializer1[6]; arrayOfKSerializer2[7] = (KSerializer)IndexingAttributes.$serializer.INSTANCE; arrayOfKSerializer2[8] = BuiltinSerializersKt.getNullable((KSerializer)StringSerializer.INSTANCE); arrayOfKSerializer2[9] = (KSerializer)StringSerializer.INSTANCE; arrayOfKSerializer2[10] = (KSerializer)StringSerializer.INSTANCE; return (KSerializer<?>[])arrayOfKSerializer2; } @NotNull public IndexDescriptor deserialize(@NotNull Decoder decoder) { Intrinsics.checkNotNullParameter(decoder, "decoder"); SerialDescriptor serialDescriptor = getDescriptor(); boolean bool = true; int i = 0; IndexScope indexScope = null; String str1 = null; int j = 0; VectorPrecision vectorPrecision = null; IndexEnvironment indexEnvironment = null; int k = 0; ClusterType clusterType = null; IndexingAttributes indexingAttributes = null; String str2 = null, str3 = null, str4 = null; CompositeDecoder compositeDecoder = decoder.beginStructure(serialDescriptor); KSerializer[] arrayOfKSerializer = IndexDescriptor.access$get$childSerializers$cp(); if (compositeDecoder.decodeSequentially()) { indexScope = (IndexScope)compositeDecoder.decodeSerializableElement(serialDescriptor, 0, (DeserializationStrategy)arrayOfKSerializer[0], indexScope); i |= 0x1; str1 = compositeDecoder.decodeStringElement(serialDescriptor, 1); i |= 0x2; j = compositeDecoder.decodeIntElement(serialDescriptor, 2); i |= 0x4; vectorPrecision = (VectorPrecision)compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)arrayOfKSerializer[3], vectorPrecision); i |= 0x8; indexEnvironment = (IndexEnvironment)compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)arrayOfKSerializer[4], indexEnvironment); i |= 0x10; k = compositeDecoder.decodeIntElement(serialDescriptor, 5); i |= 0x20; clusterType = (ClusterType)compositeDecoder.decodeSerializableElement(serialDescriptor, 6, (DeserializationStrategy)arrayOfKSerializer[6], clusterType); i |= 0x40; indexingAttributes = (IndexingAttributes)compositeDecoder.decodeSerializableElement(serialDescriptor, 7, (DeserializationStrategy)IndexingAttributes.$serializer.INSTANCE, indexingAttributes); i |= 0x80; str2 = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 8, (DeserializationStrategy)StringSerializer.INSTANCE, str2); i |= 0x100; str3 = compositeDecoder.decodeStringElement(serialDescriptor, 9); i |= 0x200; str4 = compositeDecoder.decodeStringElement(serialDescriptor, 10); i |= 0x400; } else { while (bool) { int m = compositeDecoder.decodeElementIndex(serialDescriptor); switch (m) { case -1: bool = false; continue;case 0: indexScope = (IndexScope)compositeDecoder.decodeSerializableElement(serialDescriptor, 0, (DeserializationStrategy)arrayOfKSerializer[0], indexScope); i |= 0x1; continue;case 1: str1 = compositeDecoder.decodeStringElement(serialDescriptor, 1); i |= 0x2; continue;case 2: j = compositeDecoder.decodeIntElement(serialDescriptor, 2); i |= 0x4; continue;case 3: vectorPrecision = (VectorPrecision)compositeDecoder.decodeSerializableElement(serialDescriptor, 3, (DeserializationStrategy)arrayOfKSerializer[3], vectorPrecision); i |= 0x8; continue;case 4: indexEnvironment = (IndexEnvironment)compositeDecoder.decodeSerializableElement(serialDescriptor, 4, (DeserializationStrategy)arrayOfKSerializer[4], indexEnvironment); i |= 0x10; continue;case 5: k = compositeDecoder.decodeIntElement(serialDescriptor, 5); i |= 0x20; continue;case 6: clusterType = (ClusterType)compositeDecoder.decodeSerializableElement(serialDescriptor, 6, (DeserializationStrategy)arrayOfKSerializer[6], clusterType); i |= 0x40; continue;case 7: indexingAttributes = (IndexingAttributes)compositeDecoder.decodeSerializableElement(serialDescriptor, 7, (DeserializationStrategy)IndexingAttributes.$serializer.INSTANCE, indexingAttributes); i |= 0x80; continue;case 8: str2 = (String)compositeDecoder.decodeNullableSerializableElement(serialDescriptor, 8, (DeserializationStrategy)StringSerializer.INSTANCE, str2); i |= 0x100; continue;case 9: str3 = compositeDecoder.decodeStringElement(serialDescriptor, 9); i |= 0x200; continue;case 10: str4 = compositeDecoder.decodeStringElement(serialDescriptor, 10); i |= 0x400; continue; }  throw new UnknownFieldException(m); }  }  compositeDecoder.endStructure(serialDescriptor); return new IndexDescriptor(i, indexScope, str1, j, vectorPrecision, indexEnvironment, k, clusterType, indexingAttributes, str2, str3, str4, null); } public void serialize(@NotNull Encoder encoder, @NotNull IndexDescriptor value) { Intrinsics.checkNotNullParameter(encoder, "encoder"); Intrinsics.checkNotNullParameter(value, "value"); SerialDescriptor serialDescriptor = getDescriptor(); CompositeEncoder compositeEncoder = encoder.beginStructure(serialDescriptor); IndexDescriptor.write$Self$model_indexing(value, compositeEncoder, serialDescriptor); compositeEncoder.endStructure(serialDescriptor); } static { PluginGeneratedSerialDescriptor pluginGeneratedSerialDescriptor = new PluginGeneratedSerialDescriptor("ai.grazie.code.indexing.model.IndexDescriptor", INSTANCE, 11); pluginGeneratedSerialDescriptor.addElement("scope", false); pluginGeneratedSerialDescriptor.addElement("embedModelId", false); pluginGeneratedSerialDescriptor.addElement("dimensions", false); pluginGeneratedSerialDescriptor.addElement("precision", false); pluginGeneratedSerialDescriptor.addElement("env", false); pluginGeneratedSerialDescriptor.addElement("version", true); pluginGeneratedSerialDescriptor.addElement("clusterType", true); pluginGeneratedSerialDescriptor.addElement("attributes", true); pluginGeneratedSerialDescriptor.addElement("uniqueName", true); pluginGeneratedSerialDescriptor.addElement("derivedName", true); pluginGeneratedSerialDescriptor.addElement("name", true); descriptor = pluginGeneratedSerialDescriptor; }
/*   */ 
/*   */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\lib\model-indexing-jvm-0.4.32.jar!\ai\grazie\code\indexing\model\IndexDescriptor$$serializer.class
 * Java compiler version: 17 (61.0)
 * JD-Core Version:       1.1.3
 */