/*     */ package androidx.compose.ui.unit;
/*     */ 
/*     */ import androidx.compose.runtime.Stable;
/*     */ import androidx.compose.ui.util.MathHelpersKt;
/*     */ import kotlin.Metadata;
/*     */ import kotlin.jvm.functions.Function0;
/*     */ import kotlin.jvm.internal.Intrinsics;
/*     */ import kotlin.jvm.internal.SourceDebugExtension;
/*     */ import kotlin.ranges.RangesKt;
/*     */ import org.jetbrains.annotations.NotNull;
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ @Metadata(mv = {1, 9, 0}, k = 2, xi = 48, d1 = {"\000B\n\000\n\002\030\002\n\002\030\002\n\002\b\005\n\002\030\002\n\002\020\006\n\002\b\004\n\002\020\007\n\002\b\002\n\002\020\b\n\002\b\003\n\002\030\002\n\002\b\005\n\002\020\013\n\002\b:\n\002\030\002\n\002\b\016\032\"\0205\032\0020\0012\006\0206\032\0020\b2\006\0207\032\0020\bH\007ø\001\000¢\006\004\b8\0209\032\"\020:\032\0020\0022\006\0202\032\0020\b2\006\020\024\032\0020\bH\007ø\001\000¢\006\004\b;\0209\032*\020<\032\0020\b2\006\020=\032\0020\b2\006\020>\032\0020\b2\006\020?\032\0020\016H\007ø\001\000¢\006\004\b@\020A\032*\020<\032\0020\0012\006\020=\032\0020\0012\006\020>\032\0020\0012\006\020?\032\0020\016H\007ø\001\000¢\006\004\bB\020C\032*\020<\032\0020\0022\006\020=\032\0020\0022\006\020>\032\0020\0022\006\020?\032\0020\016H\007ø\001\000¢\006\004\bD\020C\032#\020E\032\0020\b2\006\020F\032\0020\b2\006\020G\032\0020\bH\bø\001\000¢\006\004\bH\020I\032#\020J\032\0020\b2\006\020F\032\0020\b2\006\020G\032\0020\bH\bø\001\000¢\006\004\bK\020I\032\037\020L\032\0020\b*\0020\b2\006\020M\032\0020\bH\bø\001\000¢\006\004\bN\020I\032\037\020O\032\0020\b*\0020\b2\006\020P\032\0020\bH\bø\001\000¢\006\004\bQ\020I\032'\020R\032\0020\b*\0020\b2\006\020M\032\0020\b2\006\020P\032\0020\bH\bø\001\000¢\006\004\bS\020A\032(\020T\032\0020\b*\0020\b2\f\020U\032\b\022\004\022\0020\b0VH\bø\001\001ø\001\000¢\006\004\bW\020X\032(\020T\032\0020\001*\0020\0012\f\020U\032\b\022\004\022\0020\0010VH\bø\001\001ø\001\000¢\006\004\bY\020Z\032(\020T\032\0020\002*\0020\0022\f\020U\032\b\022\004\022\0020\0020VH\bø\001\001ø\001\000¢\006\004\b[\020Z\032\037\020\\\032\0020\b*\0020\t2\006\020]\032\0020\bH\nø\001\000¢\006\004\b^\020_\032\037\020\\\032\0020\b*\0020\0162\006\020]\032\0020\bH\nø\001\000¢\006\004\b^\020I\032\037\020\\\032\0020\002*\0020\0162\006\020.\032\0020\002H\nø\001\000¢\006\004\b`\020a\032\037\020\\\032\0020\b*\0020\0212\006\020]\032\0020\bH\nø\001\000¢\006\004\b^\020b\032\037\020\\\032\0020\002*\0020\0212\006\020.\032\0020\002H\nø\001\000¢\006\004\b`\020c\"\036\020\000\032\0020\001*\0020\0028FX\004¢\006\f\022\004\b\003\020\004\032\004\b\005\020\006\"\037\020\007\032\0020\b*\0020\t8Æ\002X\004¢\006\f\022\004\b\n\020\013\032\004\b\f\020\r\"\037\020\007\032\0020\b*\0020\0168Æ\002X\004¢\006\f\022\004\b\n\020\017\032\004\b\f\020\020\"\037\020\007\032\0020\b*\0020\0218Æ\002X\004¢\006\f\022\004\b\n\020\022\032\004\b\f\020\023\"\037\020\024\032\0020\b*\0020\0258Æ\002X\004¢\006\f\022\004\b\026\020\027\032\004\b\030\020\031\"\037\020\032\032\0020\033*\0020\b8Æ\002X\004¢\006\f\022\004\b\034\020\017\032\004\b\035\020\036\"\037\020\037\032\0020\033*\0020\b8Æ\002X\004¢\006\f\022\004\b \020\017\032\004\b!\020\036\"\037\020\037\032\0020\033*\0020\0018Æ\002X\004¢\006\f\022\004\b\"\020\004\032\004\b#\020$\"\037\020\037\032\0020\033*\0020\0028Æ\002X\004¢\006\f\022\004\b%\020\004\032\004\b&\020$\"\037\020'\032\0020\033*\0020\b8Æ\002X\004¢\006\f\022\004\b(\020\017\032\004\b)\020\036\"\037\020'\032\0020\033*\0020\0018Æ\002X\004¢\006\f\022\004\b*\020\004\032\004\b+\020$\"\037\020'\032\0020\033*\0020\0028Æ\002X\004¢\006\f\022\004\b,\020\004\032\004\b-\020$\"\037\020.\032\0020\002*\0020\0258Æ\002X\004¢\006\f\022\004\b/\020\027\032\004\b0\0201\"\037\0202\032\0020\b*\0020\0258Æ\002X\004¢\006\f\022\004\b3\020\027\032\004\b4\020\031\002\016\n\005\b¡\0360\001\n\005\b20\001¨\006d"}, d2 = {"center", "Landroidx/compose/ui/unit/DpOffset;", "Landroidx/compose/ui/unit/DpSize;", "getCenter-EaSLcWc$annotations", "(J)V", "getCenter-EaSLcWc", "(J)J", "dp", "Landroidx/compose/ui/unit/Dp;", "", "getDp$annotations", "(D)V", "getDp", "(D)F", "", "(F)V", "(F)F", "", "(I)V", "(I)F", "height", "Landroidx/compose/ui/unit/DpRect;", "getHeight$annotations", "(Landroidx/compose/ui/unit/DpRect;)V", "getHeight", "(Landroidx/compose/ui/unit/DpRect;)F", "isFinite", "", "isFinite-0680j_4$annotations", "isFinite-0680j_4", "(F)Z", "isSpecified", "isSpecified-0680j_4$annotations", "isSpecified-0680j_4", "isSpecified-jo-Fl9I$annotations", "isSpecified-jo-Fl9I", "(J)Z", "isSpecified-EaSLcWc$annotations", "isSpecified-EaSLcWc", "isUnspecified", "isUnspecified-0680j_4$annotations", "isUnspecified-0680j_4", "isUnspecified-jo-Fl9I$annotations", "isUnspecified-jo-Fl9I", "isUnspecified-EaSLcWc$annotations", "isUnspecified-EaSLcWc", "size", "getSize$annotations", "getSize", "(Landroidx/compose/ui/unit/DpRect;)J", "width", "getWidth$annotations", "getWidth", "DpOffset", "x", "y", "DpOffset-YgX7TsA", "(FF)J", "DpSize", "DpSize-YgX7TsA", "lerp", "start", "stop", "fraction", "lerp-Md-fbLM", "(FFF)F", "lerp-xhh869w", "(JJF)J", "lerp-IDex15A", "max", "a", "b", "max-YgX7TsA", "(FF)F", "min", "min-YgX7TsA", "coerceAtLeast", "minimumValue", "coerceAtLeast-YgX7TsA", "coerceAtMost", "maximumValue", "coerceAtMost-YgX7TsA", "coerceIn", "coerceIn-2z7ARbQ", "takeOrElse", "block", "Lkotlin/Function0;", "takeOrElse-D5KLDUw", "(FLkotlin/jvm/functions/Function0;)F", "takeOrElse-gVKV90s", "(JLkotlin/jvm/functions/Function0;)J", "takeOrElse-itqla9I", "times", "other", "times-3ABfNKs", "(DF)F", "times-6HolHcs", "(FJ)J", "(IF)F", "(IJ)J", "ui-unit"})
/*     */ @SourceDebugExtension({"SMAP\nDp.kt\nKotlin\n*S Kotlin\n*F\n+ 1 Dp.kt\nandroidx/compose/ui/unit/DpKt\n+ 2 InlineClassHelper.kt\nandroidx/compose/ui/util/InlineClassHelperKt\n+ 3 Dp.kt\nandroidx/compose/ui/unit/Dp\n*L\n1#1,577:1\n125#1:578\n325#1:582\n483#1:589\n564#1:600\n570#1:602\n63#2,3:579\n63#2,3:583\n63#2,3:586\n63#2,3:592\n63#2,3:595\n69#3:590\n69#3:591\n57#3:598\n57#3:599\n57#3:601\n*S KotlinDebug\n*F\n+ 1 Dp.kt\nandroidx/compose/ui/unit/DpKt\n*L\n139#1:578\n339#1:582\n497#1:589\n576#1:600\n576#1:602\n249#1:579,3\n355#1:583,3\n365#1:586,3\n506#1:592,3\n531#1:595,3\n507#1:590\n508#1:591\n564#1:598\n570#1:599\n576#1:601\n*E\n"})
/*     */ public final class DpKt
/*     */ {
/*     */   public static final boolean isSpecified-0680j_4(float $this$isSpecified) {
/* 125 */     int $i$f$isSpecified-0680j_4 = 0; return !Float.isNaN($this$isSpecified);
/*     */   }
/*     */ 
/*     */ 
/*     */ 
/*     */   
/*     */   public static final boolean isUnspecified-0680j_4(float $this$isUnspecified) {
/* 132 */     int $i$f$isUnspecified-0680j_4 = 0; return Float.isNaN($this$isUnspecified);
/*     */   } public static final float getDp(int $this$dp) { int $i$f$getDp = 0; return Dp.constructor-impl($this$dp); } public static final float getDp(double $this$dp) { int $i$f$getDp = 0; return Dp.constructor-impl((float)$this$dp); }
/*     */   public static final float getDp(float $this$dp) { int $i$f$getDp = 0; return Dp.constructor-impl($this$dp); }
/*     */   @Stable public static final float times-3ABfNKs(float $this$times_u2d3ABfNKs, float other) { int $i$f$times-3ABfNKs = 0; return Dp.constructor-impl($this$times_u2d3ABfNKs * other); }
/*     */   @Stable public static final float times-3ABfNKs(double $this$times_u2d3ABfNKs, float other) { int $i$f$times-3ABfNKs = 0; return Dp.constructor-impl((float)$this$times_u2d3ABfNKs * other); }
/*     */   @Stable public static final float times-3ABfNKs(int $this$times_u2d3ABfNKs, float other) { int $i$f$times-3ABfNKs = 0; return Dp.constructor-impl($this$times_u2d3ABfNKs * other); }
/*     */   @Stable public static final float min-YgX7TsA(float a, float b) { int $i$f$min-YgX7TsA = 0; return Dp.constructor-impl(Math.min(a, b)); }
/* 139 */   public static final float takeOrElse-D5KLDUw(float $this$takeOrElse_u2dD5KLDUw, @NotNull Function0 block) { Intrinsics.checkNotNullParameter(block, "block"); int $i$f$takeOrElse-D5KLDUw = 0; float $this$isSpecified$iv = $this$takeOrElse_u2dD5KLDUw; int $i$f$isSpecified-0680j_4 = 0; return 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */ 
/*     */       
/* 578 */       (!Float.isNaN($this$isSpecified$iv)) ? $this$takeOrElse_u2dD5KLDUw : ((Dp)block.invoke()).unbox-impl(); }
/* 579 */   @Stable public static final float max-YgX7TsA(float a, float b) { int $i$f$max-YgX7TsA = 0; return Dp.constructor-impl(Math.max(a, b)); } @Stable public static final float coerceIn-2z7ARbQ(float $this$coerceIn_u2d2z7ARbQ, float minimumValue, float maximumValue) { int $i$f$coerceIn-2z7ARbQ = 0; return Dp.constructor-impl(RangesKt.coerceIn($this$coerceIn_u2d2z7ARbQ, minimumValue, maximumValue)); } @Stable public static final float coerceAtLeast-YgX7TsA(float $this$coerceAtLeast_u2dYgX7TsA, float minimumValue) { int $i$f$coerceAtLeast-YgX7TsA = 0; return Dp.constructor-impl(RangesKt.coerceAtLeast($this$coerceAtLeast_u2dYgX7TsA, minimumValue)); } @Stable public static final long DpOffset-YgX7TsA(float x, float y) { float f1 = x, val2$iv = y; int $i$f$packFloats = 0; long v1$iv = Float.floatToRawIntBits(f1);
/* 580 */     long v2$iv = Float.floatToRawIntBits(val2$iv);
/* 581 */     return DpOffset.constructor-impl(v1$iv << 32L | v2$iv & 0xFFFFFFFFL); }
/* 582 */   @Stable public static final float coerceAtMost-YgX7TsA(float $this$coerceAtMost_u2dYgX7TsA, float maximumValue) { int $i$f$coerceAtMost-YgX7TsA = 0; return Dp.constructor-impl(RangesKt.coerceAtMost($this$coerceAtMost_u2dYgX7TsA, maximumValue)); } public static final boolean isFinite-0680j_4(float $this$isFinite) { int $i$f$isFinite-0680j_4 = 0; return !(($this$isFinite == Float.POSITIVE_INFINITY) ? 1 : 0); } @Stable public static final float lerp-Md-fbLM(float start, float stop, float fraction) { return Dp.constructor-impl(MathHelpersKt.lerp(start, stop, fraction)); } public static final boolean isSpecified-jo-Fl9I(long $this$isSpecified) { int $i$f$isSpecified-jo-Fl9I = 0; return ($this$isSpecified != 9205357640488583168L); } public static final boolean isUnspecified-jo-Fl9I(long $this$isUnspecified) { int $i$f$isUnspecified-jo-Fl9I = 0; return ($this$isUnspecified == 9205357640488583168L); } public static final long takeOrElse-gVKV90s(long $this$takeOrElse_u2dgVKV90s, @NotNull Function0 block) { Intrinsics.checkNotNullParameter(block, "block"); int $i$f$takeOrElse-gVKV90s = 0; long $this$isSpecified$iv = $this$takeOrElse_u2dgVKV90s; int $i$f$isSpecified-jo-Fl9I = 0; return (($this$isSpecified$iv != 9205357640488583168L)) ? $this$takeOrElse_u2dgVKV90s : ((DpOffset)block.invoke()).unbox-impl(); } @Stable public static final long lerp-xhh869w(long start, long stop, float fraction) { float f1 = MathHelpersKt.lerp(DpOffset.getX-D9Ej5fM(start), DpOffset.getX-D9Ej5fM(stop), fraction); float val2$iv = MathHelpersKt.lerp(DpOffset.getY-D9Ej5fM(start), DpOffset.getY-D9Ej5fM(stop), fraction); int $i$f$packFloats = 0;
/* 583 */     long v1$iv = Float.floatToRawIntBits(f1);
/* 584 */     long v2$iv = Float.floatToRawIntBits(val2$iv);
/* 585 */     return DpOffset.constructor-impl(v1$iv << 32L | v2$iv & 0xFFFFFFFFL); } @Stable public static final long DpSize-YgX7TsA(float width, float height) { float f1 = width, val2$iv = height; int $i$f$packFloats = 0;
/* 586 */     long v1$iv = Float.floatToRawIntBits(f1);
/* 587 */     long v2$iv = Float.floatToRawIntBits(val2$iv);
/* 588 */     return DpSize.constructor-impl(v1$iv << 32L | v2$iv & 0xFFFFFFFFL); } public static final boolean isSpecified-EaSLcWc(long $this$isSpecified) { int $i$f$isSpecified-EaSLcWc = 0; return ($this$isSpecified != 9205357640488583168L); } public static final boolean isUnspecified-EaSLcWc(long $this$isUnspecified) { int $i$f$isUnspecified-EaSLcWc = 0; return ($this$isUnspecified == 9205357640488583168L); }
/* 589 */   public static final long takeOrElse-itqla9I(long $this$takeOrElse_u2ditqla9I, @NotNull Function0 block) { Intrinsics.checkNotNullParameter(block, "block"); int $i$f$takeOrElse-itqla9I = 0; long $this$isSpecified$iv = $this$takeOrElse_u2ditqla9I; int $i$f$isSpecified-EaSLcWc = 0; return (($this$isSpecified$iv != 9205357640488583168L)) ? $this$takeOrElse_u2ditqla9I : ((DpSize)block.invoke()).unbox-impl(); } public static final long getCenter-EaSLcWc(long $this$center) { float f1 = DpSize.getWidth-D9Ej5fM($this$center), other$iv = 2.0F; int $i$f$div-u2uoSUM = 0;
/* 590 */     float arg0$iv = Dp.constructor-impl(f1 / other$iv); other$iv = DpSize.getHeight-D9Ej5fM($this$center); float f3 = 2.0F; int i = 0;
/* 591 */     float f2 = Dp.constructor-impl(other$iv / f3); int $i$f$packFloats = 0;
/* 592 */     long v1$iv = Float.floatToRawIntBits(arg0$iv);
/* 593 */     long v2$iv = Float.floatToRawIntBits(f2);
/* 594 */     return DpOffset.constructor-impl(v1$iv << 32L | v2$iv & 0xFFFFFFFFL); } @Stable public static final long times-6HolHcs(int $this$times_u2d6HolHcs, long size) { int $i$f$times-6HolHcs = 0; return DpSize.times-Gh9hcWk(size, $this$times_u2d6HolHcs); } @Stable public static final long times-6HolHcs(float $this$times_u2d6HolHcs, long size) { int $i$f$times-6HolHcs = 0; return DpSize.times-Gh9hcWk(size, $this$times_u2d6HolHcs); }
/* 595 */   @Stable public static final long lerp-IDex15A(long start, long stop, float fraction) { float f1 = lerp-Md-fbLM(DpSize.getWidth-D9Ej5fM(start), DpSize.getWidth-D9Ej5fM(stop), fraction); float val2$iv = lerp-Md-fbLM(DpSize.getHeight-D9Ej5fM(start), DpSize.getHeight-D9Ej5fM(stop), fraction); int $i$f$packFloats = 0; long v1$iv = Float.floatToRawIntBits(f1);
/* 596 */     long v2$iv = Float.floatToRawIntBits(val2$iv);
/* 597 */     return DpSize.constructor-impl(v1$iv << 32L | v2$iv & 0xFFFFFFFFL); } public static final float getWidth(@NotNull DpRect $this$width) { Intrinsics.checkNotNullParameter($this$width, "<this>"); int $i$f$getWidth = 0; float f1 = $this$width.getRight-D9Ej5fM(), other$iv = $this$width.getLeft-D9Ej5fM(); int $i$f$minus-5rwHm24 = 0;
/* 598 */     return Dp.constructor-impl(f1 - other$iv); } public static final float getHeight(@NotNull DpRect $this$height) { Intrinsics.checkNotNullParameter($this$height, "<this>"); int $i$f$getHeight = 0; float f1 = $this$height.getBottom-D9Ej5fM(), other$iv = $this$height.getTop-D9Ej5fM(); int $i$f$minus-5rwHm24 = 0;
/* 599 */     return Dp.constructor-impl(f1 - other$iv); } public static final long getSize(@NotNull DpRect $this$size) { Intrinsics.checkNotNullParameter($this$size, "<this>"); int $i$f$getSize = 0; DpRect $this$width$iv = $this$size; int $i$f$getWidth = 0;
/* 600 */     float f1 = $this$width$iv.getRight-D9Ej5fM(), other$iv$iv = $this$width$iv.getLeft-D9Ej5fM(); int $i$f$minus-5rwHm24 = 0; DpRect $this$height$iv = $this$size;
/*     */     int $i$f$getHeight = 0;
/* 602 */     float arg0$iv$iv = $this$height$iv.getBottom-D9Ej5fM(); other$iv$iv = $this$height$iv.getTop-D9Ej5fM(); $i$f$minus-5rwHm24 = 0;
/*     */     return DpSize-YgX7TsA(Dp.constructor-impl(f1 - other$iv$iv), Dp.constructor-impl(arg0$iv$iv - other$iv$iv)); }
/*     */ 
/*     */ }


/* Location:              C:\Users\yuzum\Downloads\ej-release-243.132.63.zip!\ej\li\\ui-unit-desktop-1.7.3.jar!\androidx\compos\\u\\unit\DpKt.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */